2023-10-19 21:00:09.132 +00:00 [INF] Initializing RabbitMQ connection manager for transport with input queue "cc.disco.data.response.disco-test-client-2.q"
2023-10-19 21:00:10.898 +00:00 [INF] Starting periodic task "CleanupTrackedErrors" with interval 00:00:10
2023-10-19 21:00:10.920 +00:00 [INF] Bus "onDemandDataResponseBus" started
2023-10-19 21:00:10.923 +00:00 [INF] Successfully created bus instance RebusBus onDemandDataResponseBus (isDefaultBus: false)
2023-10-19 21:00:10.950 +00:00 [INF] Bus "onDemandDataResponseBus" setting number of workers to 1
2023-10-19 21:00:10.969 +00:00 [INF] Initializing RabbitMQ connection manager for transport with input queue "cc.disco.schedule.response.disco-test-client-2.q"
2023-10-19 21:00:11.028 +00:00 [INF] Successfully initialized consumer for "cc.disco.data.response.disco-test-client-2.q"
2023-10-19 21:00:12.121 +00:00 [INF] Starting periodic task "CleanupTrackedErrors" with interval 00:00:10
2023-10-19 21:00:12.170 +00:00 [INF] Bus "scheduleResponseBus" started
2023-10-19 21:00:12.172 +00:00 [INF] Successfully created bus instance RebusBus scheduleResponseBus (isDefaultBus: false)
2023-10-19 21:00:12.214 +00:00 [INF] Bus "scheduleResponseBus" setting number of workers to 1
2023-10-19 21:00:12.247 +00:00 [INF] Initializing RabbitMQ connection manager for transport with input queue "cc.disco.get-schedules.response.disco-test-client-2.q"
2023-10-19 21:00:12.266 +00:00 [INF] Successfully initialized consumer for "cc.disco.schedule.response.disco-test-client-2.q"
2023-10-19 21:00:13.485 +00:00 [INF] Starting periodic task "CleanupTrackedErrors" with interval 00:00:10
2023-10-19 21:00:13.513 +00:00 [INF] Bus "getScheduleResponseBus" started
2023-10-19 21:00:13.513 +00:00 [INF] Successfully created bus instance RebusBus getScheduleResponseBus (isDefaultBus: false)
2023-10-19 21:00:13.544 +00:00 [INF] Bus "getScheduleResponseBus" setting number of workers to 1
2023-10-19 21:00:13.569 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2023-10-19 21:00:13.569 +00:00 [INF] Hosting environment: Production
2023-10-19 21:00:13.569 +00:00 [INF] Content root path: C:\ABS\TestClient\LoadTest
2023-10-19 21:00:13.585 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleDraftRangeLocalRequestConfig.json
2023-10-19 21:00:13.603 +00:00 [INF] Successfully initialized consumer for "cc.disco.get-schedules.response.disco-test-client-2.q"
2023-10-19 21:00:13.679 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:13.869 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-sdrl",
    "scheduleId": "disco-test-client-2_sa-20359-sdrl",
    "destination": "Local",
    "scheduleRange": {
      "cronExpression": "0/5 * * ? ?",
      "start": "23:59:59.999",
      "end": "00:00:00.000",
      "intervalMilliseconds": "360000"
    },
    "draftDataTypes": {
      "dataType": [
        "Unknown",
        "MeanDraft",
        "AftDraft",
        "ForwardDraft",
        "MidshipDraftPort",
        "MidshipDraftStarboard",
        "Trim"
      ]
    }
  }
2023-10-19 21:00:13.883 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-64-72-6C-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-64-72-6C-20-01-D2-3E-2D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-12-0C-32-33-3A-35-39-3A-35-39-2E-39-39-39-1A-0C-30-30-3A-30-30-3A-30-30-2E-30-30-30-20-C0-FC-15-8A-7D-09-0A-07-00-01-02-03-04-05-06
2023-10-19 21:00:13.888 +00:00 [INF] Initializing RabbitMQ connection manager for one-way transport
2023-10-19 21:00:15.061 +00:00 [INF] Bus "createScheduleBus" started
2023-10-19 21:00:15.127 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:15.137 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleDraftRangeLocalRequestConfig.json handling has been finished.
2023-10-19 21:00:15.138 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleDraftRangeRemoteRequestConfig.json
2023-10-19 21:00:15.151 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:15.151 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-sdrr",
    "scheduleId": "disco-test-client-2_sa-20359-sdrr",
    "destination": "Remote",
    "scheduleRange": {
      "cronExpression": "0/5 * * ? ?",
      "start": "23:59:59.999",
      "end": "00:00:00.000",
      "intervalMilliseconds": "360000"
    },
    "draftDataTypes": {
      "dataType": [
        "Unknown",
        "MeanDraft",
        "AftDraft",
        "ForwardDraft",
        "MidshipDraftPort",
        "MidshipDraftStarboard",
        "Trim"
      ]
    }
  }
2023-10-19 21:00:15.151 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-64-72-72-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-64-72-72-20-02-D2-3E-2D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-12-0C-32-33-3A-35-39-3A-35-39-2E-39-39-39-1A-0C-30-30-3A-30-30-3A-30-30-2E-30-30-30-20-C0-FC-15-8A-7D-09-0A-07-00-01-02-03-04-05-06
2023-10-19 21:00:15.161 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:15.167 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleDraftRangeRemoteRequestConfig.json handling has been finished.
2023-10-19 21:00:15.167 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleDraftSingleLocalRequestConfig.json
2023-10-19 21:00:15.187 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:15.188 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-sdsl",
    "scheduleId": "disco-test-client-2_sa-20359-sdsl",
    "destination": "Local",
    "scheduleSingle": {
      "cronExpression": "0/5 * * ? ?"
    },
    "draftDataTypes": {
      "dataType": [
        "Unknown",
        "MeanDraft",
        "AftDraft",
        "ForwardDraft",
        "MidshipDraftPort",
        "MidshipDraftStarboard",
        "Trim"
      ]
    }
  }
2023-10-19 21:00:15.189 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-64-73-6C-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-64-73-6C-20-01-CA-3E-0D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-8A-7D-09-0A-07-00-01-02-03-04-05-06
2023-10-19 21:00:15.200 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:15.697 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-sdrl", "scheduleId": "disco-test-client-2_sa-20359-sdrl", "executed": "2023-10-19T21:00:15.120047400Z" }
2023-10-19 21:00:15.812 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-sdrr", "scheduleId": "disco-test-client-2_sa-20359-sdrr", "executed": "2023-10-19T21:00:15.158289100Z" }
2023-10-19 21:00:15.884 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-sdsl", "scheduleId": "disco-test-client-2_sa-20359-sdsl", "executed": "2023-10-19T21:00:15.204160500Z" }
2023-10-19 21:00:16.284 +00:00 [INF] Binary is sent 2-st time
2023-10-19 21:00:17.282 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleDraftSingleLocalRequestConfig.json handling has been finished.
2023-10-19 21:00:17.283 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleDraftSingleRemoteRequestConfig.json
2023-10-19 21:00:17.303 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:17.303 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-sdsr",
    "scheduleId": "disco-test-client-2_sa-20359-sdsr",
    "destination": "Remote",
    "scheduleSingle": {
      "cronExpression": "0/5 * * ? ?"
    },
    "draftDataTypes": {
      "dataType": [
        "Unknown",
        "MeanDraft",
        "AftDraft",
        "ForwardDraft",
        "MidshipDraftPort",
        "MidshipDraftStarboard",
        "Trim"
      ]
    }
  }
2023-10-19 21:00:17.303 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-64-73-72-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-64-73-72-20-02-CA-3E-0D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-8A-7D-09-0A-07-00-01-02-03-04-05-06
2023-10-19 21:00:17.337 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:18.337 +00:00 [INF] Binary is sent 2-st time
2023-10-19 21:00:18.897 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-sdsr", "scheduleId": "disco-test-client-2_sa-20359-sdsr", "executed": "2023-10-19T21:00:17.323177Z" }
2023-10-19 21:00:19.381 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleDraftSingleRemoteRequestConfig.json handling has been finished.
2023-10-19 21:00:19.381 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleLocationRangeLocalRequestConfig.json
2023-10-19 21:00:19.402 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:19.404 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-slrl",
    "scheduleId": "disco-test-client-2_sa-20359-slrl",
    "destination": "Local",
    "scheduleRange": {
      "cronExpression": "0/5 * * ? ?",
      "start": "23:59:59.999",
      "end": "00:00:00.000",
      "intervalMilliseconds": "360000"
    },
    "locationDataTypes": {
      "dataType": [
        "Unknown",
        "Latitude",
        "Longitude"
      ]
    }
  }
2023-10-19 21:00:19.405 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-6C-72-6C-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-6C-72-6C-20-01-D2-3E-2D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-12-0C-32-33-3A-35-39-3A-35-39-2E-39-39-39-1A-0C-30-30-3A-30-30-3A-30-30-2E-30-30-30-20-C0-FC-15-92-7D-05-0A-03-00-01-02
2023-10-19 21:00:19.438 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:19.445 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleLocationRangeLocalRequestConfig.json handling has been finished.
2023-10-19 21:00:19.445 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleLocationRangeRemoteRequestConfig.json
2023-10-19 21:00:19.466 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:19.467 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-slrr",
    "scheduleId": "disco-test-client-2_sa-20359-slrr",
    "destination": "Remote",
    "scheduleRange": {
      "cronExpression": "0/5 * * ? ?",
      "start": "23:59:59.999",
      "end": "00:00:00.000",
      "intervalMilliseconds": "360000"
    },
    "locationDataTypes": {
      "dataType": [
        "Unknown",
        "Latitude",
        "Longitude"
      ]
    }
  }
2023-10-19 21:00:19.467 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-6C-72-72-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-6C-72-72-20-02-D2-3E-2D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-12-0C-32-33-3A-35-39-3A-35-39-2E-39-39-39-1A-0C-30-30-3A-30-30-3A-30-30-2E-30-30-30-20-C0-FC-15-92-7D-05-0A-03-00-01-02
2023-10-19 21:00:19.480 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:19.493 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleLocationRangeRemoteRequestConfig.json handling has been finished.
2023-10-19 21:00:19.493 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleLocationSingleLocalRequestConfig.json
2023-10-19 21:00:19.514 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:19.514 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-slsl",
    "scheduleId": "disco-test-client-2_sa-20359-slsl",
    "destination": "Local",
    "scheduleSingle": {
      "cronExpression": "0/5 * * ? ?"
    },
    "locationDataTypes": {
      "dataType": [
        "Unknown",
        "Latitude",
        "Longitude"
      ]
    }
  }
2023-10-19 21:00:19.514 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-6C-73-6C-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-6C-73-6C-20-01-CA-3E-0D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-92-7D-05-0A-03-00-01-02
2023-10-19 21:00:19.525 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:19.543 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleLocationSingleLocalRequestConfig.json handling has been finished.
2023-10-19 21:00:19.544 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleLocationSingleRemoteRequestConfig.json
2023-10-19 21:00:19.572 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:19.573 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-slsr",
    "scheduleId": "disco-test-client-2_sa-20359-slsr",
    "destination": "Remote",
    "scheduleSingle": {
      "cronExpression": "0/5 * * ? ?"
    },
    "locationDataTypes": {
      "dataType": [
        "Unknown",
        "Latitude",
        "Longitude"
      ]
    }
  }
2023-10-19 21:00:19.573 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-6C-73-72-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-6C-73-72-20-02-CA-3E-0D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-92-7D-05-0A-03-00-01-02
2023-10-19 21:00:19.591 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:19.602 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleLocationSingleRemoteRequestConfig.json handling has been finished.
2023-10-19 21:00:19.602 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleWeatherRangeLocalRequestConfig.json
2023-10-19 21:00:19.630 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:19.632 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-swrl",
    "scheduleId": "disco-test-client-2_sa-20359-swrl",
    "destination": "Local",
    "scheduleRange": {
      "cronExpression": "0/5 * * ? ?",
      "start": "23:59:59.999",
      "end": "00:00:00.000",
      "intervalMilliseconds": "360000"
    },
    "weatherDataTypes": {
      "dataType": [
        "Unknown",
        "WetTemperature",
        "DryTemperature",
        "RelativeWindSpeed",
        "TrueWindDirection",
        "SeaWaterTemperature",
        "SeaWaterDepth",
        "AirPressure",
        "RelativeHumidity",
        "Swell",
        "SeaScale"
      ]
    }
  }
2023-10-19 21:00:19.634 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-77-72-6C-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-77-72-6C-20-01-D2-3E-2D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-12-0C-32-33-3A-35-39-3A-35-39-2E-39-39-39-1A-0C-30-30-3A-30-30-3A-30-30-2E-30-30-30-20-C0-FC-15-A2-7D-0D-0A-0B-00-01-02-04-05-06-07-08-09-0A-0B
2023-10-19 21:00:19.648 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:19.666 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleWeatherRangeLocalRequestConfig.json handling has been finished.
2023-10-19 21:00:19.666 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleWeatherRangeRemoteRequestConfig.json
2023-10-19 21:00:19.695 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:19.696 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-swrr",
    "scheduleId": "disco-test-client-2_sa-20359-swrr",
    "destination": "Remote",
    "scheduleRange": {
      "cronExpression": "0/5 * * ? ?",
      "start": "23:59:59.999",
      "end": "00:00:00.000",
      "intervalMilliseconds": "360000"
    },
    "weatherDataTypes": {
      "dataType": [
        "Unknown",
        "WetTemperature",
        "DryTemperature",
        "RelativeWindSpeed",
        "TrueWindDirection",
        "SeaWaterTemperature",
        "SeaWaterDepth",
        "AirPressure",
        "RelativeHumidity",
        "Swell",
        "SeaScale"
      ]
    }
  }
2023-10-19 21:00:19.696 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-77-72-72-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-77-72-72-20-02-D2-3E-2D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-12-0C-32-33-3A-35-39-3A-35-39-2E-39-39-39-1A-0C-30-30-3A-30-30-3A-30-30-2E-30-30-30-20-C0-FC-15-A2-7D-0D-0A-0B-00-01-02-04-05-06-07-08-09-0A-0B
2023-10-19 21:00:19.707 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:19.711 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleWeatherRangeRemoteRequestConfig.json handling has been finished.
2023-10-19 21:00:19.711 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleWeatherSingleLocalRequestConfig.json
2023-10-19 21:00:19.740 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:19.741 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-swsl",
    "scheduleId": "disco-test-client-2_sa-20359-swsl",
    "destination": "Local",
    "scheduleSingle": {
      "cronExpression": "0/5 * * ? ?"
    },
    "weatherDataTypes": {
      "dataType": [
        "Unknown",
        "WetTemperature",
        "DryTemperature",
        "RelativeWindSpeed",
        "TrueWindDirection",
        "SeaWaterTemperature",
        "SeaWaterDepth",
        "AirPressure",
        "RelativeHumidity",
        "Swell",
        "SeaScale"
      ]
    }
  }
2023-10-19 21:00:19.741 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-77-73-6C-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-77-73-6C-20-01-CA-3E-0D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-A2-7D-0D-0A-0B-00-01-02-04-05-06-07-08-09-0A-0B
2023-10-19 21:00:19.754 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:19.758 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleWeatherSingleLocalRequestConfig.json handling has been finished.
2023-10-19 21:00:19.758 +00:00 [INF] Handling file C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleWeatherSingleRemoteRequestConfig.json
2023-10-19 21:00:19.775 +00:00 [INF] Defined as create schedule request
2023-10-19 21:00:19.775 +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: {
    "requestId": "disco-test-client-2_sa-20359-swsr",
    "scheduleId": "disco-test-client-2_sa-20359-swsr",
    "destination": "Remote",
    "scheduleSingle": {
      "cronExpression": "0/5 * * ? ?"
    },
    "weatherDataTypes": {
      "dataType": [
        "Unknown",
        "WetTemperature",
        "DryTemperature",
        "RelativeWindSpeed",
        "TrueWindDirection",
        "SeaWaterTemperature",
        "SeaWaterDepth",
        "AirPressure",
        "RelativeHumidity",
        "Swell",
        "SeaScale"
      ]
    }
  }
2023-10-19 21:00:19.775 +00:00 [INF] Sending binary: 0A-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-77-73-72-12-21-64-69-73-63-6F-2D-74-65-73-74-2D-63-6C-69-65-6E-74-2D-32-5F-73-61-2D-32-30-33-35-39-2D-73-77-73-72-20-02-CA-3E-0D-0A-0B-30-2F-35-20-2A-20-2A-20-3F-20-3F-A2-7D-0D-0A-0B-00-01-02-04-05-06-07-08-09-0A-0B
2023-10-19 21:00:19.782 +00:00 [INF] Binary is sent 1-th time
2023-10-19 21:00:19.790 +00:00 [INF] File C:\ABS\TestClient\LoadTest\disco-test-client-2\Schedule\disco-test-client-2_ScheduleWeatherSingleRemoteRequestConfig.json handling has been finished.
2023-10-19 21:00:24.239 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slrl", "scheduleId": "disco-test-client-2_sa-20359-slrl", "executed": "2023-10-19T21:00:23.975398Z" }
2023-10-19 21:00:24.854 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slrr", "scheduleId": "disco-test-client-2_sa-20359-slrr", "executed": "2023-10-19T21:00:24.529704700Z" }
2023-10-19 21:00:25.215 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slsl", "scheduleId": "disco-test-client-2_sa-20359-slsl", "executed": "2023-10-19T21:00:24.912256100Z" }
2023-10-19 21:00:25.566 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slsr", "scheduleId": "disco-test-client-2_sa-20359-slsr", "executed": "2023-10-19T21:00:25.304469700Z" }
2023-10-19 21:00:25.784 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swrl", "scheduleId": "disco-test-client-2_sa-20359-swrl", "executed": "2023-10-19T21:00:25.579486500Z" }
2023-10-19 21:00:26.013 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swrr", "scheduleId": "disco-test-client-2_sa-20359-swrr", "executed": "2023-10-19T21:00:25.790217500Z" }
2023-10-19 21:00:26.259 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swsl", "scheduleId": "disco-test-client-2_sa-20359-swsl", "executed": "2023-10-19T21:00:26.020608500Z" }
2023-10-19 21:00:26.888 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swsr", "scheduleId": "disco-test-client-2_sa-20359-swsr", "executed": "2023-10-19T21:00:26.509646Z" }
2023-10-19 21:09:05.156 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.158 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.159 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.159 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.159 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.159 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.159 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.160 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.160 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.160 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.251 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.251 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.264 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.272 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.274 +00:00 [WRN] Closed channel detected - consumer will be disposed
2023-10-19 21:09:05.578 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:05.689 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:05.689 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:07.626 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:07.735 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:07.750 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:08.628 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:08.737 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:08.753 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:09.639 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:09.746 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:09.762 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:10.661 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:10.772 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:10.772 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:11.669 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:11.778 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:11.779 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:12.685 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:12.797 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:12.798 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:13.726 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:13.866 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:13.866 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:14.740 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:14.881 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:14.881 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:15.743 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:15.883 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:15.883 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:16.777 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:16.918 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:16.918 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:17.778 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:17.934 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:17.934 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:18.794 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:18.951 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:18.951 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:19.826 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:19.967 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:19.968 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:21.855 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:21.996 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:21.996 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:40.113 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:40.269 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:40.270 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:42.175 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:42.315 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:42.316 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:43.190 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:43.331 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:43.331 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:44.200 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:44.340 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:44.341 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:45.231 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:45.370 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:45.371 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:46.247 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:46.386 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:46.386 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:47.248 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:47.389 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:47.389 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:48.286 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:48.427 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:48.427 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:49.301 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:49.442 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:49.442 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:50.310 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:50.451 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:50.452 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:51.341 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:51.481 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:51.497 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:52.343 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:52.484 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:52.499 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:09:53.356 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:53.497 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:53.512 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 endpoints)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:54.389 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:54.514 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:54.514 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:09:56.396 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:56.524 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:09:56.524 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, ArrayPool`1 pool, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:14.635 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:14.763 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:14.810 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:16.652 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:16.794 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:16.839 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:17.667 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:17.810 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:17.855 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:18.669 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:18.825 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:18.872 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:19.731 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:19.857 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:19.904 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:20.731 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:20.872 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:20.919 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:21.745 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:21.886 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:21.928 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:22.783 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:22.923 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:22.970 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:23.798 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:23.939 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:23.985 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:24.815 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:24.957 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:24.986 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:25.846 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:25.972 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:26.035 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:26.852 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:26.977 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:27.040 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:27.854 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:27.979 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:28.045 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:28.885 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:29.011 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:29.073 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:30.903 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:31.028 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:31.090 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:49.191 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:49.191 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:49.300 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:51.230 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:51.230 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:51.323 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:52.234 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:52.235 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:52.327 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:53.234 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:53.234 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:53.328 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:54.269 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:54.269 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:54.379 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:55.284 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:55.285 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:55.393 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:56.296 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:56.297 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:56.412 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:57.336 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:57.336 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:57.434 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:10:58.356 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:58.357 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:58.450 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:10:59.362 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:59.363 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:10:59.465 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:11:00.419 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:11:00.419 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:11:00.500 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:11:01.426 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:11:01.426 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:11:01.509 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:11:02.434 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:11:02.435 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:11:02.523 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:11:20.963 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:11:20.964 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:11:21.042 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:11:22.982 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:11:22.983 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:11:23.060 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:11:23.525 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:11:23.525 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:11:23.603 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:11:45.560 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:11:45.575 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:11:45.638 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:11:46.574 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:11:46.589 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:11:46.652 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:11:47.583 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:11:47.599 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:11:47.661 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:12:08.689 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:12:08.691 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:12:08.775 +00:00 [WRN] Could not establish connection: "None of the specified endpoints were reachable"
2023-10-19 21:12:09.712 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:12:09.712 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:12:09.777 +00:00 [INF] Existing connection found to be CLOSED
2023-10-19 21:12:10.724 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:12:10.724 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:12:10.812 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at Rebus.Internals.ConnectionManager.GetConnection()
   at Rebus.RabbitMq.RabbitMqTransport.CreateChannel()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:12:11.967 +00:00 [WRN] Queue not found - attempting to recreate queue and restore subscriptions.
2023-10-19 21:12:12.037 +00:00 [WRN] Queue not found - attempting to recreate queue and restore subscriptions.
2023-10-19 21:12:12.088 +00:00 [WRN] Queue not found - attempting to recreate queue and restore subscriptions.
2023-10-19 21:13:12.082 +00:00 [WRN] Queue not found - attempting to recreate queue and restore subscriptions.
2023-10-19 21:13:12.688 +00:00 [WRN] Queue not found - attempting to recreate queue and restore subscriptions.
2023-10-19 21:13:12.688 +00:00 [WRN] Queue not found - attempting to recreate queue and restore subscriptions.
2023-10-19 21:13:13.068 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.get-schedules.response.disco-test-client-2.q
 ---> Rebus.Exceptions.RebusApplicationException: Queue declaration for 'cc.disco.get-schedules.response.disco-test-client-2.q' failed
 ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=20
   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)
   at RabbitMQ.Client.Impl.ModelBase.ModelRpc(MethodBase method, ContentHeaderBase header, Byte[] body)
   at RabbitMQ.Client.Framing.Impl.Model._Private_QueueBind(String queue, String exchange, String routingKey, Boolean nowait, IDictionary`2 arguments)
   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueBind(String queue, String exchange, String routingKey, IDictionary`2 arguments)
   at Rebus.RabbitMq.RabbitMqTransport.BindInputQueue(String address, IModel model)
   at Rebus.RabbitMq.RabbitMqTransport.CreateQueue(String address)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.CreateQueue(String address)
   at Rebus.RabbitMq.RabbitMqTransport.ReconnectQueue()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:13:13.679 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.data.response.disco-test-client-2.q
 ---> Rebus.Exceptions.RebusApplicationException: Queue declaration for 'cc.disco.data.response.disco-test-client-2.q' failed
 ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=20
   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)
   at RabbitMQ.Client.Impl.ModelBase.ModelRpc(MethodBase method, ContentHeaderBase header, Byte[] body)
   at RabbitMQ.Client.Framing.Impl.Model._Private_QueueBind(String queue, String exchange, String routingKey, Boolean nowait, IDictionary`2 arguments)
   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueBind(String queue, String exchange, String routingKey, IDictionary`2 arguments)
   at Rebus.RabbitMq.RabbitMqTransport.BindInputQueue(String address, IModel model)
   at Rebus.RabbitMq.RabbitMqTransport.CreateQueue(String address)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.CreateQueue(String address)
   at Rebus.RabbitMq.RabbitMqTransport.ReconnectQueue()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:13:13.701 +00:00 [WRN] An error occurred when attempting to receive the next message: Rebus.Exceptions.RebusApplicationException: Unexpected exception thrown while trying to dequeue a message from rabbitmq, queue address: cc.disco.schedule.response.disco-test-client-2.q
 ---> Rebus.Exceptions.RebusApplicationException: Queue declaration for 'cc.disco.schedule.response.disco-test-client-2.q' failed
 ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=20
   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)
   at RabbitMQ.Client.Impl.ModelBase.ModelRpc(MethodBase method, ContentHeaderBase header, Byte[] body)
   at RabbitMQ.Client.Framing.Impl.Model._Private_QueueBind(String queue, String exchange, String routingKey, Boolean nowait, IDictionary`2 arguments)
   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueBind(String queue, String exchange, String routingKey, IDictionary`2 arguments)
   at Rebus.RabbitMq.RabbitMqTransport.BindInputQueue(String address, IModel model)
   at Rebus.RabbitMq.RabbitMqTransport.CreateQueue(String address)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.CreateQueue(String address)
   at Rebus.RabbitMq.RabbitMqTransport.ReconnectQueue()
   at Rebus.RabbitMq.RabbitMqTransport.InitializeConsumer()
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Rebus.RabbitMq.RabbitMqTransport.Receive(ITransactionContext context, CancellationToken cancellationToken)
   at Rebus.Workers.ThreadPoolBased.ThreadPoolWorker.ReceiveTransportMessage(CancellationToken token, ITransactionContext context)
2023-10-19 21:14:02.233 +00:00 [INF] Successfully initialized consumer for "cc.disco.data.response.disco-test-client-2.q"
2023-10-19 21:14:02.408 +00:00 [INF] Successfully initialized consumer for "cc.disco.schedule.response.disco-test-client-2.q"
2023-10-19 21:14:02.605 +00:00 [INF] Successfully initialized consumer for "cc.disco.get-schedules.response.disco-test-client-2.q"
2023-10-19 21:14:03.196 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slrl", "destination": "Local", "executed": "2023-10-19T21:13:57.099318500Z", "error": { "code": "BAD_REQUEST", "message": "Client disco-test-client-2 is not registered for routing" }, "dataPointCollections": [ ], "page": 0, "continue": false }
2023-10-19 21:14:03.886 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slsl", "destination": "Local", "executed": "2023-10-19T21:14:03.209106Z", "dataPointCollections": [ { "locationDataType": "Latitude", "dataPoints": [ { "timestamp": "2023-10-19T21:12:24.418Z", "value": 26.6033116, "unit": "Degrees" } ] }, { "locationDataType": "Longitude", "dataPoints": [ { "timestamp": "2023-10-19T21:12:24.418Z", "value": -89.2660316, "unit": "Degrees" } ] } ], "page": 1, "continue": false, "onDemandSingle": { "target": "2023-10-19T21:12:32.971987600Z" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
2023-10-19 21:14:04.733 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slsr", "destination": "Remote", "executed": "2023-10-19T21:14:03.219259200Z", "dataPointCollections": [ { "locationDataType": "Latitude", "dataPoints": [ { "timestamp": "2023-10-19T21:12:24.418Z", "value": 26.6033116, "unit": "Degrees" } ] }, { "locationDataType": "Longitude", "dataPoints": [ { "timestamp": "2023-10-19T21:12:24.418Z", "value": -89.2660316, "unit": "Degrees" } ] } ], "page": 1, "continue": false, "onDemandSingle": { "target": "2023-10-19T21:12:33.014677500Z" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
2023-10-19 21:14:08.278 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swsl", "destination": "Local", "executed": "2023-10-19T21:14:07.663043700Z", "dataPointCollections": [ { "weatherDataType": "TrueWindDirection", "dataPoints": [ { "timestamp": "2023-10-19T21:12:24.418Z", "value": 0.5824054295022638, "unit": "NewtonMeter" } ] } ], "page": 1, "continue": false, "onDemandSingle": { "target": "2023-10-19T21:12:33.695418900Z" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
2023-10-19 21:14:16.028 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slrr", "destination": "Remote", "executed": "2023-10-19T21:14:03.200526700Z", "dataPointCollections": [ { "locationDataType": "Latitude", "dataPoints": [ { "timestamp": "2023-10-18T21:12:00Z", "value": 24.519752, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:18:00Z", "value": 24.378434, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:24:00Z", "value": 24.237116, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:30:00Z", "value": 24.1600036, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:36:00Z", "value": 24.1507768, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:42:00Z", "value": 24.1512836, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:48:00Z", "value": 24.1769161, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:54:00Z", "value": 24.2189137, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:00:00Z", "value": 24.3535663, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:06:00Z", "value": 24.5371693, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:12:00Z", "value": 24.7582848, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:18:00Z", "value": 25.06989, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:24:00Z", "value": 25.3649276, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:30:00Z", "value": 25.6766022, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:36:00Z", "value": 25.77269, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:42:00Z", "value": 29.7193422, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:48:00Z", "value": 29.7465532, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:54:00Z", "value": 29.7311887, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:00:00Z", "value": 29.5776915, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:06:00Z", "value": 29.3676129, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:12:00Z", "value": 29.238883, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:18:00Z", "value": 29.0805218, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:24:00Z", "value": 28.8994914, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:30:00Z", "value": 28.7354326, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:36:00Z", "value": 28.5544022, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:42:00Z", "value": 28.3677146, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:48:00Z", "value": 28.1626106, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:54:00Z", "value": 27.8824074, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:00:00Z", "value": 27.7311072, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:06:00Z", "value": 27.5915604, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:12:00Z", "value": 27.4520136, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:18:00Z", "value": 27.3163431, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:24:00Z", "value": 27.1767963, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:30:00Z", "value": 27.0440518, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:36:00Z", "value": 26.9127844, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:42:00Z", "value": 26.7801532, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:48:00Z", "value": 26.647522, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:54:00Z", "value": 26.5148908, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:00:00Z", "value": 26.3822596, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:06:00Z", "value": 26.2496284, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:12:00Z", "value": 26.1169972, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:18:00Z", "value": 25.984366, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:24:00Z", "value": 25.8517348, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:30:00Z", "value": 25.7191036, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:36:00Z", "value": 25.587488, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:42:00Z", "value": 25.44617, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:48:00Z", "value": 25.304852, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:54:00Z", "value": 25.163534, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:00:00Z", "value": 25.022216, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:06:00Z", "value": 24.880898, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:12:00Z", "value": 24.7435055, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:18:00Z", "value": 24.6021875, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:24:00Z", "value": 24.4608695, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:30:00Z", "value": 24.3195515, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:36:00Z", "value": 24.1991013, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:42:00Z", "value": 24.1561591, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:48:00Z", "value": 24.1469323, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:54:00Z", "value": 24.1592846, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:00:00Z", "value": 24.1944151, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:06:00Z", "value": 24.2434045, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:12:00Z", "value": 24.4322533, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:18:00Z", "value": 24.6211021, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:24:00Z", "value": 24.896776, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:30:00Z", "value": 25.2083812, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:36:00Z", "value": 25.5070681, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:42:00Z", "value": 25.7572522, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:48:00Z", "value": 29.7338354, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:54:00Z", "value": 29.7351064, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:00:00Z", "value": 29.7611408, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:06:00Z", "value": 29.6498869, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:12:00Z", "value": 29.4336329, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:18:00Z", "value": 29.2967624, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:24:00Z", "value": 29.114465, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:30:00Z", "value": 28.9108058, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:36:00Z", "value": 28.7071466, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:42:00Z", "value": 28.5034874, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:48:00Z", "value": 28.2998282, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:54:00Z", "value": 28.0614262, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:00:00Z", "value": 27.8202621, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:06:00Z", "value": 27.6807153, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:12:00Z", "value": 27.5411685, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:18:00Z", "value": 27.4016217, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:24:00Z", "value": 27.2620749, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:30:00Z", "value": 27.127324, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:36:00Z", "value": 26.9910604, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:42:00Z", "value": 26.8612056, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:48:00Z", "value": 26.7285744, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:54:00Z", "value": 26.5959432, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:00:00Z", "value": 26.463312, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:06:00Z", "value": 26.3306808, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:12:00Z", "value": 26.2017338, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:18:00Z", "value": 26.0691026, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:24:00Z", "value": 25.9364714, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:30:00Z", "value": 25.8038402, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:36:00Z", "value": 25.671209, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:42:00Z", "value": 25.5364565, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:48:00Z", "value": 25.3951385, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:54:00Z", "value": 25.2538205, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:00:00Z", "value": 25.1125025, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:06:00Z", "value": 24.9711845, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:12:00Z", "value": 24.8298665, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:18:00Z", "value": 24.6885485, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:24:00Z", "value": 24.5472305, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:30:00Z", "value": 24.4059125, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:36:00Z", "value": 24.2645945, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:42:00Z", "value": 24.1704811, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:48:00Z", "value": 24.1525709, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:54:00Z", "value": 24.1475498, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:00:00Z", "value": 24.1687499, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:06:00Z", "value": 24.2107475, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:12:00Z", "value": 24.3168457, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:18:00Z", "value": 24.5004487, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:24:00Z", "value": 24.6976949, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:30:00Z", "value": 25.0093001, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:36:00Z", "value": 25.3126946, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:42:00Z", "value": 25.6295099, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:48:00Z", "value": 25.7709975, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:54:00Z", "value": 29.7255516, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:00:00Z", "value": 29.7457789, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:06:00Z", "value": 29.7311887, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:12:00Z", "value": 29.5655999, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:18:00Z", "value": 29.3479502, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:24:00Z", "value": 29.1985514, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:30:00Z", "value": 29.0352642, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:36:00Z", "value": 28.831605, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:42:00Z", "value": 28.6279458, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:48:00Z", "value": 28.4242866, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:54:00Z", "value": 28.2206274, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:00:00Z", "value": 27.9524583, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:06:00Z", "value": 27.7659939, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:12:00Z", "value": 27.6303234, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:18:00Z", "value": 27.4946529, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:24:00Z", "value": 27.3551061, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:30:00Z", "value": 27.2155593, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:36:00Z", "value": 27.0819028, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:42:00Z", "value": 26.9496264, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:48:00Z", "value": 26.8169952, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:54:00Z", "value": 26.684364, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:00:00Z", "value": 26.5517328, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:06:00Z", "value": 26.4191016, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:12:00Z", "value": 26.2864704, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:18:00Z", "value": 26.1538392, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:24:00Z", "value": 26.021208, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:30:00Z", "value": 25.8885768, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:36:00Z", "value": 25.7559456, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:42:00Z", "value": 25.626743, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:48:00Z", "value": 25.485425, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:54:00Z", "value": 25.344107, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:00:00Z", "value": 25.202789, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:06:00Z", "value": 25.061471, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:12:00Z", "value": 24.920153, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:18:00Z", "value": 24.7827605, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:24:00Z", "value": 24.6414425, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:30:00Z", "value": 24.5001245, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:36:00Z", "value": 24.3588065, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:42:00Z", "value": 24.2174885, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:48:00Z", "value": 24.1587221, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:54:00Z", "value": 24.1494953, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:00:00Z", "value": 24.1539506, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:06:00Z", "value": 24.1827491, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:12:00Z", "value": 24.2247467, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:18:00Z", "value": 24.3693037, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:24:00Z", "value": 24.5476609, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:30:00Z", "value": 24.7669405, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:36:00Z", "value": 25.0612343, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:42:00Z", "value": 25.3475166, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:48:00Z", "value": 25.6483471, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:54:00Z", "value": 25.7709975, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:00:00Z", "value": 29.7266898, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:06:00Z", "value": 29.7439617, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:12:00Z", "value": 29.7558758, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:18:00Z", "value": 29.6079205, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:24:00Z", "value": 29.4006229, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:30:00Z", "value": 29.267236, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:36:00Z", "value": 29.0974934, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:42:00Z", "value": 28.8938342, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:48:00Z", "value": 28.690175, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:54:00Z", "value": 28.492173, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:00:00Z", "value": 28.2885138, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:06:00Z", "value": 28.0458594, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:12:00Z", "value": 27.8163858, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:18:00Z", "value": 27.6807153, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:24:00Z", "value": 27.5489211, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:30:00Z", "value": 27.4171269, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:36:00Z", "value": 27.2853327, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:42:00Z", "value": 27.1576048, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:48:00Z", "value": 27.0289114, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:54:00Z", "value": 26.905416, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:00:00Z", "value": 26.7801532, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:06:00Z", "value": 26.6548904, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:12:00Z", "value": 26.5296276, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:18:00Z", "value": 26.3969964, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:24:00Z", "value": 26.2643652, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:30:00Z", "value": 26.131734, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:36:00Z", "value": 25.9991028, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:42:00Z", "value": 25.8664716, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:48:00Z", "value": 25.7338404, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:54:00Z", "value": 25.60319, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:00:00Z", "value": 25.461872, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:06:00Z", "value": 25.320554, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:12:00Z", "value": 25.179236, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:18:00Z", "value": 25.037918, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:24:00Z", "value": 24.8966, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:30:00Z", "value": 24.755282, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:36:00Z", "value": 24.6178895, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:42:00Z", "value": 24.4765715, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:48:00Z", "value": 24.3352535, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:54:00Z", "value": 24.2072785, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:00:00Z", "value": 24.1571843, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:06:00Z", "value": 24.1479575, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:12:00Z", "value": 24.157151, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:18:00Z", "value": 24.1897487, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:24:00Z", "value": 24.2317463, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:30:00Z", "value": 24.4112701, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:36:00Z", "value": 24.6001189, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:42:00Z", "value": 24.8621532, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:48:00Z", "value": 25.1737584, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:54:00Z", "value": 25.4693937, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:00:00Z", "value": 25.7652838, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:06:00Z", "value": 29.7377973, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:12:00Z", "value": 29.7274852, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:18:00Z", "value": 29.7423327, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:24:00Z", "value": 29.6708701, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:30:00Z", "value": 29.4534389, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:36:00Z", "value": 29.3097504, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:42:00Z", "value": 29.1370938, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:48:00Z", "value": 28.9334346, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:54:00Z", "value": 28.7297754, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:00:00Z", "value": 28.5261162, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:06:00Z", "value": 28.322457, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:12:00Z", "value": 28.0925598, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:18:00Z", "value": 27.8357673, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:24:00Z", "value": 27.6962205, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:30:00Z", "value": 27.56055, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:36:00Z", "value": 27.4210032, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:42:00Z", "value": 27.2814564, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:48:00Z", "value": 27.1462495, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:54:00Z", "value": 27.0099859, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:00:00Z", "value": 26.8796266, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:06:00Z", "value": 26.7469954, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:12:00Z", "value": 26.6143642, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:18:00Z", "value": 26.6033116, "unit": "Degrees" } ] }, { "locationDataType": "Longitude", "dataPoints": [ { "timestamp": "2023-10-18T21:12:00Z", "value": -83.8407239, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:18:00Z", "value": -83.4876179, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:24:00Z", "value": -83.1345119, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:30:00Z", "value": -82.7829838, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:36:00Z", "value": -82.4004262, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:42:00Z", "value": -82.0262497, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:48:00Z", "value": -81.649308, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:54:00Z", "value": -81.2650404, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:00:00Z", "value": -80.9282955, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:06:00Z", "value": -80.610779, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:12:00Z", "value": -80.3366648, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:18:00Z", "value": -80.152118, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:24:00Z", "value": -79.9771293, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:30:00Z", "value": -79.9977571, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:36:00Z", "value": -80.15834, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:42:00Z", "value": -95.2444929, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:48:00Z", "value": -95.1700583, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:54:00Z", "value": -95.0445183, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:00:00Z", "value": -94.9303597, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:06:00Z", "value": -94.8021668, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:12:00Z", "value": -94.5564538, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:18:00Z", "value": -94.2698053, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:24:00Z", "value": -93.9796357, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:30:00Z", "value": -93.7166695, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:36:00Z", "value": -93.4264999, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:42:00Z", "value": -93.1272625, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:48:00Z", "value": -92.8336169, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:54:00Z", "value": -92.5951529, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:00:00Z", "value": -92.2573193, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:06:00Z", "value": -91.8957677, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:12:00Z", "value": -91.5342161, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:18:00Z", "value": -91.1827076, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:24:00Z", "value": -90.821156, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:30:00Z", "value": -90.4643087, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:36:00Z", "value": -90.1090556, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:42:00Z", "value": -89.7477596, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:48:00Z", "value": -89.3864636, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:54:00Z", "value": -89.0251676, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:00:00Z", "value": -88.6638716, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:06:00Z", "value": -88.3025756, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:12:00Z", "value": -87.9412796, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:18:00Z", "value": -87.5799836, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:24:00Z", "value": -87.2186876, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:30:00Z", "value": -86.8573916, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:36:00Z", "value": -86.5086359, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:42:00Z", "value": -86.1555299, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:48:00Z", "value": -85.8024239, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:54:00Z", "value": -85.4493179, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:00:00Z", "value": -85.0962119, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:06:00Z", "value": -84.7431059, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:12:00Z", "value": -84.3998084, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:18:00Z", "value": -84.0467024, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:24:00Z", "value": -83.6935964, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:30:00Z", "value": -83.3404904, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:36:00Z", "value": -82.9916613, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:42:00Z", "value": -82.6235848, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:48:00Z", "value": -82.2410272, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:54:00Z", "value": -81.8640457, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:00:00Z", "value": -81.4891965, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:06:00Z", "value": -81.1188054, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:12:00Z", "value": -80.792217, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:18:00Z", "value": -80.4656286, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:24:00Z", "value": -80.254644, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:30:00Z", "value": -80.0700972, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:36:00Z", "value": -79.9300921, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:42:00Z", "value": -80.1174632, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:48:00Z", "value": -95.2774588, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:54:00Z", "value": -95.2056208, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:00:00Z", "value": -95.0894059, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:06:00Z", "value": -94.9694921, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:12:00Z", "value": -94.8353968, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:18:00Z", "value": -94.6109919, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:24:00Z", "value": -94.3242121, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:30:00Z", "value": -93.9977713, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:36:00Z", "value": -93.6713305, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:42:00Z", "value": -93.3448897, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:48:00Z", "value": -93.0184489, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:54:00Z", "value": -92.7475049, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:00:00Z", "value": -92.4883106, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:06:00Z", "value": -92.126759, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:12:00Z", "value": -91.7652074, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:18:00Z", "value": -91.4036558, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:24:00Z", "value": -91.0421042, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:30:00Z", "value": -90.6889221, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:36:00Z", "value": -90.3213729, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:42:00Z", "value": -89.9685516, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:48:00Z", "value": -89.6072556, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:54:00Z", "value": -89.2459596, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:00:00Z", "value": -88.8846636, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:06:00Z", "value": -88.5233676, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:12:00Z", "value": -88.1721076, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:18:00Z", "value": -87.8108116, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:24:00Z", "value": -87.4495156, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:30:00Z", "value": -87.0882196, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:36:00Z", "value": -86.7269236, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:42:00Z", "value": -86.3811254, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:48:00Z", "value": -86.0280194, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:54:00Z", "value": -85.6749134, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:00:00Z", "value": -85.3218074, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:06:00Z", "value": -84.9687014, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:12:00Z", "value": -84.6155954, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:18:00Z", "value": -84.2624894, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:24:00Z", "value": -83.9093834, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:30:00Z", "value": -83.5562774, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:36:00Z", "value": -83.2031714, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:42:00Z", "value": -82.8457295, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:48:00Z", "value": -82.4748124, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:54:00Z", "value": -82.1019449, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:00:00Z", "value": -81.7240267, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:06:00Z", "value": -81.3397591, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:12:00Z", "value": -80.9917988, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:18:00Z", "value": -80.6742823, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:24:00Z", "value": -80.3725489, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:30:00Z", "value": -80.1880021, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:36:00Z", "value": -80.0081661, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:42:00Z", "value": -79.9789617, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:48:00Z", "value": -80.1517717, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:54:00Z", "value": -95.2538003, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:00:00Z", "value": -95.1804414, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:06:00Z", "value": -95.0445183, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:12:00Z", "value": -94.9210661, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:18:00Z", "value": -94.7821519, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:24:00Z", "value": -94.5123057, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:30:00Z", "value": -94.1972629, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:36:00Z", "value": -93.8708221, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:42:00Z", "value": -93.5443813, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:48:00Z", "value": -93.2179405, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:54:00Z", "value": -92.8914997, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:00:00Z", "value": -92.6547689, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:06:00Z", "value": -92.3477072, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:12:00Z", "value": -91.9961987, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:18:00Z", "value": -91.6446902, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:24:00Z", "value": -91.2831386, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:30:00Z", "value": -90.921587, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:36:00Z", "value": -90.5664057, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:42:00Z", "value": -90.2094156, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:48:00Z", "value": -89.8481196, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:54:00Z", "value": -89.4868236, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:00:00Z", "value": -89.1255276, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:06:00Z", "value": -88.7642316, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:12:00Z", "value": -88.4029356, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:18:00Z", "value": -88.0416396, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:24:00Z", "value": -87.6803436, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:30:00Z", "value": -87.3190476, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:36:00Z", "value": -86.9577516, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:42:00Z", "value": -86.6067209, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:48:00Z", "value": -86.2536149, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:54:00Z", "value": -85.9005089, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:00:00Z", "value": -85.5474029, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:06:00Z", "value": -85.1942969, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:12:00Z", "value": -84.8411909, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:18:00Z", "value": -84.4978934, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:24:00Z", "value": -84.1447874, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:30:00Z", "value": -83.7916814, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:36:00Z", "value": -83.4385754, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:42:00Z", "value": -83.0854694, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:48:00Z", "value": -82.7298508, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:54:00Z", "value": -82.3472932, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:00:00Z", "value": -81.9721817, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:06:00Z", "value": -81.5959375, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:12:00Z", "value": -81.2116699, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:18:00Z", "value": -80.9010798, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:24:00Z", "value": -80.5926352, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:30:00Z", "value": -80.3315385, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:36:00Z", "value": -80.1572443, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:42:00Z", "value": -79.9874749, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:48:00Z", "value": -79.9864801, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:54:00Z", "value": -80.1517717, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:00:00Z", "value": -95.2581876, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:06:00Z", "value": -95.1916716, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:12:00Z", "value": -95.0678942, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:18:00Z", "value": -94.9535937, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:24:00Z", "value": -94.8187818, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:30:00Z", "value": -94.5730883, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:36:00Z", "value": -94.2970087, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:42:00Z", "value": -93.9705679, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:48:00Z", "value": -93.6441271, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:54:00Z", "value": -93.3267541, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:00:00Z", "value": -93.0003133, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:06:00Z", "value": -92.7342569, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:12:00Z", "value": -92.4782675, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:18:00Z", "value": -92.126759, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:24:00Z", "value": -91.7852936, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:30:00Z", "value": -91.4438282, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:36:00Z", "value": -91.1023628, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:42:00Z", "value": -90.7705997, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:48:00Z", "value": -90.4234699, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:54:00Z", "value": -90.0889836, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:00:00Z", "value": -89.7477596, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:06:00Z", "value": -89.4065356, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:12:00Z", "value": -89.0653116, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:18:00Z", "value": -88.7040156, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:24:00Z", "value": -88.3427196, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:30:00Z", "value": -87.9814236, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:36:00Z", "value": -87.6201276, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:42:00Z", "value": -87.2588316, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:48:00Z", "value": -86.8975356, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:54:00Z", "value": -86.5478699, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:00:00Z", "value": -86.1947639, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:06:00Z", "value": -85.8416579, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:12:00Z", "value": -85.4885519, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:18:00Z", "value": -85.1354459, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:24:00Z", "value": -84.7823399, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:30:00Z", "value": -84.4292339, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:36:00Z", "value": -84.0859364, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:42:00Z", "value": -83.7328304, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:48:00Z", "value": -83.3797244, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:54:00Z", "value": -83.0333561, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:00:00Z", "value": -82.6660912, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:06:00Z", "value": -82.2835336, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:12:00Z", "value": -81.9073001, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:18:00Z", "value": -81.5318929, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:24:00Z", "value": -81.1476253, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:30:00Z", "value": -80.8285046, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:36:00Z", "value": -80.5019162, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:42:00Z", "value": -80.2751492, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:48:00Z", "value": -80.0906024, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:54:00Z", "value": -79.9150553, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:00:00Z", "value": -80.0867886, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:06:00Z", "value": -95.2793805, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:12:00Z", "value": -95.2101939, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:18:00Z", "value": -95.1061973, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:24:00Z", "value": -94.9774415, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:30:00Z", "value": -94.8453658, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:36:00Z", "value": -94.6310909, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:42:00Z", "value": -94.3604833, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:48:00Z", "value": -94.0340425, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:54:00Z", "value": -93.7076017, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:00:00Z", "value": -93.3811609, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:06:00Z", "value": -93.0547201, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:12:00Z", "value": -92.7740009, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:18:00Z", "value": -92.528483, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:24:00Z", "value": -92.1669314, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:30:00Z", "value": -91.8154229, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:36:00Z", "value": -91.4538713, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:42:00Z", "value": -91.0923197, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:48:00Z", "value": -90.7399706, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:54:00Z", "value": -90.3724214, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:00:00Z", "value": -90.0187316, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:06:00Z", "value": -89.6574356, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:12:00Z", "value": -89.2961396, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:18:00Z", "value": -89.2660316, "unit": "Degrees" } ] } ], "page": 1, "continue": false, "onDemandRange": { "start": "2023-10-18T21:12:32.816315600Z", "end": "2023-10-19T21:12:32.815315600Z", "intervalMilliseconds": "360000" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
2023-10-19 21:14:16.100 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swrr", "destination": "Remote", "executed": "2023-10-19T21:14:04.799456900Z", "dataPointCollections": [ { "weatherDataType": "TrueWindDirection", "dataPoints": [ { "timestamp": "2023-10-18T21:12:00Z", "value": 0.5853382615659074, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:18:00Z", "value": 0.5858886401133588, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:24:00Z", "value": 0.5864361305244313, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:30:00Z", "value": 0.5823422841906721, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:36:00Z", "value": 0.5823843149306083, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:42:00Z", "value": 0.5932902955686491, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:48:00Z", "value": 0.5888475070216206, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:54:00Z", "value": 0.5886563282715828, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:00:00Z", "value": 0.587741213089518, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:06:00Z", "value": 0.5871315708289624, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:12:00Z", "value": 0.5900877776557762, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:18:00Z", "value": 0.5897541548765168, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:24:00Z", "value": 0.5932625057495596, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:30:00Z", "value": 5.310833239281902e-05, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:36:00Z", "value": 0.108579423394485, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:42:00Z", "value": 0.2346199149342523, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:48:00Z", "value": 0.1182713520147766, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:54:00Z", "value": 0.1825721255117204, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:00:00Z", "value": 0.4366170251627849, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:06:00Z", "value": 0.4328438845366993, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:12:00Z", "value": 0.6880985517591724, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:18:00Z", "value": 0.5845901158439513, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:24:00Z", "value": 0.5852689133918677, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:30:00Z", "value": 0.5858810707074962, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:36:00Z", "value": 0.5865532272548841, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:42:00Z", "value": 0.5872427171374721, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:48:00Z", "value": 0.5842226733955195, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:54:00Z", "value": 0.5847715946870335, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:00:00Z", "value": 0.5822607074573863, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:06:00Z", "value": 0.5828857768120691, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:12:00Z", "value": 0.5835080663440033, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:18:00Z", "value": 0.584110399422527, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:24:00Z", "value": 0.5847271893920173, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:30:00Z", "value": 0.591370605061732, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:36:00Z", "value": 0.5810500900899104, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:42:00Z", "value": 0.5816326619731896, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:48:00Z", "value": 0.5822126661822395, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:54:00Z", "value": 0.5827900979696031, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:00:00Z", "value": 0.5833649526164946, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:06:00Z", "value": 0.5839372254288285, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:12:00Z", "value": 0.5845069117434739, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:18:00Z", "value": 0.5850740069224951, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:24:00Z", "value": 0.5856385063555903, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:30:00Z", "value": 0.5862004054587464, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:36:00Z", "value": 0.5810870455531189, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:42:00Z", "value": 0.5816590731925908, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:48:00Z", "value": 0.5822282532835437, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:54:00Z", "value": 0.582794580337194, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:00:00Z", "value": 0.5833580489023161, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:06:00Z", "value": 0.5839186535621252, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:12:00Z", "value": 0.5844609350796677, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:18:00Z", "value": 0.5850158757446814, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:24:00Z", "value": 0.5855679366125759, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:30:00Z", "value": 0.5861171124080997, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:36:00Z", "value": 0.5838914235321746, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:42:00Z", "value": 0.5823597988324118, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:48:00Z", "value": 0.5824018232854881, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:54:00Z", "value": 0.593253249195355, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:00:00Z", "value": 0.5887678869992411, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:06:00Z", "value": 0.5881050556807597, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:12:00Z", "value": 0.5874804329172766, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:18:00Z", "value": 0.5868515320249386, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:24:00Z", "value": 0.5899399025687082, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:30:00Z", "value": 0.5896048372984453, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:36:00Z", "value": 0.6010715206630408, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:42:00Z", "value": 0.2607340790527608, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:48:00Z", "value": 7.951717240300174e-06, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:54:00Z", "value": 0.0823637027374875, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:00:00Z", "value": 0.2471882137263233, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:06:00Z", "value": 0.4421217081918886, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:12:00Z", "value": 0.4327985581364317, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:18:00Z", "value": 0.6652729671417527, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:24:00Z", "value": 0.5844624554288941, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:30:00Z", "value": 0.5852265902555892, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:36:00Z", "value": 0.5859863256357362, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:42:00Z", "value": 0.586741640337894, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:48:00Z", "value": 0.5874925133129423, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:54:00Z", "value": 0.5844213709651703, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:00:00Z", "value": 0.5818599049722091, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:06:00Z", "value": 0.5824867472416608, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:12:00Z", "value": 0.5831108134499234, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:18:00Z", "value": 0.5837320977157862, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:24:00Z", "value": 0.5843505941952931, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:30:00Z", "value": 0.5909960985436917, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:36:00Z", "value": 0.5916083944726145, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:42:00Z", "value": 0.5812769506276197, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:48:00Z", "value": 0.5818585245362312, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:54:00Z", "value": 0.582437528922188, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:00:00Z", "value": 0.5830139590474365, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:06:00Z", "value": 0.5835878102027323, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:12:00Z", "value": 0.5841432440956291, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:18:00Z", "value": 0.5847119952558464, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:24:00Z", "value": 0.5852781536126171, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:30:00Z", "value": 0.5858417145644519, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:36:00Z", "value": 0.5864026735401725, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:42:00Z", "value": 0.5812939392208711, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:48:00Z", "value": 0.5818649392135803, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:54:00Z", "value": 0.5824330896731454, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:00:00Z", "value": 0.5829983851216766, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:06:00Z", "value": 0.5835608201220895, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:12:00Z", "value": 0.584120389269683, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:18:00Z", "value": 0.5846770871975309, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:24:00Z", "value": 0.5852309085715202, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:30:00Z", "value": 0.5857818480922452, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:36:00Z", "value": 0.5863299004954516, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:42:00Z", "value": 0.5840166417897549, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:48:00Z", "value": 0.582376143468415, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:54:00Z", "value": 0.5933075799297818, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:00:00Z", "value": 0.5888846445548633, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:06:00Z", "value": 0.5886935262703058, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:12:00Z", "value": 0.5878626560487598, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:18:00Z", "value": 0.5872538226107831, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:24:00Z", "value": 0.5901522700613241, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:30:00Z", "value": 0.5898192804829806, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:36:00Z", "value": 0.5933198280089756, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:42:00Z", "value": 0.6010010128163954, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:48:00Z", "value": 0.091543733756414, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:54:00Z", "value": 0.1281326893567234, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:00:00Z", "value": 0.2010174275249571, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:06:00Z", "value": 0.1825721255117204, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:12:00Z", "value": 0.4366331748204964, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:18:00Z", "value": 0.526080217848405, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:24:00Z", "value": 7.969834770730948e-06, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:30:00Z", "value": 0.5847601403836878, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:36:00Z", "value": 0.5855225668494961, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:42:00Z", "value": 0.586280585589582, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:48:00Z", "value": 0.5870341754439634, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:54:00Z", "value": 0.5877833154348565, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:00:00Z", "value": 0.5846395508194142, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:06:00Z", "value": 0.5821040064612709, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:12:00Z", "value": 0.5827124250248195, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:18:00Z", "value": 0.5833182175992824, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:24:00Z", "value": 0.5839385732504193, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:30:00Z", "value": 0.5845561391745446, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:36:00Z", "value": 0.591200501656656, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:42:00Z", "value": 0.5808878095264367, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:48:00Z", "value": 0.5814710938064767, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:54:00Z", "value": 0.5820518117351372, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:00:00Z", "value": 0.5826299585592661, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:06:00Z", "value": 0.5832055295499119, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:12:00Z", "value": 0.5837785200072687, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:18:00Z", "value": 0.5843489252606119, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:24:00Z", "value": 0.5849167406631632, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:30:00Z", "value": 0.585481961597066, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:36:00Z", "value": 0.5860445834733211, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:42:00Z", "value": 0.5809276443774024, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:48:00Z", "value": 0.58150046202446, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:54:00Z", "value": 0.5820704336526574, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:00:00Z", "value": 0.5826375537655776, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:06:00Z", "value": 0.5832018168999845, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:12:00Z", "value": 0.5837632176308883, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:18:00Z", "value": 0.5843062745349875, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:24:00Z", "value": 0.5848620142021035, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:30:00Z", "value": 0.5854148755450123, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:36:00Z", "value": 0.585964853276016, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:42:00Z", "value": 0.5865119421444314, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:48:00Z", "value": 0.5823481226958921, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:54:00Z", "value": 0.5823901513406938, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:00:00Z", "value": 0.5932779480587452, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:06:00Z", "value": 0.5888209730132269, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:12:00Z", "value": 0.5886297510755875, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:18:00Z", "value": 0.5876891165204915, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:24:00Z", "value": 0.5870966120865415, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:30:00Z", "value": 0.5900785543566036, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:36:00Z", "value": 0.5897634660318619, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:42:00Z", "value": 0.5932816232994007, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:48:00Z", "value": 0.6009901431830029, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:54:00Z", "value": 0.091543733756414, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:00:00Z", "value": 0.0980252383948024, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:06:00Z", "value": 0.1858521411647134, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:12:00Z", "value": 0.1552186771331175, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:18:00Z", "value": 2.088033819132908e-05, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:24:00Z", "value": 0.432821229834901, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:30:00Z", "value": 0.6653799342014238, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:36:00Z", "value": 0.5845263008441934, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:42:00Z", "value": 0.5852900698657453, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:48:00Z", "value": 0.5860494376644174, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:54:00Z", "value": 0.5867834722228142, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:00:00Z", "value": 0.5875340978211975, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:06:00Z", "value": 0.5844518920772737, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:12:00Z", "value": 0.5818773546911318, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:18:00Z", "value": 0.5824867472416608, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:24:00Z", "value": 0.583076216033354, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:30:00Z", "value": 0.5836632036925847, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:36:00Z", "value": 0.584247705292146, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:42:00Z", "value": 0.590859660785392, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:48:00Z", "value": 0.5914385872089067, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:54:00Z", "value": 0.5810825224753032, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:00:00Z", "value": 0.5816326619731896, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:06:00Z", "value": 0.5821805111688569, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:12:00Z", "value": 0.5827260660622567, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:18:00Z", "value": 0.583301207289894, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:24:00Z", "value": 0.5838737672032449, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:30:00Z", "value": 0.5844437411367948, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:36:00Z", "value": 0.5850111244480208, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:42:00Z", "value": 0.5855759125234541, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:48:00Z", "value": 0.5861381007789045, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:54:00Z", "value": 0.5810233113912284, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:00:00Z", "value": 0.5815956550855874, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:06:00Z", "value": 0.5821651518418617, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:12:00Z", "value": 0.5827317961688245, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:18:00Z", "value": 0.5832955826125177, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:24:00Z", "value": 0.5838565057510596, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:30:00Z", "value": 0.5844145601996319, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:36:00Z", "value": 0.5849543577861772, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:42:00Z", "value": 0.5855067388933348, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:48:00Z", "value": 0.5860562355114313, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:54:00Z", "value": 0.5838556215367909, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:00:00Z", "value": 0.5823551285186399, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:06:00Z", "value": 0.5823971546470229, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:12:00Z", "value": 0.5932631293559675, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:18:00Z", "value": 0.5887891242849844, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:24:00Z", "value": 0.5885978505242533, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:30:00Z", "value": 0.5875500469592166, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:36:00Z", "value": 0.5869216207463916, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:42:00Z", "value": 0.5899769317358321, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:48:00Z", "value": 0.5896422264571932, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:54:00Z", "value": 2.249814606471693e-05, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:00:00Z", "value": 0.7585845739644662, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:06:00Z", "value": 0.1325449536630455, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:12:00Z", "value": 0.0851126182488352, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:18:00Z", "value": 0.501666108962665, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:24:00Z", "value": 0.4421126915312736, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:30:00Z", "value": 0.4327849469696311, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:36:00Z", "value": 0.6500969218216448, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:42:00Z", "value": 0.5843772809167153, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:48:00Z", "value": 0.585141903252684, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:54:00Z", "value": 0.5859021285118691, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:00:00Z", "value": 0.5866579354433099, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:06:00Z", "value": 0.5874093029763648, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:12:00Z", "value": 0.5843602905612845, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:18:00Z", "value": 0.5817900847265872, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:24:00Z", "value": 0.5824172350828111, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:30:00Z", "value": 0.5830243038131101, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:36:00Z", "value": 0.5836459748093428, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:42:00Z", "value": 0.5842648588292627, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:48:00Z", "value": 0.5909108407844897, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:54:00Z", "value": 0.5915235172918745, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:00:00Z", "value": 0.5811959735195004, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:06:00Z", "value": 0.5817779039302559, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:12:00Z", "value": 0.5823572654783763, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:18:00Z", "value": 0.5824054295022638, "unit": "NewtonMeter" } ] } ], "page": 1, "continue": false, "onDemandRange": { "start": "2023-10-18T21:12:33.465773Z", "end": "2023-10-19T21:12:33.464773Z", "intervalMilliseconds": "360000" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
2023-10-19 21:14:16.466 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swrl", "destination": "Local", "executed": "2023-10-19T21:14:03.940207800Z", "dataPointCollections": [ { "weatherDataType": "TrueWindDirection", "dataPoints": [ { "timestamp": "2023-10-18T21:12:00Z", "value": 0.5853382615659074, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:18:00Z", "value": 0.5858886401133588, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:24:00Z", "value": 0.5864361305244313, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:30:00Z", "value": 0.5823422841906721, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:36:00Z", "value": 0.5823843149306083, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:42:00Z", "value": 0.5932902955686491, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:48:00Z", "value": 0.5888475070216206, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:54:00Z", "value": 0.5886563282715828, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:00:00Z", "value": 0.587741213089518, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:06:00Z", "value": 0.5871315708289624, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:12:00Z", "value": 0.5900877776557762, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:18:00Z", "value": 0.5897541548765168, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:24:00Z", "value": 0.5932625057495596, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:30:00Z", "value": 5.310833239281902e-05, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:36:00Z", "value": 0.108579423394485, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:42:00Z", "value": 0.2346199149342523, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:48:00Z", "value": 0.1182713520147766, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:54:00Z", "value": 0.1825721255117204, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:00:00Z", "value": 0.4366170251627849, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:06:00Z", "value": 0.4328438845366993, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:12:00Z", "value": 0.6880985517591724, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:18:00Z", "value": 0.5845901158439513, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:24:00Z", "value": 0.5852689133918677, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:30:00Z", "value": 0.5858810707074962, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:36:00Z", "value": 0.5865532272548841, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:42:00Z", "value": 0.5872427171374721, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:48:00Z", "value": 0.5842226733955195, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:54:00Z", "value": 0.5847715946870335, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:00:00Z", "value": 0.5822607074573863, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:06:00Z", "value": 0.5828857768120691, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:12:00Z", "value": 0.5835080663440033, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:18:00Z", "value": 0.584110399422527, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:24:00Z", "value": 0.5847271893920173, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:30:00Z", "value": 0.591370605061732, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:36:00Z", "value": 0.5810500900899104, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:42:00Z", "value": 0.5816326619731896, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:48:00Z", "value": 0.5822126661822395, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:54:00Z", "value": 0.5827900979696031, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:00:00Z", "value": 0.5833649526164946, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:06:00Z", "value": 0.5839372254288285, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:12:00Z", "value": 0.5845069117434739, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:18:00Z", "value": 0.5850740069224951, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:24:00Z", "value": 0.5856385063555903, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:30:00Z", "value": 0.5862004054587464, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:36:00Z", "value": 0.5810870455531189, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:42:00Z", "value": 0.5816590731925908, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:48:00Z", "value": 0.5822282532835437, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:54:00Z", "value": 0.582794580337194, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:00:00Z", "value": 0.5833580489023161, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:06:00Z", "value": 0.5839186535621252, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:12:00Z", "value": 0.5844609350796677, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:18:00Z", "value": 0.5850158757446814, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:24:00Z", "value": 0.5855679366125759, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:30:00Z", "value": 0.5861171124080997, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:36:00Z", "value": 0.5838914235321746, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:42:00Z", "value": 0.5823597988324118, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:48:00Z", "value": 0.5824018232854881, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:54:00Z", "value": 0.593253249195355, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:00:00Z", "value": 0.5887678869992411, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:06:00Z", "value": 0.5881050556807597, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:12:00Z", "value": 0.5874804329172766, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:18:00Z", "value": 0.5868515320249386, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:24:00Z", "value": 0.5899399025687082, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:30:00Z", "value": 0.5896048372984453, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:36:00Z", "value": 0.6010715206630408, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:42:00Z", "value": 0.2607340790527608, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:48:00Z", "value": 7.951717240300174e-06, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:54:00Z", "value": 0.0823637027374875, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:00:00Z", "value": 0.2471882137263233, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:06:00Z", "value": 0.4421217081918886, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:12:00Z", "value": 0.4327985581364317, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:18:00Z", "value": 0.6652729671417527, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:24:00Z", "value": 0.5844624554288941, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:30:00Z", "value": 0.5852265902555892, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:36:00Z", "value": 0.5859863256357362, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:42:00Z", "value": 0.586741640337894, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:48:00Z", "value": 0.5874925133129423, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:54:00Z", "value": 0.5844213709651703, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:00:00Z", "value": 0.5818599049722091, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:06:00Z", "value": 0.5824867472416608, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:12:00Z", "value": 0.5831108134499234, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:18:00Z", "value": 0.5837320977157862, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:24:00Z", "value": 0.5843505941952931, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:30:00Z", "value": 0.5909960985436917, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:36:00Z", "value": 0.5916083944726145, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:42:00Z", "value": 0.5812769506276197, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:48:00Z", "value": 0.5818585245362312, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:54:00Z", "value": 0.582437528922188, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:00:00Z", "value": 0.5830139590474365, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:06:00Z", "value": 0.5835878102027323, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:12:00Z", "value": 0.5841432440956291, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:18:00Z", "value": 0.5847119952558464, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:24:00Z", "value": 0.5852781536126171, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:30:00Z", "value": 0.5858417145644519, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:36:00Z", "value": 0.5864026735401725, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:42:00Z", "value": 0.5812939392208711, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:48:00Z", "value": 0.5818649392135803, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:54:00Z", "value": 0.5824330896731454, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:00:00Z", "value": 0.5829983851216766, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:06:00Z", "value": 0.5835608201220895, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:12:00Z", "value": 0.584120389269683, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:18:00Z", "value": 0.5846770871975309, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:24:00Z", "value": 0.5852309085715202, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:30:00Z", "value": 0.5857818480922452, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:36:00Z", "value": 0.5863299004954516, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:42:00Z", "value": 0.5840166417897549, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:48:00Z", "value": 0.582376143468415, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:54:00Z", "value": 0.5933075799297818, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:00:00Z", "value": 0.5888846445548633, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:06:00Z", "value": 0.5886935262703058, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:12:00Z", "value": 0.5878626560487598, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:18:00Z", "value": 0.5872538226107831, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:24:00Z", "value": 0.5901522700613241, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:30:00Z", "value": 0.5898192804829806, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:36:00Z", "value": 0.5933198280089756, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:42:00Z", "value": 0.6010010128163954, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:48:00Z", "value": 0.091543733756414, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:54:00Z", "value": 0.1281326893567234, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:00:00Z", "value": 0.2010174275249571, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:06:00Z", "value": 0.1825721255117204, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:12:00Z", "value": 0.4366331748204964, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:18:00Z", "value": 0.526080217848405, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:24:00Z", "value": 7.969834770730948e-06, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:30:00Z", "value": 0.5847601403836878, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:36:00Z", "value": 0.5855225668494961, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:42:00Z", "value": 0.586280585589582, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:48:00Z", "value": 0.5870341754439634, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:54:00Z", "value": 0.5877833154348565, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:00:00Z", "value": 0.5846395508194142, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:06:00Z", "value": 0.5821040064612709, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:12:00Z", "value": 0.5827124250248195, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:18:00Z", "value": 0.5833182175992824, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:24:00Z", "value": 0.5839385732504193, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:30:00Z", "value": 0.5845561391745446, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:36:00Z", "value": 0.591200501656656, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:42:00Z", "value": 0.5808878095264367, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:48:00Z", "value": 0.5814710938064767, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:54:00Z", "value": 0.5820518117351372, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:00:00Z", "value": 0.5826299585592661, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:06:00Z", "value": 0.5832055295499119, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:12:00Z", "value": 0.5837785200072687, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:18:00Z", "value": 0.5843489252606119, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:24:00Z", "value": 0.5849167406631632, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:30:00Z", "value": 0.585481961597066, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:36:00Z", "value": 0.5860445834733211, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:42:00Z", "value": 0.5809276443774024, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:48:00Z", "value": 0.58150046202446, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:54:00Z", "value": 0.5820704336526574, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:00:00Z", "value": 0.5826375537655776, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:06:00Z", "value": 0.5832018168999845, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:12:00Z", "value": 0.5837632176308883, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:18:00Z", "value": 0.5843062745349875, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:24:00Z", "value": 0.5848620142021035, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:30:00Z", "value": 0.5854148755450123, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:36:00Z", "value": 0.585964853276016, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:42:00Z", "value": 0.5865119421444314, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:48:00Z", "value": 0.5823481226958921, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:54:00Z", "value": 0.5823901513406938, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:00:00Z", "value": 0.5932779480587452, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:06:00Z", "value": 0.5888209730132269, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:12:00Z", "value": 0.5886297510755875, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:18:00Z", "value": 0.5876891165204915, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:24:00Z", "value": 0.5870966120865415, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:30:00Z", "value": 0.5900785543566036, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:36:00Z", "value": 0.5897634660318619, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:42:00Z", "value": 0.5932816232994007, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:48:00Z", "value": 0.6009901431830029, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:54:00Z", "value": 0.091543733756414, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:00:00Z", "value": 0.0980252383948024, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:06:00Z", "value": 0.1858521411647134, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:12:00Z", "value": 0.1552186771331175, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:18:00Z", "value": 2.088033819132908e-05, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:24:00Z", "value": 0.432821229834901, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:30:00Z", "value": 0.6653799342014238, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:36:00Z", "value": 0.5845263008441934, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:42:00Z", "value": 0.5852900698657453, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:48:00Z", "value": 0.5860494376644174, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:54:00Z", "value": 0.5867834722228142, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:00:00Z", "value": 0.5875340978211975, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:06:00Z", "value": 0.5844518920772737, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:12:00Z", "value": 0.5818773546911318, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:18:00Z", "value": 0.5824867472416608, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:24:00Z", "value": 0.583076216033354, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:30:00Z", "value": 0.5836632036925847, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:36:00Z", "value": 0.584247705292146, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:42:00Z", "value": 0.590859660785392, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:48:00Z", "value": 0.5914385872089067, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:54:00Z", "value": 0.5810825224753032, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:00:00Z", "value": 0.5816326619731896, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:06:00Z", "value": 0.5821805111688569, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:12:00Z", "value": 0.5827260660622567, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:18:00Z", "value": 0.583301207289894, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:24:00Z", "value": 0.5838737672032449, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:30:00Z", "value": 0.5844437411367948, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:36:00Z", "value": 0.5850111244480208, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:42:00Z", "value": 0.5855759125234541, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:48:00Z", "value": 0.5861381007789045, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:54:00Z", "value": 0.5810233113912284, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:00:00Z", "value": 0.5815956550855874, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:06:00Z", "value": 0.5821651518418617, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:12:00Z", "value": 0.5827317961688245, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:18:00Z", "value": 0.5832955826125177, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:24:00Z", "value": 0.5838565057510596, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:30:00Z", "value": 0.5844145601996319, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:36:00Z", "value": 0.5849543577861772, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:42:00Z", "value": 0.5855067388933348, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:48:00Z", "value": 0.5860562355114313, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:54:00Z", "value": 0.5838556215367909, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:00:00Z", "value": 0.5823551285186399, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:06:00Z", "value": 0.5823971546470229, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:12:00Z", "value": 0.5932631293559675, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:18:00Z", "value": 0.5887891242849844, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:24:00Z", "value": 0.5885978505242533, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:30:00Z", "value": 0.5875500469592166, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:36:00Z", "value": 0.5869216207463916, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:42:00Z", "value": 0.5899769317358321, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:48:00Z", "value": 0.5896422264571932, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:54:00Z", "value": 2.249814606471693e-05, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:00:00Z", "value": 0.7585845739644662, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:06:00Z", "value": 0.1325449536630455, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:12:00Z", "value": 0.0851126182488352, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:18:00Z", "value": 0.501666108962665, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:24:00Z", "value": 0.4421126915312736, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:30:00Z", "value": 0.4327849469696311, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:36:00Z", "value": 0.6500969218216448, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:42:00Z", "value": 0.5843772809167153, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:48:00Z", "value": 0.585141903252684, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:54:00Z", "value": 0.5859021285118691, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:00:00Z", "value": 0.5866579354433099, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:06:00Z", "value": 0.5874093029763648, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:12:00Z", "value": 0.5843602905612845, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:18:00Z", "value": 0.5817900847265872, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:24:00Z", "value": 0.5824172350828111, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:30:00Z", "value": 0.5830243038131101, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:36:00Z", "value": 0.5836459748093428, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:42:00Z", "value": 0.5842648588292627, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:48:00Z", "value": 0.5909108407844897, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:54:00Z", "value": 0.5915235172918745, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:00:00Z", "value": 0.5811959735195004, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:06:00Z", "value": 0.5817779039302559, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:12:00Z", "value": 0.5823572654783763, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:18:00Z", "value": 0.5824054295022638, "unit": "NewtonMeter" } ] } ], "page": 1, "continue": false, "onDemandRange": { "start": "2023-10-18T21:12:33.256606700Z", "end": "2023-10-19T21:12:33.255606700Z", "intervalMilliseconds": "360000" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
2023-10-19 21:15:57.311 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swsr", "destination": "Remote", "executed": "2023-10-19T21:15:56.675401400Z", "dataPointCollections": [ { "weatherDataType": "TrueWindDirection", "dataPoints": [ { "timestamp": "2023-10-19T21:13:24.500Z", "value": 0.5825017039236398, "unit": "NewtonMeter" } ] } ], "page": 1, "continue": false, "onDemandSingle": { "target": "2023-10-19T21:13:33.918953800Z" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
2023-10-19 21:16:10.384 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-sdsl", "destination": "Local", "executed": "2023-10-19T21:16:09.918375600Z", "dataPointCollections": [ { "draftDataType": "Trim", "dataPoints": [ { "timestamp": "2023-10-19T21:15:18.029Z", "value": 0.006592580431305958, "unit": "MetricTonsPerHour" } ] } ], "page": 1, "continue": false, "onDemandSingle": { "target": "2023-10-19T21:15:21.479587600Z" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
2023-10-19 21:16:18.001 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-sdsr", "destination": "Remote", "executed": "2023-10-19T21:16:17.362733800Z", "dataPointCollections": [ { "draftDataType": "Trim", "dataPoints": [ { "timestamp": "2023-10-19T21:15:18.029Z", "value": 0.006592580431305958, "unit": "MetricTonsPerHour" } ] } ], "page": 1, "continue": false, "onDemandSingle": { "target": "2023-10-19T21:15:22.025817300Z" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
2023-10-19 21:16:36.299 +00:00 [INF] DiscoGetSchedulesResponse Received message: { "requestId": "disco-test-client-2_sa-20402-1", "scheduleIds": [ "disco-test-client-2_sa-20359-sdrl", "disco-test-client-2_sa-20359-sdrr", "disco-test-client-2_sa-20359-sdsl", "disco-test-client-2_sa-20359-sdsr", "disco-test-client-2_sa-20359-slrl", "disco-test-client-2_sa-20359-slrr", "disco-test-client-2_sa-20359-slsl", "disco-test-client-2_sa-20359-slsr", "disco-test-client-2_sa-20359-swrl", "disco-test-client-2_sa-20359-swrr", "disco-test-client-2_sa-20359-swsl", "disco-test-client-2_sa-20359-swsr" ] }
2023-10-19 21:16:41.417 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-sdrl", "scheduleId": "disco-test-client-2_sa-20359-sdrl" }
2023-10-19 21:16:41.615 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-sdsl", "scheduleId": "disco-test-client-2_sa-20359-sdsl" }
2023-10-19 21:16:41.789 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slrl", "scheduleId": "disco-test-client-2_sa-20359-slrl" }
2023-10-19 21:16:41.975 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slsl", "scheduleId": "disco-test-client-2_sa-20359-slsl" }
2023-10-19 21:16:42.156 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swrl", "scheduleId": "disco-test-client-2_sa-20359-swrl" }
2023-10-19 21:16:42.332 +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swsl", "scheduleId": "disco-test-client-2_sa-20359-swsl" }
2023-10-19 21:17:07.852 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slsl", "destination": "Local", "executed": "2023-10-19T21:17:07.604507500Z", "dataPointCollections": [ { "locationDataType": "Latitude", "dataPoints": [ { "timestamp": "2023-10-19T21:15:28.321Z", "value": 26.536996, "unit": "Degrees" } ] }, { "locationDataType": "Longitude", "dataPoints": [ { "timestamp": "2023-10-19T21:15:28.321Z", "value": -89.0853836, "unit": "Degrees" } ] } ], "page": 1, "continue": false, "onDemandSingle": { "target": "2023-10-19T21:15:32.089934100Z" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
2023-10-19 21:17:11.084 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swsl", "destination": "Local", "executed": "2023-10-19T21:17:10.323596800Z", "dataPointCollections": [ { "weatherDataType": "TrueWindDirection", "dataPoints": [ { "timestamp": "2023-10-19T21:15:28.321Z", "value": 0.5826940381788221, "unit": "NewtonMeter" } ] } ], "page": 1, "continue": false, "onDemandSingle": { "target": "2023-10-19T21:15:33.987584500Z" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
2023-10-19 21:17:15.389 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-slrr", "destination": "Remote", "executed": "2023-10-19T21:17:03.456068500Z", "dataPointCollections": [ { "locationDataType": "Latitude", "dataPoints": [ { "timestamp": "2023-10-18T21:12:00Z", "value": 24.519752, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:18:00Z", "value": 24.378434, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:24:00Z", "value": 24.237116, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:30:00Z", "value": 24.1600036, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:36:00Z", "value": 24.1507768, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:42:00Z", "value": 24.1512836, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:48:00Z", "value": 24.1769161, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:54:00Z", "value": 24.2189137, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:00:00Z", "value": 24.3535663, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:06:00Z", "value": 24.5371693, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:12:00Z", "value": 24.7582848, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:18:00Z", "value": 25.06989, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:24:00Z", "value": 25.3649276, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:30:00Z", "value": 25.6766022, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:36:00Z", "value": 25.77269, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:42:00Z", "value": 29.7193422, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:48:00Z", "value": 29.7465532, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:54:00Z", "value": 29.7311887, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:00:00Z", "value": 29.5776915, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:06:00Z", "value": 29.3676129, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:12:00Z", "value": 29.238883, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:18:00Z", "value": 29.0805218, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:24:00Z", "value": 28.8994914, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:30:00Z", "value": 28.7354326, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:36:00Z", "value": 28.5544022, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:42:00Z", "value": 28.3677146, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:48:00Z", "value": 28.1626106, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:54:00Z", "value": 27.8824074, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:00:00Z", "value": 27.7311072, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:06:00Z", "value": 27.5915604, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:12:00Z", "value": 27.4520136, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:18:00Z", "value": 27.3163431, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:24:00Z", "value": 27.1767963, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:30:00Z", "value": 27.0440518, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:36:00Z", "value": 26.9127844, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:42:00Z", "value": 26.7801532, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:48:00Z", "value": 26.647522, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:54:00Z", "value": 26.5148908, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:00:00Z", "value": 26.3822596, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:06:00Z", "value": 26.2496284, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:12:00Z", "value": 26.1169972, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:18:00Z", "value": 25.984366, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:24:00Z", "value": 25.8517348, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:30:00Z", "value": 25.7191036, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:36:00Z", "value": 25.587488, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:42:00Z", "value": 25.44617, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:48:00Z", "value": 25.304852, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:54:00Z", "value": 25.163534, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:00:00Z", "value": 25.022216, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:06:00Z", "value": 24.880898, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:12:00Z", "value": 24.7435055, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:18:00Z", "value": 24.6021875, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:24:00Z", "value": 24.4608695, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:30:00Z", "value": 24.3195515, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:36:00Z", "value": 24.1991013, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:42:00Z", "value": 24.1561591, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:48:00Z", "value": 24.1469323, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:54:00Z", "value": 24.1592846, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:00:00Z", "value": 24.1944151, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:06:00Z", "value": 24.2434045, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:12:00Z", "value": 24.4322533, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:18:00Z", "value": 24.6211021, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:24:00Z", "value": 24.896776, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:30:00Z", "value": 25.2083812, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:36:00Z", "value": 25.5070681, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:42:00Z", "value": 25.7572522, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:48:00Z", "value": 29.7338354, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:54:00Z", "value": 29.7351064, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:00:00Z", "value": 29.7611408, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:06:00Z", "value": 29.6498869, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:12:00Z", "value": 29.4336329, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:18:00Z", "value": 29.2967624, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:24:00Z", "value": 29.114465, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:30:00Z", "value": 28.9108058, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:36:00Z", "value": 28.7071466, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:42:00Z", "value": 28.5034874, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:48:00Z", "value": 28.2998282, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:54:00Z", "value": 28.0614262, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:00:00Z", "value": 27.8202621, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:06:00Z", "value": 27.6807153, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:12:00Z", "value": 27.5411685, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:18:00Z", "value": 27.4016217, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:24:00Z", "value": 27.2620749, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:30:00Z", "value": 27.127324, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:36:00Z", "value": 26.9910604, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:42:00Z", "value": 26.8612056, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:48:00Z", "value": 26.7285744, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:54:00Z", "value": 26.5959432, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:00:00Z", "value": 26.463312, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:06:00Z", "value": 26.3306808, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:12:00Z", "value": 26.2017338, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:18:00Z", "value": 26.0691026, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:24:00Z", "value": 25.9364714, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:30:00Z", "value": 25.8038402, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:36:00Z", "value": 25.671209, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:42:00Z", "value": 25.5364565, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:48:00Z", "value": 25.3951385, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:54:00Z", "value": 25.2538205, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:00:00Z", "value": 25.1125025, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:06:00Z", "value": 24.9711845, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:12:00Z", "value": 24.8298665, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:18:00Z", "value": 24.6885485, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:24:00Z", "value": 24.5472305, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:30:00Z", "value": 24.4059125, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:36:00Z", "value": 24.2645945, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:42:00Z", "value": 24.1704811, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:48:00Z", "value": 24.1525709, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:54:00Z", "value": 24.1475498, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:00:00Z", "value": 24.1687499, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:06:00Z", "value": 24.2107475, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:12:00Z", "value": 24.3168457, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:18:00Z", "value": 24.5004487, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:24:00Z", "value": 24.6976949, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:30:00Z", "value": 25.0093001, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:36:00Z", "value": 25.3126946, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:42:00Z", "value": 25.6295099, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:48:00Z", "value": 25.7709975, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:54:00Z", "value": 29.7255516, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:00:00Z", "value": 29.7457789, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:06:00Z", "value": 29.7311887, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:12:00Z", "value": 29.5655999, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:18:00Z", "value": 29.3479502, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:24:00Z", "value": 29.1985514, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:30:00Z", "value": 29.0352642, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:36:00Z", "value": 28.831605, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:42:00Z", "value": 28.6279458, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:48:00Z", "value": 28.4242866, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:54:00Z", "value": 28.2206274, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:00:00Z", "value": 27.9524583, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:06:00Z", "value": 27.7659939, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:12:00Z", "value": 27.6303234, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:18:00Z", "value": 27.4946529, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:24:00Z", "value": 27.3551061, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:30:00Z", "value": 27.2155593, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:36:00Z", "value": 27.0819028, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:42:00Z", "value": 26.9496264, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:48:00Z", "value": 26.8169952, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:54:00Z", "value": 26.684364, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:00:00Z", "value": 26.5517328, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:06:00Z", "value": 26.4191016, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:12:00Z", "value": 26.2864704, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:18:00Z", "value": 26.1538392, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:24:00Z", "value": 26.021208, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:30:00Z", "value": 25.8885768, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:36:00Z", "value": 25.7559456, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:42:00Z", "value": 25.626743, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:48:00Z", "value": 25.485425, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:54:00Z", "value": 25.344107, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:00:00Z", "value": 25.202789, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:06:00Z", "value": 25.061471, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:12:00Z", "value": 24.920153, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:18:00Z", "value": 24.7827605, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:24:00Z", "value": 24.6414425, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:30:00Z", "value": 24.5001245, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:36:00Z", "value": 24.3588065, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:42:00Z", "value": 24.2174885, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:48:00Z", "value": 24.1587221, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:54:00Z", "value": 24.1494953, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:00:00Z", "value": 24.1539506, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:06:00Z", "value": 24.1827491, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:12:00Z", "value": 24.2247467, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:18:00Z", "value": 24.3693037, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:24:00Z", "value": 24.5476609, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:30:00Z", "value": 24.7669405, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:36:00Z", "value": 25.0612343, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:42:00Z", "value": 25.3475166, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:48:00Z", "value": 25.6483471, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:54:00Z", "value": 25.7709975, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:00:00Z", "value": 29.7266898, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:06:00Z", "value": 29.7439617, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:12:00Z", "value": 29.7558758, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:18:00Z", "value": 29.6079205, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:24:00Z", "value": 29.4006229, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:30:00Z", "value": 29.267236, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:36:00Z", "value": 29.0974934, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:42:00Z", "value": 28.8938342, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:48:00Z", "value": 28.690175, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:54:00Z", "value": 28.492173, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:00:00Z", "value": 28.2885138, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:06:00Z", "value": 28.0458594, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:12:00Z", "value": 27.8163858, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:18:00Z", "value": 27.6807153, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:24:00Z", "value": 27.5489211, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:30:00Z", "value": 27.4171269, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:36:00Z", "value": 27.2853327, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:42:00Z", "value": 27.1576048, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:48:00Z", "value": 27.0289114, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:54:00Z", "value": 26.905416, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:00:00Z", "value": 26.7801532, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:06:00Z", "value": 26.6548904, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:12:00Z", "value": 26.5296276, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:18:00Z", "value": 26.3969964, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:24:00Z", "value": 26.2643652, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:30:00Z", "value": 26.131734, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:36:00Z", "value": 25.9991028, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:42:00Z", "value": 25.8664716, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:48:00Z", "value": 25.7338404, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:54:00Z", "value": 25.60319, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:00:00Z", "value": 25.461872, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:06:00Z", "value": 25.320554, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:12:00Z", "value": 25.179236, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:18:00Z", "value": 25.037918, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:24:00Z", "value": 24.8966, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:30:00Z", "value": 24.755282, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:36:00Z", "value": 24.6178895, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:42:00Z", "value": 24.4765715, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:48:00Z", "value": 24.3352535, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:54:00Z", "value": 24.2072785, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:00:00Z", "value": 24.1571843, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:06:00Z", "value": 24.1479575, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:12:00Z", "value": 24.157151, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:18:00Z", "value": 24.1897487, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:24:00Z", "value": 24.2317463, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:30:00Z", "value": 24.4112701, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:36:00Z", "value": 24.6001189, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:42:00Z", "value": 24.8621532, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:48:00Z", "value": 25.1737584, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:54:00Z", "value": 25.4693937, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:00:00Z", "value": 25.7652838, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:06:00Z", "value": 29.7377973, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:12:00Z", "value": 29.7274852, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:18:00Z", "value": 29.7423327, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:24:00Z", "value": 29.6708701, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:30:00Z", "value": 29.4534389, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:36:00Z", "value": 29.3097504, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:42:00Z", "value": 29.1370938, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:48:00Z", "value": 28.9334346, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:54:00Z", "value": 28.7297754, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:00:00Z", "value": 28.5261162, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:06:00Z", "value": 28.322457, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:12:00Z", "value": 28.0925598, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:18:00Z", "value": 27.8357673, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:24:00Z", "value": 27.6962205, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:30:00Z", "value": 27.56055, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:36:00Z", "value": 27.4210032, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:42:00Z", "value": 27.2814564, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:48:00Z", "value": 27.1462495, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:54:00Z", "value": 27.0099859, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:00:00Z", "value": 26.8796266, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:06:00Z", "value": 26.7469954, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:12:00Z", "value": 26.6143642, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:18:00Z", "value": 26.536996, "unit": "Degrees" } ] }, { "locationDataType": "Longitude", "dataPoints": [ { "timestamp": "2023-10-18T21:12:00Z", "value": -83.8407239, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:18:00Z", "value": -83.4876179, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:24:00Z", "value": -83.1345119, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:30:00Z", "value": -82.7829838, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:36:00Z", "value": -82.4004262, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:42:00Z", "value": -82.0262497, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:48:00Z", "value": -81.649308, "unit": "Degrees" }, { "timestamp": "2023-10-18T21:54:00Z", "value": -81.2650404, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:00:00Z", "value": -80.9282955, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:06:00Z", "value": -80.610779, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:12:00Z", "value": -80.3366648, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:18:00Z", "value": -80.152118, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:24:00Z", "value": -79.9771293, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:30:00Z", "value": -79.9977571, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:36:00Z", "value": -80.15834, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:42:00Z", "value": -95.2444929, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:48:00Z", "value": -95.1700583, "unit": "Degrees" }, { "timestamp": "2023-10-18T22:54:00Z", "value": -95.0445183, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:00:00Z", "value": -94.9303597, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:06:00Z", "value": -94.8021668, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:12:00Z", "value": -94.5564538, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:18:00Z", "value": -94.2698053, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:24:00Z", "value": -93.9796357, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:30:00Z", "value": -93.7166695, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:36:00Z", "value": -93.4264999, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:42:00Z", "value": -93.1272625, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:48:00Z", "value": -92.8336169, "unit": "Degrees" }, { "timestamp": "2023-10-18T23:54:00Z", "value": -92.5951529, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:00:00Z", "value": -92.2573193, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:06:00Z", "value": -91.8957677, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:12:00Z", "value": -91.5342161, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:18:00Z", "value": -91.1827076, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:24:00Z", "value": -90.821156, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:30:00Z", "value": -90.4643087, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:36:00Z", "value": -90.1090556, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:42:00Z", "value": -89.7477596, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:48:00Z", "value": -89.3864636, "unit": "Degrees" }, { "timestamp": "2023-10-19T00:54:00Z", "value": -89.0251676, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:00:00Z", "value": -88.6638716, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:06:00Z", "value": -88.3025756, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:12:00Z", "value": -87.9412796, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:18:00Z", "value": -87.5799836, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:24:00Z", "value": -87.2186876, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:30:00Z", "value": -86.8573916, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:36:00Z", "value": -86.5086359, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:42:00Z", "value": -86.1555299, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:48:00Z", "value": -85.8024239, "unit": "Degrees" }, { "timestamp": "2023-10-19T01:54:00Z", "value": -85.4493179, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:00:00Z", "value": -85.0962119, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:06:00Z", "value": -84.7431059, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:12:00Z", "value": -84.3998084, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:18:00Z", "value": -84.0467024, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:24:00Z", "value": -83.6935964, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:30:00Z", "value": -83.3404904, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:36:00Z", "value": -82.9916613, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:42:00Z", "value": -82.6235848, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:48:00Z", "value": -82.2410272, "unit": "Degrees" }, { "timestamp": "2023-10-19T02:54:00Z", "value": -81.8640457, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:00:00Z", "value": -81.4891965, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:06:00Z", "value": -81.1188054, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:12:00Z", "value": -80.792217, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:18:00Z", "value": -80.4656286, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:24:00Z", "value": -80.254644, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:30:00Z", "value": -80.0700972, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:36:00Z", "value": -79.9300921, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:42:00Z", "value": -80.1174632, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:48:00Z", "value": -95.2774588, "unit": "Degrees" }, { "timestamp": "2023-10-19T03:54:00Z", "value": -95.2056208, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:00:00Z", "value": -95.0894059, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:06:00Z", "value": -94.9694921, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:12:00Z", "value": -94.8353968, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:18:00Z", "value": -94.6109919, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:24:00Z", "value": -94.3242121, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:30:00Z", "value": -93.9977713, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:36:00Z", "value": -93.6713305, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:42:00Z", "value": -93.3448897, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:48:00Z", "value": -93.0184489, "unit": "Degrees" }, { "timestamp": "2023-10-19T04:54:00Z", "value": -92.7475049, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:00:00Z", "value": -92.4883106, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:06:00Z", "value": -92.126759, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:12:00Z", "value": -91.7652074, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:18:00Z", "value": -91.4036558, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:24:00Z", "value": -91.0421042, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:30:00Z", "value": -90.6889221, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:36:00Z", "value": -90.3213729, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:42:00Z", "value": -89.9685516, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:48:00Z", "value": -89.6072556, "unit": "Degrees" }, { "timestamp": "2023-10-19T05:54:00Z", "value": -89.2459596, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:00:00Z", "value": -88.8846636, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:06:00Z", "value": -88.5233676, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:12:00Z", "value": -88.1721076, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:18:00Z", "value": -87.8108116, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:24:00Z", "value": -87.4495156, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:30:00Z", "value": -87.0882196, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:36:00Z", "value": -86.7269236, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:42:00Z", "value": -86.3811254, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:48:00Z", "value": -86.0280194, "unit": "Degrees" }, { "timestamp": "2023-10-19T06:54:00Z", "value": -85.6749134, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:00:00Z", "value": -85.3218074, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:06:00Z", "value": -84.9687014, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:12:00Z", "value": -84.6155954, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:18:00Z", "value": -84.2624894, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:24:00Z", "value": -83.9093834, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:30:00Z", "value": -83.5562774, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:36:00Z", "value": -83.2031714, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:42:00Z", "value": -82.8457295, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:48:00Z", "value": -82.4748124, "unit": "Degrees" }, { "timestamp": "2023-10-19T07:54:00Z", "value": -82.1019449, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:00:00Z", "value": -81.7240267, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:06:00Z", "value": -81.3397591, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:12:00Z", "value": -80.9917988, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:18:00Z", "value": -80.6742823, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:24:00Z", "value": -80.3725489, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:30:00Z", "value": -80.1880021, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:36:00Z", "value": -80.0081661, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:42:00Z", "value": -79.9789617, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:48:00Z", "value": -80.1517717, "unit": "Degrees" }, { "timestamp": "2023-10-19T08:54:00Z", "value": -95.2538003, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:00:00Z", "value": -95.1804414, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:06:00Z", "value": -95.0445183, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:12:00Z", "value": -94.9210661, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:18:00Z", "value": -94.7821519, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:24:00Z", "value": -94.5123057, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:30:00Z", "value": -94.1972629, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:36:00Z", "value": -93.8708221, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:42:00Z", "value": -93.5443813, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:48:00Z", "value": -93.2179405, "unit": "Degrees" }, { "timestamp": "2023-10-19T09:54:00Z", "value": -92.8914997, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:00:00Z", "value": -92.6547689, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:06:00Z", "value": -92.3477072, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:12:00Z", "value": -91.9961987, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:18:00Z", "value": -91.6446902, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:24:00Z", "value": -91.2831386, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:30:00Z", "value": -90.921587, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:36:00Z", "value": -90.5664057, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:42:00Z", "value": -90.2094156, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:48:00Z", "value": -89.8481196, "unit": "Degrees" }, { "timestamp": "2023-10-19T10:54:00Z", "value": -89.4868236, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:00:00Z", "value": -89.1255276, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:06:00Z", "value": -88.7642316, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:12:00Z", "value": -88.4029356, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:18:00Z", "value": -88.0416396, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:24:00Z", "value": -87.6803436, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:30:00Z", "value": -87.3190476, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:36:00Z", "value": -86.9577516, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:42:00Z", "value": -86.6067209, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:48:00Z", "value": -86.2536149, "unit": "Degrees" }, { "timestamp": "2023-10-19T11:54:00Z", "value": -85.9005089, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:00:00Z", "value": -85.5474029, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:06:00Z", "value": -85.1942969, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:12:00Z", "value": -84.8411909, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:18:00Z", "value": -84.4978934, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:24:00Z", "value": -84.1447874, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:30:00Z", "value": -83.7916814, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:36:00Z", "value": -83.4385754, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:42:00Z", "value": -83.0854694, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:48:00Z", "value": -82.7298508, "unit": "Degrees" }, { "timestamp": "2023-10-19T12:54:00Z", "value": -82.3472932, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:00:00Z", "value": -81.9721817, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:06:00Z", "value": -81.5959375, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:12:00Z", "value": -81.2116699, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:18:00Z", "value": -80.9010798, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:24:00Z", "value": -80.5926352, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:30:00Z", "value": -80.3315385, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:36:00Z", "value": -80.1572443, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:42:00Z", "value": -79.9874749, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:48:00Z", "value": -79.9864801, "unit": "Degrees" }, { "timestamp": "2023-10-19T13:54:00Z", "value": -80.1517717, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:00:00Z", "value": -95.2581876, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:06:00Z", "value": -95.1916716, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:12:00Z", "value": -95.0678942, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:18:00Z", "value": -94.9535937, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:24:00Z", "value": -94.8187818, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:30:00Z", "value": -94.5730883, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:36:00Z", "value": -94.2970087, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:42:00Z", "value": -93.9705679, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:48:00Z", "value": -93.6441271, "unit": "Degrees" }, { "timestamp": "2023-10-19T14:54:00Z", "value": -93.3267541, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:00:00Z", "value": -93.0003133, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:06:00Z", "value": -92.7342569, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:12:00Z", "value": -92.4782675, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:18:00Z", "value": -92.126759, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:24:00Z", "value": -91.7852936, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:30:00Z", "value": -91.4438282, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:36:00Z", "value": -91.1023628, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:42:00Z", "value": -90.7705997, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:48:00Z", "value": -90.4234699, "unit": "Degrees" }, { "timestamp": "2023-10-19T15:54:00Z", "value": -90.0889836, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:00:00Z", "value": -89.7477596, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:06:00Z", "value": -89.4065356, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:12:00Z", "value": -89.0653116, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:18:00Z", "value": -88.7040156, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:24:00Z", "value": -88.3427196, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:30:00Z", "value": -87.9814236, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:36:00Z", "value": -87.6201276, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:42:00Z", "value": -87.2588316, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:48:00Z", "value": -86.8975356, "unit": "Degrees" }, { "timestamp": "2023-10-19T16:54:00Z", "value": -86.5478699, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:00:00Z", "value": -86.1947639, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:06:00Z", "value": -85.8416579, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:12:00Z", "value": -85.4885519, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:18:00Z", "value": -85.1354459, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:24:00Z", "value": -84.7823399, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:30:00Z", "value": -84.4292339, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:36:00Z", "value": -84.0859364, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:42:00Z", "value": -83.7328304, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:48:00Z", "value": -83.3797244, "unit": "Degrees" }, { "timestamp": "2023-10-19T17:54:00Z", "value": -83.0333561, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:00:00Z", "value": -82.6660912, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:06:00Z", "value": -82.2835336, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:12:00Z", "value": -81.9073001, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:18:00Z", "value": -81.5318929, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:24:00Z", "value": -81.1476253, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:30:00Z", "value": -80.8285046, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:36:00Z", "value": -80.5019162, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:42:00Z", "value": -80.2751492, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:48:00Z", "value": -80.0906024, "unit": "Degrees" }, { "timestamp": "2023-10-19T18:54:00Z", "value": -79.9150553, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:00:00Z", "value": -80.0867886, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:06:00Z", "value": -95.2793805, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:12:00Z", "value": -95.2101939, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:18:00Z", "value": -95.1061973, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:24:00Z", "value": -94.9774415, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:30:00Z", "value": -94.8453658, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:36:00Z", "value": -94.6310909, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:42:00Z", "value": -94.3604833, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:48:00Z", "value": -94.0340425, "unit": "Degrees" }, { "timestamp": "2023-10-19T19:54:00Z", "value": -93.7076017, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:00:00Z", "value": -93.3811609, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:06:00Z", "value": -93.0547201, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:12:00Z", "value": -92.7740009, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:18:00Z", "value": -92.528483, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:24:00Z", "value": -92.1669314, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:30:00Z", "value": -91.8154229, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:36:00Z", "value": -91.4538713, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:42:00Z", "value": -91.0923197, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:48:00Z", "value": -90.7399706, "unit": "Degrees" }, { "timestamp": "2023-10-19T20:54:00Z", "value": -90.3724214, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:00:00Z", "value": -90.0187316, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:06:00Z", "value": -89.6574356, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:12:00Z", "value": -89.2961396, "unit": "Degrees" }, { "timestamp": "2023-10-19T21:18:00Z", "value": -89.0853836, "unit": "Degrees" } ] } ], "page": 1, "continue": false, "onDemandRange": { "start": "2023-10-18T21:15:31.512524500Z", "end": "2023-10-19T21:15:31.511524500Z", "intervalMilliseconds": "360000" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
2023-10-19 21:17:20.254 +00:00 [INF] DiscoDataResponse Received message: { "requestId": "disco-test-client-2_sa-20359-swrr", "destination": "Remote", "executed": "2023-10-19T21:17:08.023264300Z", "dataPointCollections": [ { "weatherDataType": "TrueWindDirection", "dataPoints": [ { "timestamp": "2023-10-18T21:12:00Z", "value": 0.5853382615659074, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:18:00Z", "value": 0.5858886401133588, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:24:00Z", "value": 0.5864361305244313, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:30:00Z", "value": 0.5823422841906721, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:36:00Z", "value": 0.5823843149306083, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:42:00Z", "value": 0.5932902955686491, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:48:00Z", "value": 0.5888475070216206, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T21:54:00Z", "value": 0.5886563282715828, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:00:00Z", "value": 0.587741213089518, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:06:00Z", "value": 0.5871315708289624, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:12:00Z", "value": 0.5900877776557762, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:18:00Z", "value": 0.5897541548765168, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:24:00Z", "value": 0.5932625057495596, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:30:00Z", "value": 5.310833239281902e-05, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:36:00Z", "value": 0.108579423394485, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:42:00Z", "value": 0.2346199149342523, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:48:00Z", "value": 0.1182713520147766, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T22:54:00Z", "value": 0.1825721255117204, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:00:00Z", "value": 0.4366170251627849, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:06:00Z", "value": 0.4328438845366993, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:12:00Z", "value": 0.6880985517591724, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:18:00Z", "value": 0.5845901158439513, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:24:00Z", "value": 0.5852689133918677, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:30:00Z", "value": 0.5858810707074962, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:36:00Z", "value": 0.5865532272548841, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:42:00Z", "value": 0.5872427171374721, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:48:00Z", "value": 0.5842226733955195, "unit": "NewtonMeter" }, { "timestamp": "2023-10-18T23:54:00Z", "value": 0.5847715946870335, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:00:00Z", "value": 0.5822607074573863, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:06:00Z", "value": 0.5828857768120691, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:12:00Z", "value": 0.5835080663440033, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:18:00Z", "value": 0.584110399422527, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:24:00Z", "value": 0.5847271893920173, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:30:00Z", "value": 0.591370605061732, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:36:00Z", "value": 0.5810500900899104, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:42:00Z", "value": 0.5816326619731896, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:48:00Z", "value": 0.5822126661822395, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T00:54:00Z", "value": 0.5827900979696031, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:00:00Z", "value": 0.5833649526164946, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:06:00Z", "value": 0.5839372254288285, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:12:00Z", "value": 0.5845069117434739, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:18:00Z", "value": 0.5850740069224951, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:24:00Z", "value": 0.5856385063555903, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:30:00Z", "value": 0.5862004054587464, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:36:00Z", "value": 0.5810870455531189, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:42:00Z", "value": 0.5816590731925908, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:48:00Z", "value": 0.5822282532835437, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T01:54:00Z", "value": 0.582794580337194, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:00:00Z", "value": 0.5833580489023161, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:06:00Z", "value": 0.5839186535621252, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:12:00Z", "value": 0.5844609350796677, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:18:00Z", "value": 0.5850158757446814, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:24:00Z", "value": 0.5855679366125759, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:30:00Z", "value": 0.5861171124080997, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:36:00Z", "value": 0.5838914235321746, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:42:00Z", "value": 0.5823597988324118, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:48:00Z", "value": 0.5824018232854881, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T02:54:00Z", "value": 0.593253249195355, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:00:00Z", "value": 0.5887678869992411, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:06:00Z", "value": 0.5881050556807597, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:12:00Z", "value": 0.5874804329172766, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:18:00Z", "value": 0.5868515320249386, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:24:00Z", "value": 0.5899399025687082, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:30:00Z", "value": 0.5896048372984453, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:36:00Z", "value": 0.6010715206630408, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:42:00Z", "value": 0.2607340790527608, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:48:00Z", "value": 7.951717240300174e-06, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T03:54:00Z", "value": 0.0823637027374875, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:00:00Z", "value": 0.2471882137263233, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:06:00Z", "value": 0.4421217081918886, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:12:00Z", "value": 0.4327985581364317, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:18:00Z", "value": 0.6652729671417527, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:24:00Z", "value": 0.5844624554288941, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:30:00Z", "value": 0.5852265902555892, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:36:00Z", "value": 0.5859863256357362, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:42:00Z", "value": 0.586741640337894, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:48:00Z", "value": 0.5874925133129423, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T04:54:00Z", "value": 0.5844213709651703, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:00:00Z", "value": 0.5818599049722091, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:06:00Z", "value": 0.5824867472416608, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:12:00Z", "value": 0.5831108134499234, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:18:00Z", "value": 0.5837320977157862, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:24:00Z", "value": 0.5843505941952931, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:30:00Z", "value": 0.5909960985436917, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:36:00Z", "value": 0.5916083944726145, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:42:00Z", "value": 0.5812769506276197, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:48:00Z", "value": 0.5818585245362312, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T05:54:00Z", "value": 0.582437528922188, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:00:00Z", "value": 0.5830139590474365, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:06:00Z", "value": 0.5835878102027323, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:12:00Z", "value": 0.5841432440956291, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:18:00Z", "value": 0.5847119952558464, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:24:00Z", "value": 0.5852781536126171, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:30:00Z", "value": 0.5858417145644519, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:36:00Z", "value": 0.5864026735401725, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:42:00Z", "value": 0.5812939392208711, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:48:00Z", "value": 0.5818649392135803, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T06:54:00Z", "value": 0.5824330896731454, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:00:00Z", "value": 0.5829983851216766, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:06:00Z", "value": 0.5835608201220895, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:12:00Z", "value": 0.584120389269683, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:18:00Z", "value": 0.5846770871975309, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:24:00Z", "value": 0.5852309085715202, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:30:00Z", "value": 0.5857818480922452, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:36:00Z", "value": 0.5863299004954516, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:42:00Z", "value": 0.5840166417897549, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:48:00Z", "value": 0.582376143468415, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T07:54:00Z", "value": 0.5933075799297818, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:00:00Z", "value": 0.5888846445548633, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:06:00Z", "value": 0.5886935262703058, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:12:00Z", "value": 0.5878626560487598, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:18:00Z", "value": 0.5872538226107831, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:24:00Z", "value": 0.5901522700613241, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:30:00Z", "value": 0.5898192804829806, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:36:00Z", "value": 0.5933198280089756, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:42:00Z", "value": 0.6010010128163954, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:48:00Z", "value": 0.091543733756414, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T08:54:00Z", "value": 0.1281326893567234, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:00:00Z", "value": 0.2010174275249571, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:06:00Z", "value": 0.1825721255117204, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:12:00Z", "value": 0.4366331748204964, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:18:00Z", "value": 0.526080217848405, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:24:00Z", "value": 7.969834770730948e-06, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:30:00Z", "value": 0.5847601403836878, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:36:00Z", "value": 0.5855225668494961, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:42:00Z", "value": 0.586280585589582, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:48:00Z", "value": 0.5870341754439634, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T09:54:00Z", "value": 0.5877833154348565, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:00:00Z", "value": 0.5846395508194142, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:06:00Z", "value": 0.5821040064612709, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:12:00Z", "value": 0.5827124250248195, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:18:00Z", "value": 0.5833182175992824, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:24:00Z", "value": 0.5839385732504193, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:30:00Z", "value": 0.5845561391745446, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:36:00Z", "value": 0.591200501656656, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:42:00Z", "value": 0.5808878095264367, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:48:00Z", "value": 0.5814710938064767, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T10:54:00Z", "value": 0.5820518117351372, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:00:00Z", "value": 0.5826299585592661, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:06:00Z", "value": 0.5832055295499119, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:12:00Z", "value": 0.5837785200072687, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:18:00Z", "value": 0.5843489252606119, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:24:00Z", "value": 0.5849167406631632, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:30:00Z", "value": 0.585481961597066, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:36:00Z", "value": 0.5860445834733211, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:42:00Z", "value": 0.5809276443774024, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:48:00Z", "value": 0.58150046202446, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T11:54:00Z", "value": 0.5820704336526574, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:00:00Z", "value": 0.5826375537655776, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:06:00Z", "value": 0.5832018168999845, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:12:00Z", "value": 0.5837632176308883, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:18:00Z", "value": 0.5843062745349875, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:24:00Z", "value": 0.5848620142021035, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:30:00Z", "value": 0.5854148755450123, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:36:00Z", "value": 0.585964853276016, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:42:00Z", "value": 0.5865119421444314, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:48:00Z", "value": 0.5823481226958921, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T12:54:00Z", "value": 0.5823901513406938, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:00:00Z", "value": 0.5932779480587452, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:06:00Z", "value": 0.5888209730132269, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:12:00Z", "value": 0.5886297510755875, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:18:00Z", "value": 0.5876891165204915, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:24:00Z", "value": 0.5870966120865415, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:30:00Z", "value": 0.5900785543566036, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:36:00Z", "value": 0.5897634660318619, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:42:00Z", "value": 0.5932816232994007, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:48:00Z", "value": 0.6009901431830029, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T13:54:00Z", "value": 0.091543733756414, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:00:00Z", "value": 0.0980252383948024, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:06:00Z", "value": 0.1858521411647134, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:12:00Z", "value": 0.1552186771331175, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:18:00Z", "value": 2.088033819132908e-05, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:24:00Z", "value": 0.432821229834901, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:30:00Z", "value": 0.6653799342014238, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:36:00Z", "value": 0.5845263008441934, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:42:00Z", "value": 0.5852900698657453, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:48:00Z", "value": 0.5860494376644174, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T14:54:00Z", "value": 0.5867834722228142, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:00:00Z", "value": 0.5875340978211975, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:06:00Z", "value": 0.5844518920772737, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:12:00Z", "value": 0.5818773546911318, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:18:00Z", "value": 0.5824867472416608, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:24:00Z", "value": 0.583076216033354, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:30:00Z", "value": 0.5836632036925847, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:36:00Z", "value": 0.584247705292146, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:42:00Z", "value": 0.590859660785392, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:48:00Z", "value": 0.5914385872089067, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T15:54:00Z", "value": 0.5810825224753032, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:00:00Z", "value": 0.5816326619731896, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:06:00Z", "value": 0.5821805111688569, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:12:00Z", "value": 0.5827260660622567, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:18:00Z", "value": 0.583301207289894, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:24:00Z", "value": 0.5838737672032449, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:30:00Z", "value": 0.5844437411367948, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:36:00Z", "value": 0.5850111244480208, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:42:00Z", "value": 0.5855759125234541, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:48:00Z", "value": 0.5861381007789045, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T16:54:00Z", "value": 0.5810233113912284, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:00:00Z", "value": 0.5815956550855874, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:06:00Z", "value": 0.5821651518418617, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:12:00Z", "value": 0.5827317961688245, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:18:00Z", "value": 0.5832955826125177, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:24:00Z", "value": 0.5838565057510596, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:30:00Z", "value": 0.5844145601996319, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:36:00Z", "value": 0.5849543577861772, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:42:00Z", "value": 0.5855067388933348, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:48:00Z", "value": 0.5860562355114313, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T17:54:00Z", "value": 0.5838556215367909, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:00:00Z", "value": 0.5823551285186399, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:06:00Z", "value": 0.5823971546470229, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:12:00Z", "value": 0.5932631293559675, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:18:00Z", "value": 0.5887891242849844, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:24:00Z", "value": 0.5885978505242533, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:30:00Z", "value": 0.5875500469592166, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:36:00Z", "value": 0.5869216207463916, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:42:00Z", "value": 0.5899769317358321, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:48:00Z", "value": 0.5896422264571932, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T18:54:00Z", "value": 2.249814606471693e-05, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:00:00Z", "value": 0.7585845739644662, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:06:00Z", "value": 0.1325449536630455, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:12:00Z", "value": 0.0851126182488352, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:18:00Z", "value": 0.501666108962665, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:24:00Z", "value": 0.4421126915312736, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:30:00Z", "value": 0.4327849469696311, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:36:00Z", "value": 0.6500969218216448, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:42:00Z", "value": 0.5843772809167153, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:48:00Z", "value": 0.585141903252684, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T19:54:00Z", "value": 0.5859021285118691, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:00:00Z", "value": 0.5866579354433099, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:06:00Z", "value": 0.5874093029763648, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:12:00Z", "value": 0.5843602905612845, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:18:00Z", "value": 0.5817900847265872, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:24:00Z", "value": 0.5824172350828111, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:30:00Z", "value": 0.5830243038131101, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:36:00Z", "value": 0.5836459748093428, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:42:00Z", "value": 0.5842648588292627, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:48:00Z", "value": 0.5909108407844897, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T20:54:00Z", "value": 0.5915235172918745, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:00:00Z", "value": 0.5811959735195004, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:06:00Z", "value": 0.5817779039302559, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:12:00Z", "value": 0.5823572654783763, "unit": "NewtonMeter" }, { "timestamp": "2023-10-19T21:18:00Z", "value": 0.5826940381788221, "unit": "NewtonMeter" } ] } ], "page": 1, "continue": false, "onDemandRange": { "start": "2023-10-18T21:15:33.516637500Z", "end": "2023-10-19T21:15:33.515637500Z", "intervalMilliseconds": "360000" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
