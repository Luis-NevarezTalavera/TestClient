+++ CC-DISCO +++ 
{"Timestamp":"2023-09-20 22:05:44Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:20Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:11Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:07Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:14Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:19Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:08Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:50Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:50Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:50Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:51Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:51Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:46:05Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:48:14Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"1032850b-ba9a-4034-8271-9329947a12af\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:28Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:28Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:28Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:28Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:28Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:37Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:37Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:37Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:37Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:37Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:42Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:42Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:42Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:42Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:42Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"95520175-c84e-44fe-a436-160588889afc\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","Exception":"Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:50:04Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:52:12Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:54:15Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:56:07Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:58:14Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:00:07Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:02:11Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:04:18Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:06:08Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:08:13Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:10:06Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:12:13Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:14:11Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:16:13Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:18:13Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:20:05Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:12Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\""},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\""},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\""},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\""},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"295a8115-502e-487d-ae3a-37be132fe944\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)  ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-senttime: 2023-09-20T22:05:43.1165992+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-senttime: 2023-09-20T22:05:43.1165992+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-senttime: 2023-09-20T22:05:43.1165992+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:31Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:35Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:40Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:40Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:30Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:33Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:37Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:42Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:42Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:27Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:28Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:07Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:09Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:21Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:28Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:30Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:35Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:35Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:27Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:25Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:30Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:30Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:27Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:32Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:32Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:26Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:31Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:31Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:07Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:10Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:23Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:24Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:29Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:29Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:25Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:29Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:34Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:34Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:09Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:23Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:51Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)  ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:51Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-senttime: 2023-09-20T22:39:48.1711694+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-senttime: 2023-09-20T22:39:48.1711694+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-senttime: 2023-09-20T22:39:48.1711694+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:31Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:31Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:06Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:20Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:31Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:31Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:46:05Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:46:06Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:46:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:46:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:46:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:46:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:46:20Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:48:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:48:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:48:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:48:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:48:24Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:48:29Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:48:29Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"1032850b-ba9a-4034-8271-9329947a12af\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"1032850b-ba9a-4034-8271-9329947a12af\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"1032850b-ba9a-4034-8271-9329947a12af\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-65-8E-41-0B-C2-20-14-C7-EF-41-DF-41-3C-27-38-47-83-76-EE-12-D4-25-3C-15-1D-1E-D3-42-70-5A-EA-82-18-FB-EE-E9-E6-D6-A1-87-A0-FC-DE-EF-FF-7C-FD-7A-85-62-61-27-5F-9D-F4-E1-20-70-8D-30-8F-2F-D4-79-C2-18-DD-56-A4-C0-9B-2C-89-C8-95-81-A0-AC-49-DA-D1-36-A0-97-A6-35-7B-D9-82-11-67-30-0F-19-DB-FD-C4-63-C7-07-70-21-05-18-65-25-A1-3B-42-0B-4E-69-3D-9E-CB-9C-8F-9E-34-E3-EF-B3-C5-28-2F-D8-BF-A5-4C-90-EE-0D-FA-A4-B4-56-5E-36-D6-08-9F-62-65-45-53-E1-49-1C-96-9D-1D-DC-C3-1E-02-F0-CF-53-26-F1-B7-97-C8-34-C2-EB-0C-23-E6-4E-B5-79-0A-42-B7-3C-2E-5D-C3-17-EC-5C-A6-37-2D-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 1032850b-ba9a-4034-8271-9329947a12af\r\n----rbs2-senttime: 2023-09-20T22:49:19.1570979+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 1032850b-ba9a-4034-8271-9329947a12af\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-65-8E-41-0B-C2-20-14-C7-EF-41-DF-41-3C-27-38-47-83-76-EE-12-D4-25-3C-15-1D-1E-D3-42-70-5A-EA-82-18-FB-EE-E9-E6-D6-A1-87-A0-FC-DE-EF-FF-7C-FD-7A-85-62-61-27-5F-9D-F4-E1-20-70-8D-30-8F-2F-D4-79-C2-18-DD-56-A4-C0-9B-2C-89-C8-95-81-A0-AC-49-DA-D1-36-A0-97-A6-35-7B-D9-82-11-67-30-0F-19-DB-FD-C4-63-C7-07-70-21-05-18-65-25-A1-3B-42-0B-4E-69-3D-9E-CB-9C-8F-9E-34-E3-EF-B3-C5-28-2F-D8-BF-A5-4C-90-EE-0D-FA-A4-B4-56-5E-36-D6-08-9F-62-65-45-53-E1-49-1C-96-9D-1D-DC-C3-1E-02-F0-CF-53-26-F1-B7-97-C8-34-C2-EB-0C-23-E6-4E-B5-79-0A-42-B7-3C-2E-5D-C3-17-EC-5C-A6-37-2D-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 1032850b-ba9a-4034-8271-9329947a12af\r\n----rbs2-senttime: 2023-09-20T22:49:19.1570979+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 1032850b-ba9a-4034-8271-9329947a12af\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-65-8E-41-0B-C2-20-14-C7-EF-41-DF-41-3C-27-38-47-83-76-EE-12-D4-25-3C-15-1D-1E-D3-42-70-5A-EA-82-18-FB-EE-E9-E6-D6-A1-87-A0-FC-DE-EF-FF-7C-FD-7A-85-62-61-27-5F-9D-F4-E1-20-70-8D-30-8F-2F-D4-79-C2-18-DD-56-A4-C0-9B-2C-89-C8-95-81-A0-AC-49-DA-D1-36-A0-97-A6-35-7B-D9-82-11-67-30-0F-19-DB-FD-C4-63-C7-07-70-21-05-18-65-25-A1-3B-42-0B-4E-69-3D-9E-CB-9C-8F-9E-34-E3-EF-B3-C5-28-2F-D8-BF-A5-4C-90-EE-0D-FA-A4-B4-56-5E-36-D6-08-9F-62-65-45-53-E1-49-1C-96-9D-1D-DC-C3-1E-02-F0-CF-53-26-F1-B7-97-C8-34-C2-EB-0C-23-E6-4E-B5-79-0A-42-B7-3C-2E-5D-C3-17-EC-5C-A6-37-2D-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 1032850b-ba9a-4034-8271-9329947a12af\r\n----rbs2-senttime: 2023-09-20T22:49:19.1570979+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 1032850b-ba9a-4034-8271-9329947a12af\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8D-41-0B-C2-30-0C-85-EF-82-FF-A1-F4-6C-A1-46-9D-B0-F3-2E-82-37-7B-52-3C-04-5B-47-61-6B-B5-ED-0E-32-F6-DF-4D-59-1D-18-02-09-DF-7B-79-19-D7-2B-46-C5-83-79-0F-26-A6-93-E6-35-E3-8A-36-36-44-01-20-0F-95-00-BE-29-26-4D-DC-3A-4C-D6-BB-6C-3B-FB-07-76-8B-E8-5D-63-7A-74-FA-62-5D-DB-19-D2-C7-59-20-29-61-68-4D-CA-27-20-61-27-E4-51-40-A5-B6-FB-5A-4A-EA-2B-9F-7D-D3-F2-25-E0-33-35-98-50-7D-5E-26-FE-05-E9-42-09-DE-7E-90-B0-0A-B6-2F-29-8C-DD-4B-5C-1E-D3-17-42-15-56-1C-DF-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\r\n----rbs2-senttime: 2023-09-20T22:49:19.2357401+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8D-41-0B-C2-30-0C-85-EF-82-FF-A1-F4-6C-A1-46-9D-B0-F3-2E-82-37-7B-52-3C-04-5B-47-61-6B-B5-ED-0E-32-F6-DF-4D-59-1D-18-02-09-DF-7B-79-19-D7-2B-46-C5-83-79-0F-26-A6-93-E6-35-E3-8A-36-36-44-01-20-0F-95-00-BE-29-26-4D-DC-3A-4C-D6-BB-6C-3B-FB-07-76-8B-E8-5D-63-7A-74-FA-62-5D-DB-19-D2-C7-59-20-29-61-68-4D-CA-27-20-61-27-E4-51-40-A5-B6-FB-5A-4A-EA-2B-9F-7D-D3-F2-25-E0-33-35-98-50-7D-5E-26-FE-05-E9-42-09-DE-7E-90-B0-0A-B6-2F-29-8C-DD-4B-5C-1E-D3-17-42-15-56-1C-DF-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\r\n----rbs2-senttime: 2023-09-20T22:49:19.2357401+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8D-41-0B-C2-30-0C-85-EF-82-FF-A1-F4-6C-A1-46-9D-B0-F3-2E-82-37-7B-52-3C-04-5B-47-61-6B-B5-ED-0E-32-F6-DF-4D-59-1D-18-02-09-DF-7B-79-19-D7-2B-46-C5-83-79-0F-26-A6-93-E6-35-E3-8A-36-36-44-01-20-0F-95-00-BE-29-26-4D-DC-3A-4C-D6-BB-6C-3B-FB-07-76-8B-E8-5D-63-7A-74-FA-62-5D-DB-19-D2-C7-59-20-29-61-68-4D-CA-27-20-61-27-E4-51-40-A5-B6-FB-5A-4A-EA-2B-9F-7D-D3-F2-25-E0-33-35-98-50-7D-5E-26-FE-05-E9-42-09-DE-7E-90-B0-0A-B6-2F-29-8C-DD-4B-5C-1E-D3-17-42-15-56-1C-DF-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\r\n----rbs2-senttime: 2023-09-20T22:49:19.2357401+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 898b5c8f-5135-4ca7-ae6c-0e5c90e512b3\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:19Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8E-3D-0B-C2-30-10-86-77-C1-FF-50-32-5B-68-52-AD-D0-B9-8B-50-17-E9-A4-38-84-E6-28-81-78-D1-26-15-A4-F4-BF-7B-B1-5F-8B-B7-24-3C-F7-BC-DC-DB-6F-37-11-0D-6B-E1-D5-81-F3-27-C5-F2-88-55-F4-8B-3A-17-0B-CE-85-88-39-DB-4D-92-22-AE-51-7A-6D-31-68-A5-AD-A5-59-96-16-0B-78-48-54-17-89-0D-D0-BA-1F-39-6D-9C-97-AD-0F-01-91-88-34-4E-8E-B1-C8-2A-BE-CF-45-9A-1F-C4-75-CE-93-07-F8-BB-BE-58-C7-BF-96-46-0F-ED-5B-9A-B3-36-46-3B-A8-2D-2A-17-62-69-96-84-61-A3-38-CC-B5-0C-95-0C-85-0B-E9-65-F5-79-42-70-D7-6A-6A-A2-04-6F-33-24-5C-52-C4-77-0A-D6-B3-01-5A-6C-46-3A-C3-FB-74-2B-3C-C3-17-C6-96-01-D8-4A-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\r\n----rbs2-senttime: 2023-09-20T22:49:19.2720151+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8E-3D-0B-C2-30-10-86-77-C1-FF-50-32-5B-68-52-AD-D0-B9-8B-50-17-E9-A4-38-84-E6-28-81-78-D1-26-15-A4-F4-BF-7B-B1-5F-8B-B7-24-3C-F7-BC-DC-DB-6F-37-11-0D-6B-E1-D5-81-F3-27-C5-F2-88-55-F4-8B-3A-17-0B-CE-85-88-39-DB-4D-92-22-AE-51-7A-6D-31-68-A5-AD-A5-59-96-16-0B-78-48-54-17-89-0D-D0-BA-1F-39-6D-9C-97-AD-0F-01-91-88-34-4E-8E-B1-C8-2A-BE-CF-45-9A-1F-C4-75-CE-93-07-F8-BB-BE-58-C7-BF-96-46-0F-ED-5B-9A-B3-36-46-3B-A8-2D-2A-17-62-69-96-84-61-A3-38-CC-B5-0C-95-0C-85-0B-E9-65-F5-79-42-70-D7-6A-6A-A2-04-6F-33-24-5C-52-C4-77-0A-D6-B3-01-5A-6C-46-3A-C3-FB-74-2B-3C-C3-17-C6-96-01-D8-4A-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\r\n----rbs2-senttime: 2023-09-20T22:49:19.2720151+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8E-3D-0B-C2-30-10-86-77-C1-FF-50-32-5B-68-52-AD-D0-B9-8B-50-17-E9-A4-38-84-E6-28-81-78-D1-26-15-A4-F4-BF-7B-B1-5F-8B-B7-24-3C-F7-BC-DC-DB-6F-37-11-0D-6B-E1-D5-81-F3-27-C5-F2-88-55-F4-8B-3A-17-0B-CE-85-88-39-DB-4D-92-22-AE-51-7A-6D-31-68-A5-AD-A5-59-96-16-0B-78-48-54-17-89-0D-D0-BA-1F-39-6D-9C-97-AD-0F-01-91-88-34-4E-8E-B1-C8-2A-BE-CF-45-9A-1F-C4-75-CE-93-07-F8-BB-BE-58-C7-BF-96-46-0F-ED-5B-9A-B3-36-46-3B-A8-2D-2A-17-62-69-96-84-61-A3-38-CC-B5-0C-95-0C-85-0B-E9-65-F5-79-42-70-D7-6A-6A-A2-04-6F-33-24-5C-52-C4-77-0A-D6-B3-01-5A-6C-46-3A-C3-FB-74-2B-3C-C3-17-C6-96-01-D8-4A-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\r\n----rbs2-senttime: 2023-09-20T22:49:19.2720151+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 33fbe28f-c6bf-41cd-8a8e-10fdeddf5749\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:28Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"690d10ce-6333-44f9-b8ce-32ce322583fc\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:28Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8E-4F-0B-C2-30-0C-C5-EF-82-DF-61-F4-6C-61-CD-FC-03-3D-EF-22-EC-66-4F-8A-87-62-43-19-D4-56-B7-EE-20-63-DF-DD-94-AE-82-B9-24-FC-DE-CB-4B-E6-ED-A6-A2-62-03-BE-27-1C-E3-D9-30-59-31-45-53-35-8D-1C-84-00-E0-C0-76-AB-C9-10-EF-BD-8E-7D-F0-C9-D6-85-87-76-3F-31-F8-16-9F-DA-9B-4B-EF-AD-43-D2-E7-2C-90-14-F5-60-31-A6-15-A8-A1-E1-F5-89-C3-51-89-BD-84-46-1E-E0-CA-B2-6F-29-41-8E-62-D3-89-56-47-AD-3E-2F-1C-FF-B2-CC-4A-09-DE-0A-24-DC-D1-4A-9C-0C-96-77-32-0C-DE-66-5A-E0-7D-BD-95-DA-F2-05-86-10-F9-7B-FC-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 690d10ce-6333-44f9-b8ce-32ce322583fc\r\n----rbs2-senttime: 2023-09-20T22:49:28.3228581+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 690d10ce-6333-44f9-b8ce-32ce322583fc\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8E-4F-0B-C2-30-0C-C5-EF-82-DF-61-F4-6C-61-CD-FC-03-3D-EF-22-EC-66-4F-8A-87-62-43-19-D4-56-B7-EE-20-63-DF-DD-94-AE-82-B9-24-FC-DE-CB-4B-E6-ED-A6-A2-62-03-BE-27-1C-E3-D9-30-59-31-45-53-35-8D-1C-84-00-E0-C0-76-AB-C9-10-EF-BD-8E-7D-F0-C9-D6-85-87-76-3F-31-F8-16-9F-DA-9B-4B-EF-AD-43-D2-E7-2C-90-14-F5-60-31-A6-15-A8-A1-E1-F5-89-C3-51-89-BD-84-46-1E-E0-CA-B2-6F-29-41-8E-62-D3-89-56-47-AD-3E-2F-1C-FF-B2-CC-4A-09-DE-0A-24-DC-D1-4A-9C-0C-96-77-32-0C-DE-66-5A-E0-7D-BD-95-DA-F2-05-86-10-F9-7B-FC-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 690d10ce-6333-44f9-b8ce-32ce322583fc\r\n----rbs2-senttime: 2023-09-20T22:49:28.3228581+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 690d10ce-6333-44f9-b8ce-32ce322583fc\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8E-4F-0B-C2-30-0C-C5-EF-82-DF-61-F4-6C-61-CD-FC-03-3D-EF-22-EC-66-4F-8A-87-62-43-19-D4-56-B7-EE-20-63-DF-DD-94-AE-82-B9-24-FC-DE-CB-4B-E6-ED-A6-A2-62-03-BE-27-1C-E3-D9-30-59-31-45-53-35-8D-1C-84-00-E0-C0-76-AB-C9-10-EF-BD-8E-7D-F0-C9-D6-85-87-76-3F-31-F8-16-9F-DA-9B-4B-EF-AD-43-D2-E7-2C-90-14-F5-60-31-A6-15-A8-A1-E1-F5-89-C3-51-89-BD-84-46-1E-E0-CA-B2-6F-29-41-8E-62-D3-89-56-47-AD-3E-2F-1C-FF-B2-CC-4A-09-DE-0A-24-DC-D1-4A-9C-0C-96-77-32-0C-DE-66-5A-E0-7D-BD-95-DA-F2-05-86-10-F9-7B-FC-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 690d10ce-6333-44f9-b8ce-32ce322583fc\r\n----rbs2-senttime: 2023-09-20T22:49:28.3228581+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 690d10ce-6333-44f9-b8ce-32ce322583fc\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:37Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"00a987ac-4121-430b-a0f6-0909ebf68f40\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:37Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8F-3D-0B-C2-30-10-86-77-C1-FF-50-32-5B-48-53-A9-E0-DC-45-D0-45-0A-82-E2-70-34-87-06-EA-55-93-54-91-D2-FF-EE-A5-1F-BA-78-04-12-9E-F7-B9-E4-D2-CE-67-11-97-B0-F8-68-D0-F9-8D-16-EB-48-14-7C-8A-1A-17-AB-24-C9-54-9C-88-C5-28-69-E6-86-C0-9B-9A-82-B6-AD-4B-A8-BE-61-4D-39-DE-80-F4-1E-E8-82-1C-B7-03-E7-C4-79-B0-3E-34-28-A9-D2-58-AE-62-95-15-C9-72-2D-25-AF-E3-D4-CF-1E-52-FF-FA-D7-5A-FD-B5-0C-79-B4-4F-A8-76-A6-AA-8C-C3-B2-26-ED-42-5B-9A-C9-50-62-10-BB-69-AC-17-82-BF-A2-CD-C1-43-F1-BE-63-50-7F-93-E9-91-32-3C-4D-90-71-61-1B-3C-18-D2-B9-B1-58-F6-BF-9D-C2-F3-78-7B-D8-BA-0F-CA-37-F7-3E-3C-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 00a987ac-4121-430b-a0f6-0909ebf68f40\r\n----rbs2-senttime: 2023-09-20T22:49:37.3842248+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 00a987ac-4121-430b-a0f6-0909ebf68f40\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8F-3D-0B-C2-30-10-86-77-C1-FF-50-32-5B-48-53-A9-E0-DC-45-D0-45-0A-82-E2-70-34-87-06-EA-55-93-54-91-D2-FF-EE-A5-1F-BA-78-04-12-9E-F7-B9-E4-D2-CE-67-11-97-B0-F8-68-D0-F9-8D-16-EB-48-14-7C-8A-1A-17-AB-24-C9-54-9C-88-C5-28-69-E6-86-C0-9B-9A-82-B6-AD-4B-A8-BE-61-4D-39-DE-80-F4-1E-E8-82-1C-B7-03-E7-C4-79-B0-3E-34-28-A9-D2-58-AE-62-95-15-C9-72-2D-25-AF-E3-D4-CF-1E-52-FF-FA-D7-5A-FD-B5-0C-79-B4-4F-A8-76-A6-AA-8C-C3-B2-26-ED-42-5B-9A-C9-50-62-10-BB-69-AC-17-82-BF-A2-CD-C1-43-F1-BE-63-50-7F-93-E9-91-32-3C-4D-90-71-61-1B-3C-18-D2-B9-B1-58-F6-BF-9D-C2-F3-78-7B-D8-BA-0F-CA-37-F7-3E-3C-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 00a987ac-4121-430b-a0f6-0909ebf68f40\r\n----rbs2-senttime: 2023-09-20T22:49:37.3842248+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 00a987ac-4121-430b-a0f6-0909ebf68f40\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8F-3D-0B-C2-30-10-86-77-C1-FF-50-32-5B-48-53-A9-E0-DC-45-D0-45-0A-82-E2-70-34-87-06-EA-55-93-54-91-D2-FF-EE-A5-1F-BA-78-04-12-9E-F7-B9-E4-D2-CE-67-11-97-B0-F8-68-D0-F9-8D-16-EB-48-14-7C-8A-1A-17-AB-24-C9-54-9C-88-C5-28-69-E6-86-C0-9B-9A-82-B6-AD-4B-A8-BE-61-4D-39-DE-80-F4-1E-E8-82-1C-B7-03-E7-C4-79-B0-3E-34-28-A9-D2-58-AE-62-95-15-C9-72-2D-25-AF-E3-D4-CF-1E-52-FF-FA-D7-5A-FD-B5-0C-79-B4-4F-A8-76-A6-AA-8C-C3-B2-26-ED-42-5B-9A-C9-50-62-10-BB-69-AC-17-82-BF-A2-CD-C1-43-F1-BE-63-50-7F-93-E9-91-32-3C-4D-90-71-61-1B-3C-18-D2-B9-B1-58-F6-BF-9D-C2-F3-78-7B-D8-BA-0F-CA-37-F7-3E-3C-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 00a987ac-4121-430b-a0f6-0909ebf68f40\r\n----rbs2-senttime: 2023-09-20T22:49:37.3842248+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 00a987ac-4121-430b-a0f6-0909ebf68f40\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:42Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"1a4ea9aa-b394-418f-97ce-d3352a6c4347\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:42Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8E-4D-0B-C2-30-0C-86-EF-82-FF-61-F4-6C-A1-AB-32-61-E7-5D-04-4F-5A-10-14-0F-61-0D-B3-B0-B5-DA-76-8A-8C-FD-77-33-B7-09-86-40-C2-F3-BE-F9-E8-96-8B-84-82-79-7C-B4-18-E2-4E-B3-3C-61-8A-BA-A4-0D-5C-A6-69-26-B9-64-AB-C9-A4-89-1B-0B-D1-38-3B-D8-F6-AE-84-FA-27-3A-5B-60-03-56-1F-8D-AD-6A-24-BD-1B-05-92-22-F8-0A-E3-30-22-85-5C-73-B1-E5-32-53-E9-26-17-82-F2-CC-46-5F-3F-2F-7A-21-C4-1B-FA-02-22-A8-F7-1D-C3-DF-2A-3D-51-82-97-19-12-3E-60-4D-6F-3D-F1-64-AC-2E-8C-C7-F2-FB-E3-6C-B8-4E-17-86-D2-7F-00-43-76-8D-75-F2-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 1a4ea9aa-b394-418f-97ce-d3352a6c4347\r\n----rbs2-senttime: 2023-09-20T22:49:42.4315971+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 1a4ea9aa-b394-418f-97ce-d3352a6c4347\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8E-4D-0B-C2-30-0C-86-EF-82-FF-61-F4-6C-A1-AB-32-61-E7-5D-04-4F-5A-10-14-0F-61-0D-B3-B0-B5-DA-76-8A-8C-FD-77-33-B7-09-86-40-C2-F3-BE-F9-E8-96-8B-84-82-79-7C-B4-18-E2-4E-B3-3C-61-8A-BA-A4-0D-5C-A6-69-26-B9-64-AB-C9-A4-89-1B-0B-D1-38-3B-D8-F6-AE-84-FA-27-3A-5B-60-03-56-1F-8D-AD-6A-24-BD-1B-05-92-22-F8-0A-E3-30-22-85-5C-73-B1-E5-32-53-E9-26-17-82-F2-CC-46-5F-3F-2F-7A-21-C4-1B-FA-02-22-A8-F7-1D-C3-DF-2A-3D-51-82-97-19-12-3E-60-4D-6F-3D-F1-64-AC-2E-8C-C7-F2-FB-E3-6C-B8-4E-17-86-D2-7F-00-43-76-8D-75-F2-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 1a4ea9aa-b394-418f-97ce-d3352a6c4347\r\n----rbs2-senttime: 2023-09-20T22:49:42.4315971+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 1a4ea9aa-b394-418f-97ce-d3352a6c4347\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8E-4D-0B-C2-30-0C-86-EF-82-FF-61-F4-6C-A1-AB-32-61-E7-5D-04-4F-5A-10-14-0F-61-0D-B3-B0-B5-DA-76-8A-8C-FD-77-33-B7-09-86-40-C2-F3-BE-F9-E8-96-8B-84-82-79-7C-B4-18-E2-4E-B3-3C-61-8A-BA-A4-0D-5C-A6-69-26-B9-64-AB-C9-A4-89-1B-0B-D1-38-3B-D8-F6-AE-84-FA-27-3A-5B-60-03-56-1F-8D-AD-6A-24-BD-1B-05-92-22-F8-0A-E3-30-22-85-5C-73-B1-E5-32-53-E9-26-17-82-F2-CC-46-5F-3F-2F-7A-21-C4-1B-FA-02-22-A8-F7-1D-C3-DF-2A-3D-51-82-97-19-12-3E-60-4D-6F-3D-F1-64-AC-2E-8C-C7-F2-FB-E3-6C-B8-4E-17-86-D2-7F-00-43-76-8D-75-F2-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 1a4ea9aa-b394-418f-97ce-d3352a6c4347\r\n----rbs2-senttime: 2023-09-20T22:49:42.4315971+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 1a4ea9aa-b394-418f-97ce-d3352a6c4347\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.CheckLastTagWas(ParserInternalState& state, UInt32 expectedTag)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"3685432d-f3c3-435c-b093-e63ba200a437\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8E-31-0B-C2-30-10-85-77-C1-FF-10-32-5B-48-53-6D-C1-B9-8B-83-4B-C9-A4-38-04-73-4A-A0-4D-34-49-05-29-FD-EF-5E-6C-5A-17-8F-83-0B-EF-7D-EF-72-C3-7A-45-B0-A8-83-67-0F-3E-1C-14-DD-13-2A-F0-45-7A-9F-71-CE-76-65-96-3B-BA-49-94-42-43-1B-19-B4-35-91-6B-A0-B3-01-16-D7-9A-1A-3A-69-54-23-CD-1D-D0-1F-26-1D-1D-1F-A4-0B-31-C1-19-2F-32-56-65-BC-14-F9-76-CF-18-F6-69-CE-23-07-E6-FB-FF-42-55-7F-29-6D-02-B8-97-6C-8F-BA-6D-B5-87-AB-35-CA-C7-58-51-B2-58-74-02-C7-E5-68-27-6F-A1-96-41-8A-F7-03-22-F8-BB-4B-25-15-C5-F3-2C-A2-2C-9C-EE-D2-16-42-2E-69-5D-1C-E3-07-41-D7-CF-97-2F-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 3685432d-f3c3-435c-b093-e63ba200a437\r\n----rbs2-senttime: 2023-09-20T22:49:43.4685000+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 3685432d-f3c3-435c-b093-e63ba200a437\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8E-31-0B-C2-30-10-85-77-C1-FF-10-32-5B-48-53-6D-C1-B9-8B-83-4B-C9-A4-38-04-73-4A-A0-4D-34-49-05-29-FD-EF-5E-6C-5A-17-8F-83-0B-EF-7D-EF-72-C3-7A-45-B0-A8-83-67-0F-3E-1C-14-DD-13-2A-F0-45-7A-9F-71-CE-76-65-96-3B-BA-49-94-42-43-1B-19-B4-35-91-6B-A0-B3-01-16-D7-9A-1A-3A-69-54-23-CD-1D-D0-1F-26-1D-1D-1F-A4-0B-31-C1-19-2F-32-56-65-BC-14-F9-76-CF-18-F6-69-CE-23-07-E6-FB-FF-42-55-7F-29-6D-02-B8-97-6C-8F-BA-6D-B5-87-AB-35-CA-C7-58-51-B2-58-74-02-C7-E5-68-27-6F-A1-96-41-8A-F7-03-22-F8-BB-4B-25-15-C5-F3-2C-A2-2C-9C-EE-D2-16-42-2E-69-5D-1C-E3-07-41-D7-CF-97-2F-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 3685432d-f3c3-435c-b093-e63ba200a437\r\n----rbs2-senttime: 2023-09-20T22:49:43.4685000+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 3685432d-f3c3-435c-b093-e63ba200a437\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8E-31-0B-C2-30-10-85-77-C1-FF-10-32-5B-48-53-6D-C1-B9-8B-83-4B-C9-A4-38-04-73-4A-A0-4D-34-49-05-29-FD-EF-5E-6C-5A-17-8F-83-0B-EF-7D-EF-72-C3-7A-45-B0-A8-83-67-0F-3E-1C-14-DD-13-2A-F0-45-7A-9F-71-CE-76-65-96-3B-BA-49-94-42-43-1B-19-B4-35-91-6B-A0-B3-01-16-D7-9A-1A-3A-69-54-23-CD-1D-D0-1F-26-1D-1D-1F-A4-0B-31-C1-19-2F-32-56-65-BC-14-F9-76-CF-18-F6-69-CE-23-07-E6-FB-FF-42-55-7F-29-6D-02-B8-97-6C-8F-BA-6D-B5-87-AB-35-CA-C7-58-51-B2-58-74-02-C7-E5-68-27-6F-A1-96-41-8A-F7-03-22-F8-BB-4B-25-15-C5-F3-2C-A2-2C-9C-EE-D2-16-42-2E-69-5D-1C-E3-07-41-D7-CF-97-2F-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 3685432d-f3c3-435c-b093-e63ba200a437\r\n----rbs2-senttime: 2023-09-20T22:49:43.4685000+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 3685432d-f3c3-435c-b093-e63ba200a437\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"b1c8c450-0d43-4c98-9fa8-68dbb6708f83\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:43Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8E-4F-0B-83-30-0C-C5-EF-83-7D-07-E9-79-05-8D-FB-03-9E-BD-0C-76-DA-7A-DA-D8-A1-AC-41-04-6D-9D-4D-0F-43-FC-EE-8B-AB-0A-CB-25-E1-F7-5E-5E-32-6C-37-09-97-E8-F1-1D-D0-D3-D9-88-22-11-8A-A7-24-78-09-59-06-20-A1-17-BB-D9-65-58-A8-AD-A6-DA-D9-C9-77-C5-D6-11-AE-AA-B3-25-B6-DA-9A-5B-6D-AB-06-D9-30-44-81-25-D2-7D-85-34-ED-40-0A-B9-4C-4F-12-8E-2A-DB-17-90-17-07-B8-8B-E8-1B-97-A0-C6-BD-7E-37-4A-4D-5A-7D-3A-F4-7F-59-66-A6-0C-1F-0B-64-7C-E1-15-0A-66-7D-27-42-67-AB-48-17-F8-9C-6F-4D-6D-FC-02-7B-CE-35-F4-FE-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: b1c8c450-0d43-4c98-9fa8-68dbb6708f83\r\n----rbs2-senttime: 2023-09-20T22:49:43.5224949+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: b1c8c450-0d43-4c98-9fa8-68dbb6708f83\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8E-4F-0B-83-30-0C-C5-EF-83-7D-07-E9-79-05-8D-FB-03-9E-BD-0C-76-DA-7A-DA-D8-A1-AC-41-04-6D-9D-4D-0F-43-FC-EE-8B-AB-0A-CB-25-E1-F7-5E-5E-32-6C-37-09-97-E8-F1-1D-D0-D3-D9-88-22-11-8A-A7-24-78-09-59-06-20-A1-17-BB-D9-65-58-A8-AD-A6-DA-D9-C9-77-C5-D6-11-AE-AA-B3-25-B6-DA-9A-5B-6D-AB-06-D9-30-44-81-25-D2-7D-85-34-ED-40-0A-B9-4C-4F-12-8E-2A-DB-17-90-17-07-B8-8B-E8-1B-97-A0-C6-BD-7E-37-4A-4D-5A-7D-3A-F4-7F-59-66-A6-0C-1F-0B-64-7C-E1-15-0A-66-7D-27-42-67-AB-48-17-F8-9C-6F-4D-6D-FC-02-7B-CE-35-F4-FE-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: b1c8c450-0d43-4c98-9fa8-68dbb6708f83\r\n----rbs2-senttime: 2023-09-20T22:49:43.5224949+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: b1c8c450-0d43-4c98-9fa8-68dbb6708f83\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-55-8E-4F-0B-83-30-0C-C5-EF-83-7D-07-E9-79-05-8D-FB-03-9E-BD-0C-76-DA-7A-DA-D8-A1-AC-41-04-6D-9D-4D-0F-43-FC-EE-8B-AB-0A-CB-25-E1-F7-5E-5E-32-6C-37-09-97-E8-F1-1D-D0-D3-D9-88-22-11-8A-A7-24-78-09-59-06-20-A1-17-BB-D9-65-58-A8-AD-A6-DA-D9-C9-77-C5-D6-11-AE-AA-B3-25-B6-DA-9A-5B-6D-AB-06-D9-30-44-81-25-D2-7D-85-34-ED-40-0A-B9-4C-4F-12-8E-2A-DB-17-90-17-07-B8-8B-E8-1B-97-A0-C6-BD-7E-37-4A-4D-5A-7D-3A-F4-7F-59-66-A6-0C-1F-0B-64-7C-E1-15-0A-66-7D-27-42-67-AB-48-17-F8-9C-6F-4D-6D-FC-02-7B-CE-35-F4-FE-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: b1c8c450-0d43-4c98-9fa8-68dbb6708f83\r\n----rbs2-senttime: 2023-09-20T22:49:43.5224949+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: b1c8c450-0d43-4c98-9fa8-68dbb6708f83\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.) (Protocol message contained a tag with an invalid wire type.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message contained a tag with an invalid wire type.\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeGroupFrom(ParseContext& ctx)\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"95520175-c84e-44fe-a436-160588889afc\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"95520175-c84e-44fe-a436-160588889afc\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"95520175-c84e-44fe-a436-160588889afc\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-5D-8E-B1-0E-82-30-10-86-67-4D-7C-07-D2-D9-9A-02-2D-14-66-16-13-37-71-D1-38-14-7A-21-44-BC-2A-D4-18-43-7C-77-8B-A0-89-76-69-F2-FD-F7-FD-77-FD-62-EE-B9-47-5A-B8-DE-A0-B3-6B-4D-52-8F-70-C1-55-24-0B-4D-8B-A4-88-29-87-52-D0-24-10-8C-EA-48-94-32-8E-A4-04-1D-93-E5-64-6A-A7-D5-A8-6C-6D-70-70-77-78-42-73-C7-6F-6C-30-83-B3-42-BD-AD-B1-6A-C0-4D-F4-63-E0-22-AB-DA-0A-EC-20-05-2C-08-29-4B-A8-2F-73-5F-A6-9C-A5-BE-58-85-5C-46-71-18-30-B6-27-A3-F1-FC-54-36-A6-7C-AF-CB-94-55-F9-E3-02-DD-4F-AB-9E-A8-83-87-C5-7C-36-FB-BF-E8-3D-B4-71-05-F6-A6-E1-17-1A-AC-46-FA-81-C7-69-F3-F0-3D-5F-FD-75-C7-28-2B-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 95520175-c84e-44fe-a436-160588889afc\r\n----rbs2-senttime: 2023-09-20T22:49:52.5589622+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 95520175-c84e-44fe-a436-160588889afc\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-5D-8E-B1-0E-82-30-10-86-67-4D-7C-07-D2-D9-9A-02-2D-14-66-16-13-37-71-D1-38-14-7A-21-44-BC-2A-D4-18-43-7C-77-8B-A0-89-76-69-F2-FD-F7-FD-77-FD-62-EE-B9-47-5A-B8-DE-A0-B3-6B-4D-52-8F-70-C1-55-24-0B-4D-8B-A4-88-29-87-52-D0-24-10-8C-EA-48-94-32-8E-A4-04-1D-93-E5-64-6A-A7-D5-A8-6C-6D-70-70-77-78-42-73-C7-6F-6C-30-83-B3-42-BD-AD-B1-6A-C0-4D-F4-63-E0-22-AB-DA-0A-EC-20-05-2C-08-29-4B-A8-2F-73-5F-A6-9C-A5-BE-58-85-5C-46-71-18-30-B6-27-A3-F1-FC-54-36-A6-7C-AF-CB-94-55-F9-E3-02-DD-4F-AB-9E-A8-83-87-C5-7C-36-FB-BF-E8-3D-B4-71-05-F6-A6-E1-17-1A-AC-46-FA-81-C7-69-F3-F0-3D-5F-FD-75-C7-28-2B-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 95520175-c84e-44fe-a436-160588889afc\r\n----rbs2-senttime: 2023-09-20T22:49:52.5589622+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 95520175-c84e-44fe-a436-160588889afc\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-5D-8E-B1-0E-82-30-10-86-67-4D-7C-07-D2-D9-9A-02-2D-14-66-16-13-37-71-D1-38-14-7A-21-44-BC-2A-D4-18-43-7C-77-8B-A0-89-76-69-F2-FD-F7-FD-77-FD-62-EE-B9-47-5A-B8-DE-A0-B3-6B-4D-52-8F-70-C1-55-24-0B-4D-8B-A4-88-29-87-52-D0-24-10-8C-EA-48-94-32-8E-A4-04-1D-93-E5-64-6A-A7-D5-A8-6C-6D-70-70-77-78-42-73-C7-6F-6C-30-83-B3-42-BD-AD-B1-6A-C0-4D-F4-63-E0-22-AB-DA-0A-EC-20-05-2C-08-29-4B-A8-2F-73-5F-A6-9C-A5-BE-58-85-5C-46-71-18-30-B6-27-A3-F1-FC-54-36-A6-7C-AF-CB-94-55-F9-E3-02-DD-4F-AB-9E-A8-83-87-C5-7C-36-FB-BF-E8-3D-B4-71-05-F6-A6-E1-17-1A-AC-46-FA-81-C7-69-F3-F0-3D-5F-FD-75-C7-28-2B-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 95520175-c84e-44fe-a436-160588889afc\r\n----rbs2-senttime: 2023-09-20T22:49:52.5589622+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 95520175-c84e-44fe-a436-160588889afc\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)  ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.    at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)    at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)    at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)    at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)    at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)    at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)    at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"7adfaf01-5091-45d8-9eac-ca36430ee8c1\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:49:52Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8F-CD-0A-C2-30-10-84-EF-82-EF-50-72-B6-90-A6-D2-82-E7-5E-3C-78-91-8A-A0-78-08-CD-A2-C1-BA-D5-24-B5-48-E9-BB-BB-E9-9F-17-97-40-C2-CC-37-CB-A4-5D-2E-02-1A-66-E0-55-83-75-5B-C5-36-01-CB-E9-15-D4-36-14-51-94-88-30-AA-D9-6A-A4-14-19-1A-A5-D3-15-7A-EE-80-77-AC-1A-9C-ED-0A-33-78-48-54-7B-89-57-20-A0-1D-74-72-AC-93-C6-F9-88-E0-22-0E-79-1A-8A-24-8F-D6-1B-CE-E9-9C-A6-3C-71-80-7D-81-99-4A-FF-52-1A-1D-98-B7-2C-77-BA-2C-B5-85-A2-42-65-7D-2C-4E-B8-1F-36-80-DD-54-AB-01-E9-6E-60-32-E9-64-FE-79-82-47-7F-CD-D4-A8-92-78-9E-44-92-73-53-C3-51-A3-CA-B4-81-A2-FF-EF-64-5E-C6-ED-FE-EA-BE-60-D0-D2-71-3F-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 7adfaf01-5091-45d8-9eac-ca36430ee8c1\r\n----rbs2-senttime: 2023-09-20T22:49:52.5874346+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 7adfaf01-5091-45d8-9eac-ca36430ee8c1\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8F-CD-0A-C2-30-10-84-EF-82-EF-50-72-B6-90-A6-D2-82-E7-5E-3C-78-91-8A-A0-78-08-CD-A2-C1-BA-D5-24-B5-48-E9-BB-BB-E9-9F-17-97-40-C2-CC-37-CB-A4-5D-2E-02-1A-66-E0-55-83-75-5B-C5-36-01-CB-E9-15-D4-36-14-51-94-88-30-AA-D9-6A-A4-14-19-1A-A5-D3-15-7A-EE-80-77-AC-1A-9C-ED-0A-33-78-48-54-7B-89-57-20-A0-1D-74-72-AC-93-C6-F9-88-E0-22-0E-79-1A-8A-24-8F-D6-1B-CE-E9-9C-A6-3C-71-80-7D-81-99-4A-FF-52-1A-1D-98-B7-2C-77-BA-2C-B5-85-A2-42-65-7D-2C-4E-B8-1F-36-80-DD-54-AB-01-E9-6E-60-32-E9-64-FE-79-82-47-7F-CD-D4-A8-92-78-9E-44-92-73-53-C3-51-A3-CA-B4-81-A2-FF-EF-64-5E-C6-ED-FE-EA-BE-60-D0-D2-71-3F-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 7adfaf01-5091-45d8-9eac-ca36430ee8c1\r\n----rbs2-senttime: 2023-09-20T22:49:52.5874346+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 7adfaf01-5091-45d8-9eac-ca36430ee8c1\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-6D-8F-CD-0A-C2-30-10-84-EF-82-EF-50-72-B6-90-A6-D2-82-E7-5E-3C-78-91-8A-A0-78-08-CD-A2-C1-BA-D5-24-B5-48-E9-BB-BB-E9-9F-17-97-40-C2-CC-37-CB-A4-5D-2E-02-1A-66-E0-55-83-75-5B-C5-36-01-CB-E9-15-D4-36-14-51-94-88-30-AA-D9-6A-A4-14-19-1A-A5-D3-15-7A-EE-80-77-AC-1A-9C-ED-0A-33-78-48-54-7B-89-57-20-A0-1D-74-72-AC-93-C6-F9-88-E0-22-0E-79-1A-8A-24-8F-D6-1B-CE-E9-9C-A6-3C-71-80-7D-81-99-4A-FF-52-1A-1D-98-B7-2C-77-BA-2C-B5-85-A2-42-65-7D-2C-4E-B8-1F-36-80-DD-54-AB-01-E9-6E-60-32-E9-64-FE-79-82-47-7F-CD-D4-A8-92-78-9E-44-92-73-53-C3-51-A3-CA-B4-81-A2-FF-EF-64-5E-C6-ED-FE-EA-BE-60-D0-D2-71-3F-01-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 7adfaf01-5091-45d8-9eac-ca36430ee8c1\r\n----rbs2-senttime: 2023-09-20T22:49:52.5874346+00:00\r\n----rbs2-msg-type: System.String, mscorlib\r\n----rbs2-corr-id: 7adfaf01-5091-45d8-9eac-ca36430ee8c1\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.) (Protocol message end-group tag did not match expected tag.)\r\n ---> Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Google.Protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.\r\n   at Google.Protobuf.ParsingPrimitivesMessages.ReadGroup(ParseContext& ctx, Int32 fieldNumber, UnknownFieldSet set)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(ParseContext& ctx)\r\n   at Google.Protobuf.UnknownFieldSet.MergeFieldFrom(UnknownFieldSet unknownFields, ParseContext& ctx)\r\n   at Abs.CommonCore.Contracts.Proto.Disco.Data.DiscoDataRequest.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input)\r\n   at Google.Protobuf.CodedInputStream.ReadRawMessage(IMessage message)\r\n   at Google.Protobuf.MessageExtensions.MergeFrom(IMessage message, Byte[] data, Boolean discardUnknownFields, ExtensionRegistry registry)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Rebus.Serialization.ProtobufMessageSerializer`1.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Compression.UnzippingSerializerDecorator.Deserialize(TransportMessage transportMessage)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:50:04Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:50:05Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:50:07Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:50:10Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:50:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:50:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:50:19Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:52:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:52:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:52:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:52:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:52:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:52:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:52:27Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:54:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:54:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:54:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:54:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:54:25Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:54:30Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:54:30Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:56:07Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:56:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:56:10Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:56:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:56:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:56:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:56:22Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:58:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:58:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:58:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:58:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:58:24Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:58:29Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:58:29Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:00:07Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:00:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:00:10Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:00:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:00:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:00:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:00:22Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:02:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:02:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:02:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:02:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:02:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:02:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:02:26Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:04:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:04:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:04:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:04:24Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:04:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:04:33Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:04:33Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:06:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:06:09Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:06:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:06:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:06:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:06:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:06:23Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:08:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:08:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:08:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:08:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:08:24Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:08:29Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:08:29Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:10:06Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:10:07Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:10:09Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:10:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:10:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:10:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:10:21Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:12:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:12:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:12:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:12:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:12:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:12:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:12:28Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:14:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:14:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:14:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:14:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:14:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:14:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:14:26Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:16:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:16:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:16:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:16:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:16:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:16:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:16:28Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:18:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:18:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:18:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:18:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:18:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:18:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:18:28Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:20:05Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:20:06Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:20:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:20:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:20:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:20:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:20:20Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:27Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 49","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 49","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 49","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 49","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 49","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"295a8115-502e-487d-ae3a-37be132fe944\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist)  ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"295a8115-502e-487d-ae3a-37be132fe944\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"295a8115-502e-487d-ae3a-37be132fe944\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 23:22:53Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-E2-2F-49-2D-2E-89-2F-2D-D6-35-32-30-31-30-D2-35-04-00-27-6C-69-48-11-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 295a8115-502e-487d-ae3a-37be132fe944\r\n----rbs2-senttime: 2023-09-20T23:22:53.6206182+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoGetSchedulesRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: 295a8115-502e-487d-ae3a-37be132fe944\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.get-schedules.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-E2-2F-49-2D-2E-89-2F-2D-D6-35-32-30-31-30-D2-35-04-00-27-6C-69-48-11-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 295a8115-502e-487d-ae3a-37be132fe944\r\n----rbs2-senttime: 2023-09-20T23:22:53.6206182+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoGetSchedulesRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: 295a8115-502e-487d-ae3a-37be132fe944\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.get-schedules.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-E2-2F-49-2D-2E-89-2F-2D-D6-35-32-30-31-30-D2-35-04-00-27-6C-69-48-11-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 295a8115-502e-487d-ae3a-37be132fe944\r\n----rbs2-senttime: 2023-09-20T23:22:53.6206182+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoGetSchedulesRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: 295a8115-502e-487d-ae3a-37be132fe944\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 64\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.get-schedules.request.q"},"Scopes":[]}
+++ Siemens-Adapter +++ 
{"Timestamp":"2023-09-20 23:13:03Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"249e6837-4716-4074-8029-8190c8e61e7a\"","Exception":"Abs.CommonCore.Adapters.Siemens.EcoMainWebApiClient.Api.ApiException: Error Request Url: https://ecomain-suite-vessel.siemens-energy.com/EcoMAIN_WebAPI///api/tag-management/tags//historical-data/tag-alias Message: An error occurred while sending the request.    at Abs.CommonCore.Adapters.Siemens.EcoMainWebApiClient.Api.BaseApi.GetResponseResult[T](RestResponse response, RestRequest request) in C:\\app\\service\\EcoMainWebApiClient\\Api\\BaseApi.cs:line 54    at Abs.CommonCore.Adapters.Siemens.EcoMainWebApiClient.Api.TagApi.Abs.CommonCore.Adapters.Siemens.EcoMainWebApiClient.Api.ITagApi.ApiTagManagementTagsHistoricalDataTagAliasPostAsync(DateTime startDate, DateTime endDate, Int32 invervalMilliseconds, String[] tagAliases) in C:\\app\\service\\EcoMainWebApiClient\\Api\\TagApi.cs:line 52    at Abs.CommonCore.Adapters.Siemens.EcoMainWebApiClient.Client.ApiClient.GetTagAliasesHistoricalDataAsync(DateTime from, DateTime to, Int32 intervalMilliseconds, String[] tagAliases) in C:\\app\\service\\EcoMainWebApiClient\\Client\\ApiClient.cs:line 66    at Abs.CommonCore.Adapters.Siemens.DiscoMessagingService.MessageProcessor.CreateDataResponseAsync[T](DiscoDataRequest request, Func`2 getRequestedTypes, Action`2 setDataType) in C:\\app\\service\\DiscoMessagingService\\MessageProcessor.cs:line 275    at Abs.CommonCore.Adapters.Siemens.DiscoMessagingService.MessageProcessor.FetchAndSetDataResponseCaseAsync(DiscoDataResponse response, DiscoDataRequest request) in C:\\app\\service\\DiscoMessagingService\\MessageProcessor.cs:line 252    at Abs.CommonCore.Adapters.Siemens.DiscoMessagingService.MessageProcessor.ProcessMessageAsync(DiscoDataRequest request) in C:\\app\\service\\DiscoMessagingService\\MessageProcessor.cs:line 40    at Abs.CommonCore.Adapters.Siemens.DiscoMessagingService.DiscoDataRequestHandler.Handle(Message`1 message) in C:\\app\\service\\DiscoMessagingService\\DiscoDataRequestHandler.cs:line 50    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"249e6837-4716-4074-8029-8190c8e61e7a\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"249e6837-4716-4074-8029-8190c8e61e7a\""},"Scopes":[]}
