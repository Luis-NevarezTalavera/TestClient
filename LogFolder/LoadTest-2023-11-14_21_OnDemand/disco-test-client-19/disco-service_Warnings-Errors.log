{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:936113 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-22056-drdl to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.940402400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:938581 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-22056-drdr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.940402400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:958932 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21122-drll to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.974170300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:962676 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-22056-dsdl to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.974170300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:967921 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:967953 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-22056-drdl from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:983371 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-22056-dsdr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:985196 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:985270 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-22056-drdr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:986305 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:36:15.993372200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:986332 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-22056-dsdl from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.993372200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:987149 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:36:15.993372200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:987163 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21122-drll from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.993372200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:996940 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:36:15.997563900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:996964 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-22056-dsdr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.997563900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:232632 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-22056-drdl to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.248372400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:235278 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-22056-drdr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.250684100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:241220 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21122-drlr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.250684100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:243604 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21122-dsll to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:255501 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:255575 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-22056-drdl from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:255916 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:255996 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-22056-drdr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:263205 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:36:31.266930Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:263234 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21122-drlr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.266930Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:263368 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:36:31.266930Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:263389 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21122-dsll from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.266930Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:300892 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-22056-drdl to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.337029200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:335322 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:36:31.337029200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:335638 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-22056-drdl from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.337029200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:475184 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-22056-dsdl to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.476706600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:474968 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21122-dslr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.476706600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:481170 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:36:46.481066200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:481170 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:36:46.481066200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:481193 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21122-dslr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.481066200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:481193 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-22056-dsdl from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.481066200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:488262 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-22056-dsdr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.489033600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:490696 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:36:46.490560500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:490716 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-22056-dsdr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.490560500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:513039 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-22056-drdr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.513739900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:516327 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:36:46.516156Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:516358 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-22056-drdr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.516156Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:526680 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21162-drwl to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.527076Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:531404 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:36:46.531498700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:531446 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21162-drwl from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.531498700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:759546 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-22056-dsdl to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.763424900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:760083 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21162-drwr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.763424900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:761953 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21122-drll to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.763424900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:768988 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:37:01.770951900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:769036 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21162-drwr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.770951900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:773452 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:37:01.793968Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:773517 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21122-drll from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.793968Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:773648 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:37:01.793968Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:773656 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-22056-dsdl from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.793968Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:811726 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21122-drlr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.818555200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:814056 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-22056-dsdr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.818555200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:821209 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:37:01.824797600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:821317 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21122-drlr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.824855700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:823677 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:37:01.824855700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:823747 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-22056-dsdr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.824855700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:088604 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21162-dswl to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.091323900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:096608 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:37:17.097343300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:096685 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21162-dswl from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.097343300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:129192 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21122-dsll to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.141710600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:134495 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21162-dswr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.141710600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:139025 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21122-drll to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.141710600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:150226 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:37:17.174994200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:150265 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21122-dsll from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.174994200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:163719 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:37:17.181764100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:163791 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21162-dswr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.181764100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:163906 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:37:17.181764100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:163913 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21122-drll from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.181764100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:182975 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21122-dslr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.187548700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:191044 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:37:17.192086500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:191073 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21122-dslr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.192086500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:392198 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21162-drwl to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.395360500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:392775 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21122-drlr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.395360500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:393568 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21122-dsll to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.395360500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:402023 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:402124 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21122-drlr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:405111 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:405173 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21162-drwl from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:405413 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:405477 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21122-dsll from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:434498 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-22056-drdl to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.437285600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:439170 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:37:32.441506400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:439218 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-22056-drdl from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.441506400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:457571 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21162-drwr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.459727600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:462079 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:37:32.470922900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:462103 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21162-drwr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.470922900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:815053 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21122-dslr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:47.817849200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:821972 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:37:47.828699500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:822078 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21122-dslr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:47.828699500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:825220 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-22056-drdr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:47.828699500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:835724 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:37:47.836654400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:835746 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-22056-drdr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:47.836654400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:872208 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-22056-dsdl to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:47.877663100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:877372 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21162-dswl to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:47.877663100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:880988 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:37:47.883970100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:881055 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-22056-dsdl from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:47.883970100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:893635 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:37:47.894141700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:893741 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21162-dswl from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:47.894141700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:48:012616 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21162-drwl to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:48.018321200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:48:041600 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:37:48.045218300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:48:041721 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21162-drwl from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:48.045218300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:02:973997 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21162-drwr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:02.976504500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:02:979916 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:38:02.980346400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:02:979956 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21162-drwr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:02.980346400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:018969 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-22056-dsdr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:03.019889100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:024070 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:38:03.024291600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:024098 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-22056-dsdr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:03.024291600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:145899 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21162-dswr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:03.148271700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:146216 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21162-dswl to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:03.148271700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:153724 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:38:03.155165Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:153747 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21162-dswr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:03.155165Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:199768 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:38:03.201911Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:199785 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21162-dswl from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:03.201911Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:252805 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21122-drll to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:03.254685100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:258154 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:38:03.258341100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:258180 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21122-drll from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:03.258341100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:132918 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21122-drlr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.139109700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:137141 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21162-dswr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.139109700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:142888 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:38:18.151556300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:142915 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21122-drlr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.151556300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:150255 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:38:18.151556300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:150358 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21162-dswr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.151556300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:270302 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21122-dslr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.278120900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:272583 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21122-dsll to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.278120900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:283133 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:38:18.290949800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:283186 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21122-dslr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.290949800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:283276 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:38:18.290949800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:283293 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21122-dsll from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.290949800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:407842 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21162-drwl to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.413232700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:424551 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:38:18.435749200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:424606 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21162-drwl from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.435749200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:388151 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21162-drwr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.389529400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:393615 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:38:33.393339900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:393641 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21162-drwr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.393339900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:427345 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-22056-drdl to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.429396300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:434916 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:38:33.435113400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:434944 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-22056-drdl from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.435113400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:484499 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-22056-drdr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.485304800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:488556 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:38:33.488543900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:488611 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-22056-drdr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.488543900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:500151 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21162-dswl to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.501777500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:504791 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:38:33.504978600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:504811 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21162-dswl from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.504978600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:643690 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-22056-dsdl to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.646645300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:663051 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:38:33.669392Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:663216 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-22056-dsdl from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.669392Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:536035 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21162-dswr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.542202800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:539912 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-22056-dsdr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.542202800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:550039 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:38:48.557839500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:550140 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21162-dswr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.557839500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:560131 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:38:48.569566800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:560262 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-22056-dsdr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.569566800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:681582 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21122-drll to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.683464800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:687812 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:38:48.689803100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:687875 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21122-drll from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.689803100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:706790 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-22056-drdl to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.709905400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:713593 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:38:48.716551700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:713673 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-22056-drdl from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.716551700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:898514 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21122-drlr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.904480Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:909172 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:38:48.911190Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:909199 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21122-drlr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.911190Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:787658 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-22056-drdr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:03.789559200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:792855 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:39:03.792988700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:792884 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-22056-drdr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:03.792988700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:826655 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-22056-dsdl to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:03.828607500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:830493 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21122-dsll to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:03.832115400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:833707 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:39:03.834630400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:833788 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-22056-dsdl from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:03.834630400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:841918 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:39:03.841897Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:841943 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21122-dsll from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:03.841897Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:870491 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21122-dslr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:03.873455800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:873886 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:39:03.874441300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:873910 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21122-dslr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:03.874441300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:04:078389 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-22056-dsdr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:04.084936400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:04:090271 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:39:04.090871Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:04:090332 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-22056-dsdr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:04.090871Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:068862 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21162-drwl to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.091598300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:071057 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21122-drll to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.110886900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:073013 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21122-drlr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.122177900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:117103 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21162-drwr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.122177900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131465 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131526 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21122-drll from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131696 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131714 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21162-drwl from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131845 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131865 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21122-drlr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:132159 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:132269 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21162-drwr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:219591 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-22056-drdl to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.221236Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:225031 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:39:19.226283800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:225055 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-22056-drdl from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.226283800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:466640 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21162-dswl to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.468481400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:472621 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:39:34.472774900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:472648 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21162-dswl from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.472774900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:573246 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21122-dsll to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.575399300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:583990 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:39:34.593297600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:584189 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21122-dsll from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.593297600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:591382 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-22056-drdr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.593297600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:600204 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:39:34.613018400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:600287 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-22056-drdr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.613018400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:657932 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21162-dswr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.659879400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:664217 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21122-dslr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.666081900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:666896 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:39:34.666081900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:666965 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21162-dswr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.666081900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:671527 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:39:34.672943300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:671610 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21122-dslr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.672943300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:345177 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21162-drwl to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.350729Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:345338 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-22056-dsdl to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.350729Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:346257 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-22056-dsdr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.355336900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:364942 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:365018 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-22056-dsdr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:364611 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21162-dswl to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:366650 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:366672 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-22056-dsdl from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:370812 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:371836 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21162-drwl from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:374118 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:374144 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21162-dswl from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:374759 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21162-drwr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:385171 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:39:50.387785300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:385242 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21162-drwr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.387785300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:566304 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21122-drlr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.568557600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:566608 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21122-dslr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.568557600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:567912 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21122-drll to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.568557600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:580980 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:581014 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21122-dslr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:581133 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:581187 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21122-drlr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:586198 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21162-dswr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:586762 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21122-dsll to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:598841 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:598937 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21122-drll from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:599292 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:599331 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21122-dsll from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:599781 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:599911 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21162-dswr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:804248 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21162-drwl to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.805685500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:809683 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:40:20.810393400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:810023 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21162-drwl from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.810393400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:842781 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-22056-drdl to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.844254200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:847206 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:40:20.846894800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:847293 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-22056-drdl from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.847406400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:907715 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21162-dswl to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.910467Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:908731 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21162-drwr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.910980200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:908950 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-22056-drdr to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.910980200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:915390 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:40:20.915517Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:915412 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21162-dswl from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.915517Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:915442 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:40:20.915517Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:915454 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21162-drwr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.915517Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:919311 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:40:20.919283900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:919332 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-22056-drdr from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.919283900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:671578 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21162-dswr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.674998400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:671600 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-22056-dsdl to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.690414400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:673043 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21122-drll to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.690931100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:673816 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-22056-dsdr to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.706575600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:675507 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21122-drlr to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.706575600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735113 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735169 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-22056-dsdl from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735375 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735417 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21122-drll from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735562 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735583 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21122-drlr from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735889 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735955 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-22056-dsdr from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:750922 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:750967 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21162-dswr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:936113 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-22056-drdl to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.940402400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:938581 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-22056-drdr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.940402400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:958932 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21122-drll to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.974170300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:962676 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-22056-dsdl to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.974170300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:967921 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:967953 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-22056-drdl from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:983371 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-22056-dsdr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:985196 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:985270 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-22056-drdr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.989363800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:986305 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:36:15.993372200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:986332 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-22056-dsdl from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.993372200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:987149 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:36:15.993372200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:987163 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21122-drll from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.993372200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:996940 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:36:15.997563900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:15:996964 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-22056-dsdr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:15.997563900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:232632 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-22056-drdl to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.248372400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:235278 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-22056-drdr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.250684100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:241220 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21122-drlr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.250684100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:243604 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21122-dsll to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:255501 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:255575 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-22056-drdl from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:255916 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:255996 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-22056-drdr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.253708500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:263205 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:36:31.266930Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:263234 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21122-drlr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.266930Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:263368 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:36:31.266930Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:263389 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21122-dsll from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.266930Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:300892 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-22056-drdl to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:31.337029200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:335322 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:36:31.337029200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:31:335638 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-22056-drdl from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:31.337029200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:475184 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-22056-dsdl to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.476706600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:474968 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21122-dslr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.476706600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:481170 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:36:46.481066200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:481170 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:36:46.481066200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:481193 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21122-dslr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.481066200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:481193 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-22056-dsdl from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.481066200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:488262 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-22056-dsdr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.489033600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:490696 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:36:46.490560500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:490716 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-22056-dsdr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.490560500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:513039 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-22056-drdr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.513739900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:516327 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:36:46.516156Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:516358 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-22056-drdr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.516156Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:526680 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21162-drwl to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160","stream":"stdout","timestamp":"2023-11-14T21:36:46.527076Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:531404 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:36:46.531498700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:36:46:531446 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21162-drwl from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:36:46.531498700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:759546 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-22056-dsdl to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.763424900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:760083 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21162-drwr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.763424900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:761953 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21122-drll to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.763424900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:768988 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:37:01.770951900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:769036 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21162-drwr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.770951900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:773452 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:37:01.793968Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:773517 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21122-drll from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.793968Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:773648 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:37:01.793968Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:773656 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-22056-dsdl from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.793968Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:811726 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21122-drlr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.818555200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:814056 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-22056-dsdr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:01.818555200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:821209 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:37:01.824797600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:821317 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21122-drlr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.824855700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:823677 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:37:01.824855700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:01:823747 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-22056-dsdr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:01.824855700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:088604 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21162-dswl to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.091323900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:096608 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:37:17.097343300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:096685 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21162-dswl from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.097343300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:129192 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21122-dsll to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.141710600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:134495 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-1_sa-21162-dswr to client disco-test-client-1 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-1.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.141710600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:139025 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21122-drll to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.141710600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:150226 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:37:17.174994200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:150265 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21122-dsll from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.174994200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:163719 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-1_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:37:17.181764100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:163791 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-1_sa-21162-dswr from router could not be delivered to client disco-test-client-1. Queue 'cc.disco.data.response.disco-test-client-1.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.181764100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:163906 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:37:17.181764100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:163913 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21122-drll from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.181764100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:182975 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21122-dslr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:17.187548700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:191044 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:37:17.192086500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:17:191073 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21122-dslr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:17.192086500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:392198 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21162-drwl to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.395360500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:392775 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21122-drlr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.395360500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:393568 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21122-dsll to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.395360500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:402023 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:402124 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21122-drlr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:405111 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:405173 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21162-drwl from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:405413 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:405477 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21122-dsll from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.406418100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:434498 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-22056-drdl to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.437285600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:439170 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:37:32.441506400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:439218 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-22056-drdl from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.441506400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:457571 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21162-drwr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:32.459727600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:462079 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:37:32.470922900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:32:462103 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21162-drwr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:32.470922900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:815053 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21122-dslr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:47.817849200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:821972 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:37:47.828699500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:822078 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21122-dslr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:47.828699500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:825220 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-22056-drdr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:47.828699500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:835724 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:37:47.836654400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:835746 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-22056-drdr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:47.836654400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:872208 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-22056-dsdl to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:47.877663100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:877372 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21162-dswl to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:47.877663100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:880988 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:37:47.883970100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:881055 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-22056-dsdl from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:47.883970100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:893635 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:37:47.894141700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:47:893741 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21162-dswl from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:47.894141700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:48:012616 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21162-drwl to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:37:48.018321200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:48:041600 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:37:48.045218300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:37:48:041721 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21162-drwl from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:37:48.045218300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:02:973997 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21162-drwr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:02.976504500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:02:979916 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:38:02.980346400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:02:979956 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21162-drwr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:02.980346400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:018969 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-22056-dsdr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:03.019889100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:024070 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:38:03.024291600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:024098 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-22056-dsdr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:03.024291600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:145899 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-2_sa-21162-dswr to client disco-test-client-2 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-2.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:03.148271700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:146216 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21162-dswl to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:03.148271700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:153724 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-2_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:38:03.155165Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:153747 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-2_sa-21162-dswr from router could not be delivered to client disco-test-client-2. Queue 'cc.disco.data.response.disco-test-client-2.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:03.155165Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:199768 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:38:03.201911Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:199785 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21162-dswl from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:03.201911Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:252805 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21122-drll to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:03.254685100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:258154 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:38:03.258341100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:03:258180 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21122-drll from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:03.258341100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:132918 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21122-drlr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.139109700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:137141 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-3_sa-21162-dswr to client disco-test-client-3 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-3.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.139109700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:142888 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:38:18.151556300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:142915 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21122-drlr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.151556300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:150255 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-3_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:38:18.151556300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:150358 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-3_sa-21162-dswr from router could not be delivered to client disco-test-client-3. Queue 'cc.disco.data.response.disco-test-client-3.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.151556300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:270302 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21122-dslr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.278120900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:272583 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21122-dsll to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.278120900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:283133 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:38:18.290949800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:283186 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21122-dslr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.290949800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:283276 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:38:18.290949800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:283293 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21122-dsll from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.290949800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:407842 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21162-drwl to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:18.413232700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:424551 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:38:18.435749200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:18:424606 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21162-drwl from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:18.435749200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:388151 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21162-drwr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.389529400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:393615 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:38:33.393339900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:393641 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21162-drwr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.393339900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:427345 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-22056-drdl to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.429396300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:434916 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:38:33.435113400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:434944 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-22056-drdl from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.435113400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:484499 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-22056-drdr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.485304800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:488556 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:38:33.488543900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:488611 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-22056-drdr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.488543900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:500151 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21162-dswl to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.501777500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:504791 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:38:33.504978600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:504811 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21162-dswl from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.504978600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:643690 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-22056-dsdl to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:33.646645300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:663051 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:38:33.669392Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:33:663216 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-22056-dsdl from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:33.669392Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:536035 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-4_sa-21162-dswr to client disco-test-client-4 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-4.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.542202800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:539912 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-22056-dsdr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.542202800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:550039 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-4_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:38:48.557839500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:550140 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-4_sa-21162-dswr from router could not be delivered to client disco-test-client-4. Queue 'cc.disco.data.response.disco-test-client-4.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.557839500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:560131 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:38:48.569566800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:560262 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-22056-dsdr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.569566800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:681582 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21122-drll to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.683464800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:687812 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:38:48.689803100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:687875 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21122-drll from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.689803100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:706790 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-22056-drdl to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.709905400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:713593 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:38:48.716551700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:713673 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-22056-drdl from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.716551700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:898514 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21122-drlr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:38:48.904480Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:909172 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:38:48.911190Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:38:48:909199 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21122-drlr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:38:48.911190Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:787658 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-22056-drdr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:03.789559200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:792855 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:39:03.792988700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:792884 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-22056-drdr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:03.792988700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:826655 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-22056-dsdl to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:03.828607500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:830493 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21122-dsll to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:03.832115400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:833707 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:39:03.834630400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:833788 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-22056-dsdl from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:03.834630400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:841918 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:39:03.841897Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:841943 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21122-dsll from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:03.841897Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:870491 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21122-dslr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:03.873455800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:873886 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:39:03.874441300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:03:873910 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21122-dslr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:03.874441300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:04:078389 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-22056-dsdr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:04.084936400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:04:090271 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:39:04.090871Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:04:090332 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-22056-dsdr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:04.090871Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:068862 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21162-drwl to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.091598300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:071057 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21122-drll to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.110886900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:073013 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21122-drlr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.122177900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:117103 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21162-drwr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.122177900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131465 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131526 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21122-drll from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131696 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131714 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21162-drwl from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131845 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:131865 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21122-drlr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:132159 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:132269 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21162-drwr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.154441900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:219591 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-22056-drdl to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:19.221236Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:225031 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:39:19.226283800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:19:225055 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-22056-drdl from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:19.226283800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:466640 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21162-dswl to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.468481400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:472621 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:39:34.472774900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:472648 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21162-dswl from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.472774900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:573246 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21122-dsll to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.575399300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:583990 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:39:34.593297600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:584189 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21122-dsll from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.593297600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:591382 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-22056-drdr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.593297600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:600204 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:39:34.613018400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:600287 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-22056-drdr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.613018400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:657932 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-5_sa-21162-dswr to client disco-test-client-5 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-5.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.659879400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:664217 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21122-dslr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:34.666081900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:666896 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-5_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:39:34.666081900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:666965 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-5_sa-21162-dswr from router could not be delivered to client disco-test-client-5. Queue 'cc.disco.data.response.disco-test-client-5.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.666081900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:671527 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:39:34.672943300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:34:671610 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21122-dslr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:34.672943300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:345177 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21162-drwl to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.350729Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:345338 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-22056-dsdl to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.350729Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:346257 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-22056-dsdr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.355336900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:364942 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:365018 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-22056-dsdr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:364611 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21162-dswl to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:366650 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:366672 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-22056-dsdl from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.363315900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:370812 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:371836 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21162-drwl from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:374118 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:374144 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21162-dswl from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:374759 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21162-drwr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:39:50.376017300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:385171 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:39:50.387785300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:39:50:385242 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21162-drwr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:39:50.387785300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:566304 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21122-drlr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.568557600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:566608 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21122-dslr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.568557600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:567912 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21122-drll to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.568557600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:580980 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:581014 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21122-dslr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:581133 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:581187 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21122-drlr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:586198 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-6_sa-21162-dswr to client disco-test-client-6 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-6.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:586762 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21122-dsll to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:05.589277800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:598841 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:598937 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21122-drll from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:599292 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:599331 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21122-dsll from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:599781 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-6_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:05:599911 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-6_sa-21162-dswr from router could not be delivered to client disco-test-client-6. Queue 'cc.disco.data.response.disco-test-client-6.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:05.599873800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:804248 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21162-drwl to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.805685500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:809683 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:40:20.810393400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:810023 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21162-drwl from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.810393400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:842781 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-22056-drdl to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.844254200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:847206 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:40:20.846894800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:847293 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-22056-drdl from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.847406400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:907715 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21162-dswl to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.910467Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:908731 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21162-drwr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.910980200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:908950 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-22056-drdr to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:20.910980200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:915390 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:40:20.915517Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:915412 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21162-dswl from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.915517Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:915442 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:40:20.915517Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:915454 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21162-drwr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.915517Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:919311 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:40:20.919283900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:20:919332 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-22056-drdr from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:20.919283900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:671578 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-7_sa-21162-dswr to client disco-test-client-7 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-7.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.674998400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:671600 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-22056-dsdl to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.690414400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:673043 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21122-drll to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.690931100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:673816 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-22056-dsdr to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.706575600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:675507 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21122-drlr to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:41.706575600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735113 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735169 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-22056-dsdl from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735375 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735417 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21122-drll from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735562 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735583 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21122-drlr from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735889 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:735955 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-22056-dsdr from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:750922 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-7_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:41:750967 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-7_sa-21162-dswr from router could not be delivered to client disco-test-client-7. Queue 'cc.disco.data.response.disco-test-client-7.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:41.773127600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:819794 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21122-dslr to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:57.831164Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:859866 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21162-drwr to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:57.915387400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:859771 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21162-drwl to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:57.915387400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:861663 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21122-dsll to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:57.915387400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:913329 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:40:57.915387400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:913355 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21122-dslr from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:57.915387400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:915774 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-22056-drdl to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:40:57.915387400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:955305 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:40:57.997114400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:955339 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21122-dsll from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:57.997114400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:955494 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:40:57.997114400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:955513 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21162-drwr from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:57.997114400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:955770 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:40:57.997114400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:955833 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21162-drwl from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:57.997114400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:955991 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:40:57.997114400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:40:57:956010 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-22056-drdl from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:40:57.997114400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:447331 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-22056-dsdr to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:23.450406800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:447194 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21162-dswl to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:23.450406800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:447124 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-8_sa-21162-dswr to client disco-test-client-8 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-8.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:23.450406800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:454245 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:41:23.455389500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:454390 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:41:23.455389500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:454438 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-22056-dsdr from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:23.455389500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:454476 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21162-dswr from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:23.455389500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:455119 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-8_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:41:23.455389500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:455278 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-8_sa-21162-dswl from router could not be delivered to client disco-test-client-8. Queue 'cc.disco.data.response.disco-test-client-8.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:23.455389500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:466022 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-22056-drdr to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:23.468230600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:466065 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-22056-dsdl to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:23.470473600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:469567 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:41:23.470473600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:469638 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-22056-drdr from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:23.470473600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:470269 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:41:23.470473600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:23:470292 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-22056-dsdl from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:23.470473600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:667173 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-21122-drlr to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:38.667884700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:670850 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-21122-drll to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:38.671906500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:673445 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:41:38.673248Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:673467 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-21122-drlr from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:38.673248Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:678165 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:41:38.679479Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:678187 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-21122-drll from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:38.679479Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:682825 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-21122-dslr to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:38.684962100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:684751 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-21122-dsll to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:38.685365Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:687030 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:41:38.687264900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:687116 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-21122-dslr from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:38.687264900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:689987 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:41:38.689688600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:690021 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-21122-dsll from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:38.690204300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:725996 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-21162-drwl to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:38.728618600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:729967 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:41:38.729950600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:38:730057 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-21162-drwl from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:38.730481500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:452706 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-21162-dswl to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:55.454475500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:457223 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:41:55.457423600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:457287 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-21162-dswl from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:55.457423600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:508097 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-22056-drdr to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:55.513051100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:511320 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-21162-drwr to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:55.513051100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:512608 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-9_sa-21162-dswr to client disco-test-client-9 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-9.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:55.513051100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:512785 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-22056-drdl to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:41:55.513051100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:520347 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:41:55.521357Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:520390 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-22056-drdr from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:55.521357Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:522500 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:41:55.521357Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:522525 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-21162-drwr from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:55.521357Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:522669 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-9_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:41:55.521357Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:522687 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-9_sa-21162-dswr from router could not be delivered to client disco-test-client-9. Queue 'cc.disco.data.response.disco-test-client-9.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:55.521357Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:522757 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:41:55.521357Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:41:55:522816 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-22056-drdl from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:41:55.521357Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:733337 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-22056-dsdl to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:10.735007Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:732970 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-22056-dsdr to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:10.735007Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:733446 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-21122-drll to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:10.735007Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:739783 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:42:10.740127400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:739826 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-22056-dsdr from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:10.740127400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:739912 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:42:10.740272100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:739975 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-22056-dsdl from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:10.740272100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:743409 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:42:10.744031Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:743432 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-21122-drll from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:10.744031Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:800661 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-21122-drlr to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:10.802109100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:801067 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-21122-dsll to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:10.802109100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:806422 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:42:10.806692900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:806490 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-21122-drlr from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:10.806692900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:811542 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:42:10.811910300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:10:811612 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-21122-dsll from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:10.811910300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:468778 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-21162-dswr to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:28.470246300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:469138 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-21122-dslr to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:28.470760500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:474557 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:42:28.474507500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:474575 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:42:28.474507500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:474583 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-21122-dslr from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:28.475020600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:474582 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-21162-dswr from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:28.475020600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:486297 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-21162-drwl to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:28.489054700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:486329 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-21162-drwr to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:28.489054700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:491476 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:42:28.491780700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:491503 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-21162-drwl from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:28.491780700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:491484 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:42:28.491780700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:491638 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-21162-drwr from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:28.491780700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:525450 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-10_sa-21162-dswl to client disco-test-client-10 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-10.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:28.527171300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:531331 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-10_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:42:28.531076800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:28:531433 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-10_sa-21162-dswl from router could not be delivered to client disco-test-client-10. Queue 'cc.disco.data.response.disco-test-client-10.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:28.531595Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:45:770428 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-22056-drdr to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:45.773535200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:45:770034 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-22056-dsdr to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:45.773535200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:45:771078 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-21122-drll to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:45.774048100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:45:771506 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-22056-dsdl to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:45.774048100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:45:771914 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-22056-drdl to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:42:45.774048100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:783281 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:42:46.783719200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:783318 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-22056-drdl from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:46.783719200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:783442 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:42:46.783719200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:783462 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-22056-dsdl from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:46.783719200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:786173 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:42:46.786884100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:786197 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-22056-drdr from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:46.786884100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:786404 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:42:46.786884100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:786422 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-22056-dsdr from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:46.786884100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:786502 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:42:46.786884100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:42:46:786509 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-21122-drll from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:42:46.786884100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:895781 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-21162-drwl to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:01.896925800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:902721 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:43:01.903015100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:902764 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-21162-drwl from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:01.903015100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:955091 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-21122-dsll to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:01.969932Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:958194 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-21122-drlr to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:01.969932Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:959856 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-21122-dslr to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:01.969932Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:975726 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:43:01.980575800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:975914 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-21122-dsll from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:01.980575800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:979622 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:43:01.980575800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:979696 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-21122-dslr from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:01.980575800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:979829 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:43:01.980575800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:979886 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-21122-drlr from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:01.980575800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:990550 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-21162-drwr to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:01.994182600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:997089 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:43:01.997865900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:01:997312 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-21162-drwr from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:01.997865900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:763613 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-22056-dsdl to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:19.765252900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:764196 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-22056-drdr to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:19.765252900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:764503 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-21162-dswl to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:19.768305700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:765130 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-11_sa-21162-dswr to client disco-test-client-11 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-11.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:19.768305700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:768767 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-22056-drdl to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:19.771229800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:776488 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:43:19.776202100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:776555 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-22056-drdr from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:19.776202100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:777134 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:43:19.778044600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:777270 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-22056-dsdl from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:19.778044600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:780204 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:43:19.780832200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:780225 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-21162-dswl from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:19.780832200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:780344 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-11_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:43:19.780832200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:780363 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-11_sa-21162-dswr from router could not be delivered to client disco-test-client-11. Queue 'cc.disco.data.response.disco-test-client-11.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:19.780832200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:780502 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:43:19.780832200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:19:780520 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-22056-drdl from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:19.780832200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:174883 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-21122-dsll to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:35.175776300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:180392 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:43:35.180164300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:180462 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-21122-dsll from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:35.180164300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:191902 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-21122-dslr to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:35.198356300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:194520 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-21122-drll to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:35.198356300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:194841 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-22056-dsdr to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:35.198356300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:195862 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-21122-drlr to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:35.198356300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:204964 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:43:35.206763200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:205042 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-21122-dslr from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:35.207276Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:211741 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:43:35.212444Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:211765 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-21122-drll from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:35.212444Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:211872 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:43:35.212444Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:211892 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-22056-dsdr from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:35.212444Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:212009 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:43:35.212444Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:35:212023 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-21122-drlr from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:35.212444Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:50:456223 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-21162-drwl to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:50.457603700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:50:462839 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:43:50.463134100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:50:462972 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-21162-drwl from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:50.463134100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:531957 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-22056-drdl to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:51.533481200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:532624 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-21162-dswr to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:51.533481200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:533435 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-21162-dswl to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:51.536948400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:538937 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:43:51.539788600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:539123 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-22056-drdl from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:51.539788600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:542781 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:43:51.543877500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:542914 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-21162-dswl from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:51.543877500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:543123 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:43:51.543877500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:543371 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-21162-dswr from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:51.543877500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:547891 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-12_sa-21162-drwr to client disco-test-client-12 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-12.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:43:51.548092200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:550385 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-12_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:43:51.550432800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:43:51:550407 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-12_sa-21162-drwr from router could not be delivered to client disco-test-client-12. Queue 'cc.disco.data.response.disco-test-client-12.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:43:51.550432800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:05:662255 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-22056-drdr to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:05.663912900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:05:667468 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:44:05.668128500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:05:667490 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-22056-drdr from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:05.668128500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:687712 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-22056-dsdl to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:06.690167900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:688168 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-21122-drll to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:06.690167900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:693382 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:44:06.693390500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:693406 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-22056-dsdl from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:06.693390500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:698910 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:44:06.699176800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:698933 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-21122-drll from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:06.699176800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:702783 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-22056-dsdr to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:06.703111600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:705798 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:44:06.705494200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:705837 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-22056-dsdr from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:06.706026100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:740393 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-21122-drlr to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:06.742216600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:745423 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:44:06.745590600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:06:745458 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-21122-drlr from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:06.745590600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:20:830867 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-21122-dsll to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:20.831649Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:20:835923 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:44:20.836070900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:20:835952 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-21122-dsll from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:20.836070900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:840792 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-21162-drwr to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:21.842768100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:840671 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-21122-dslr to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:21.842768100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:841045 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-21162-dswl to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:21.842768100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:841715 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-21162-drwl to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:21.842768100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:851539 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:44:21.851997Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:851571 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-21162-drwr from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:21.851997Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:851543 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:44:21.851997Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:851688 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-21162-dswl from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:21.851997Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:851785 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:44:21.851997Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:851823 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-21122-dslr from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:21.851997Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:854320 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:44:21.854795600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:21:854340 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-21162-drwl from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:21.854795600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:36:065116 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-13_sa-21162-dswr to client disco-test-client-13 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-13.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:36.067067500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:36:070283 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-13_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:44:36.070512600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:36:070406 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-13_sa-21162-dswr from router could not be delivered to client disco-test-client-13. Queue 'cc.disco.data.response.disco-test-client-13.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:36.070512600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:602896 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-22056-dsdr to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:38.606814300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:602862 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-22056-drdl to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:38.606814300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:602828 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-22056-drdr to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:38.607329900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:603766 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-22056-dsdl to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:38.611484300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:610800 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:44:38.611484300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:610983 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-22056-dsdl from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:38.611484300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:611144 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:44:38.611484300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:611195 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-22056-drdl from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:38.611484300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:621860 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:44:38.622045Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:621882 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-22056-drdr from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:38.622045Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:622279 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-22056-dsdr","stream":"stdout","timestamp":"2023-11-14T21:44:38.622045Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:38:622322 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-22056-dsdr from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:38.622560700Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:52:654511 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-21122-drll to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:52.655549900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:52:658743 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-21122-drll","stream":"stdout","timestamp":"2023-11-14T21:44:52.658540400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:52:658768 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-21122-drll from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:52.658540400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:804190 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-21122-drlr to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:53.805690800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:806684 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-21122-dslr to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:53.810602600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:808963 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-21122-dsll to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:53.810602600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:813957 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-21122-drlr","stream":"stdout","timestamp":"2023-11-14T21:44:53.814177600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:813981 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-21122-drlr from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:53.814177600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:817202 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-21122-dslr","stream":"stdout","timestamp":"2023-11-14T21:44:53.817648100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:817329 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-21122-dslr from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:53.817648100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:820383 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-21122-dsll","stream":"stdout","timestamp":"2023-11-14T21:44:53.820611400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:820408 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-21122-dsll from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:53.820611400Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:866232 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-21162-drwl to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:44:53.867972500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:869506 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-21162-drwl","stream":"stdout","timestamp":"2023-11-14T21:44:53.869450500Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:44:53:869573 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-21162-drwl from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:44:53.869963Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:07:985424 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-21162-drwr to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:45:07.990670800Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:07:996749 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-21162-drwr","stream":"stdout","timestamp":"2023-11-14T21:45:07.999131200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:07:996844 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-21162-drwr from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:45:07.999131200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:08:989509 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-21162-dswl to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:45:08.991052Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:08:995204 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-21162-dswl","stream":"stdout","timestamp":"2023-11-14T21:45:08.996655Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:08:995302 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-21162-dswl from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:45:08.996655Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:09:014986 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-14_sa-21162-dswr to client disco-test-client-14 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-14.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:45:09.019252100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:09:017806 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-15_sa-22056-drdl to client disco-test-client-15 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-15.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-15.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:45:09.019252100Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:09:017817 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-15_sa-22056-drdr to client disco-test-client-15 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-15.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-15.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:45:09.028923300Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:09:029660 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-14_sa-21162-dswr","stream":"stdout","timestamp":"2023-11-14T21:45:09.031535600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:09:029757 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-14_sa-21162-dswr from router could not be delivered to client disco-test-client-14. Queue 'cc.disco.data.response.disco-test-client-14.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:45:09.031535600Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:09:038096 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-15_sa-22056-drdr","stream":"stdout","timestamp":"2023-11-14T21:45:09.047265Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:09:038123 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-15_sa-22056-drdr from router could not be delivered to client disco-test-client-15. Queue 'cc.disco.data.response.disco-test-client-15.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:45:09.047265Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:09:038333 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-15_sa-22056-drdl","stream":"stdout","timestamp":"2023-11-14T21:45:09.047265Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:09:038401 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-15_sa-22056-drdl from router could not be delivered to client disco-test-client-15. Queue 'cc.disco.data.response.disco-test-client-15.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:45:09.047265Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:23:459778 fail: Abs.CommonCore.Disco.Console.Program[7] Error while sending request disco-test-client-15_sa-22056-dsdl to client disco-test-client-15 Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.disco-test-client-15.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.disco-test-client-15.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass7_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 160 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(DiscoDataRequest message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 170","stream":"stdout","timestamp":"2023-11-14T21:45:23.486352200Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:23:496235 info: Abs.CommonCore.Disco.Console.Program[0] Error Logger DLQ Handler received message with id: disco-test-client-15_sa-22056-dsdl","stream":"stdout","timestamp":"2023-11-14T21:45:23.518828900Z"}
{"container_id":"4ea4c6b06663","container_name":"disco-service","container_type":"application","image":"ghcr.io/abs-wavesight/cc-disco:windows-2019","level":"none","message":"2023-11-14 21:45:23:496337 fail: Abs.CommonCore.Disco.Console.Program[1] DiscoDataResponse message with disco-test-client-15_sa-22056-dsdl from router could not be delivered to client disco-test-client-15. Queue 'cc.disco.data.response.disco-test-client-15.q' does not exist","stream":"stdout","timestamp":"2023-11-14T21:45:23.518828900Z"}
