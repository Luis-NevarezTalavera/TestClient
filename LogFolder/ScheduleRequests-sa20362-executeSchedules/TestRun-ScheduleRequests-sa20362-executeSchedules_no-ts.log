ScheduleRequests-sa20362-executeSchedules 
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Initializing RabbitMQ connection manager for transport with input queue "cc.disco.data.response.test-client.q"
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Starting periodic task "CleanupTrackedErrors" with interval 00:00:10
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Bus "onDemandDataResponseBus" started
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Successfully created bus instance RebusBus onDemandDataResponseBus (isDefaultBus: false)
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Bus "onDemandDataResponseBus" setting number of workers to 1
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Initializing RabbitMQ connection manager for transport with input queue "cc.disco.schedule.response.test-client.q"
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Successfully initialized consumer for "cc.disco.data.response.test-client.q"
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Starting periodic task "CleanupTrackedErrors" with interval 00:00:10
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Bus "scheduleResponseBus" started
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Successfully created bus instance RebusBus scheduleResponseBus (isDefaultBus: false)
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Bus "scheduleResponseBus" setting number of workers to 1
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Initializing RabbitMQ connection manager for transport with input queue "cc.disco.get-schedules.response.test-client.q"
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Successfully initialized consumer for "cc.disco.schedule.response.test-client.q"
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Starting periodic task "CleanupTrackedErrors" with interval 00:00:10
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Bus "getScheduleResponseBus" started
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Successfully created bus instance RebusBus getScheduleResponseBus (isDefaultBus: false)
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Bus "getScheduleResponseBus" setting number of workers to 1
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Application started. Press Ctrl+C to shut down.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Hosting environment: Production
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Content root path: C:\ABS\TestClient
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Successfully initialized consumer for "cc.disco.get-schedules.response.test-client.q"
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Handling file TestClientRequests\ScheduleRequests\ScheduleDraftRangeDataRequestConfig.json
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Defined as create schedule request
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: { "requestId": "test_us-20359-sdr", "scheduleId": "test_us-20359-sdr", "destination": "Local", "scheduleRange": { "cronExpression": "0 * * ? ?", "start": "23:59:59.999", "end": "00:00:00.000", "intervalMilliseconds": "360000" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Sending binary: 0A-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-64-72-12-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-64-72-20-01-D2-3E-2B-0A-09-30-20-2A-20-2A-20-3F-20-3F-12-0C-32-33-3A-35-39-3A-35-39-2E-39-39-39-1A-0C-30-30-3A-30-30-3A-30-30-2E-30-30-30-20-C0-FC-15-8A-7D-09-0A-07-00-01-02-03-04-05-06
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Initializing RabbitMQ connection manager for one-way transport
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Bus "createScheduleBus" started
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 1-th time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] File TestClientRequests\ScheduleRequests\ScheduleDraftRangeDataRequestConfig.json handling has been finished.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Handling file TestClientRequests\ScheduleRequests\ScheduleDraftSingleDataRequestConfig.json
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Defined as create schedule request
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: { "requestId": "test_us-20359-sds", "scheduleId": "test_us-20359-sds", "destination": "Local", "scheduleSingle": { "cronExpression": "0/2 * * ? ?" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Sending binary: 0A-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-64-73-12-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-64-73-20-01-CA-3E-0D-0A-0B-30-2F-32-20-2A-20-2A-20-3F-20-3F-8A-7D-09-0A-07-00-01-02-03-04-05-06
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 1-th time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "test_us-20359-sdr", "scheduleId": "test-client - test_us-20359-sdr", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss" }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "test_us-20359-sds", "scheduleId": "test-client - test_us-20359-sds", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss" }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 2-st time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] File TestClientRequests\ScheduleRequests\ScheduleDraftSingleDataRequestConfig.json handling has been finished.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Handling file TestClientRequests\ScheduleRequests\ScheduleDraftSingleNegativeDataRequestConfig.json
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Defined as create schedule request
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: { "requestId": "test_us-20359-sdsneg", "scheduleId": "test_us-20359-sdsneg", "destination": "Local", "scheduleSingle": { "cronExpression": "" }, "draftDataTypes": { "dataType": [ ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Sending binary: 0A-14-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-64-73-6E-65-67-12-14-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-64-73-6E-65-67-20-01-CA-3E-00-8A-7D-00
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 1-th time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] File TestClientRequests\ScheduleRequests\ScheduleDraftSingleNegativeDataRequestConfig.json handling has been finished.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Handling file TestClientRequests\ScheduleRequests\ScheduleLocationRangeDataRequestConfig.json
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Defined as create schedule request
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: { "requestId": "test_us-20359-slr", "scheduleId": "test_us-20359-slr", "destination": "Local", "scheduleRange": { "cronExpression": "0/2 * * ? ?", "start": "06:00:00.000", "end": "02:55:00.000", "intervalMilliseconds": "120000" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Sending binary: 0A-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-6C-72-12-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-6C-72-20-01-D2-3E-2D-0A-0B-30-2F-32-20-2A-20-2A-20-3F-20-3F-12-0C-30-36-3A-30-30-3A-30-30-2E-30-30-30-1A-0C-30-32-3A-35-35-3A-30-30-2E-30-30-30-20-C0-A9-07-92-7D-05-0A-03-00-01-02
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 1-th time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "test_us-20359-sdsneg", "scheduleId": "", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "error": { "code": "BAD_REQUEST", "message": "CRON expression is invalid. Wrong number of parts in the `` cron expression, you can only use 5 or 6 (with seconds) part-based expressions." } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] File TestClientRequests\ScheduleRequests\ScheduleLocationRangeDataRequestConfig.json handling has been finished.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Handling file TestClientRequests\ScheduleRequests\ScheduleLocationRangeNegativeDataRequestConfig.json
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Defined as create schedule request
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: { "requestId": "test_us-20359-slrneg", "scheduleId": "test_us-20359-slrneg", "destination": "Local", "scheduleRange": { "cronExpression": "0/2 * * ? ?", "start": "99:00:00.000", "end": "02:55:00.000", "intervalMilliseconds": "120000" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Sending binary: 0A-14-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-6C-72-6E-65-67-12-14-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-6C-72-6E-65-67-20-01-D2-3E-2D-0A-0B-30-2F-32-20-2A-20-2A-20-3F-20-3F-12-0C-39-39-3A-30-30-3A-30-30-2E-30-30-30-1A-0C-30-32-3A-35-35-3A-30-30-2E-30-30-30-20-C0-A9-07-92-7D-05-0A-03-00-01-02
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 1-th time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "test_us-20359-slrneg", "scheduleId": "", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "error": { "code": "BAD_REQUEST", "message": "ScheduleRange start time. The TimeSpan string '99:00:00.000' could not be parsed because at least one of the numeric components is out of range or contains too many digits.\r\nStart field in ScheduleRange must be greater than End field" } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] File TestClientRequests\ScheduleRequests\ScheduleLocationRangeNegativeDataRequestConfig.json handling has been finished.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Handling file TestClientRequests\ScheduleRequests\ScheduleLocationSingleDataRequestConfig.json
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Defined as create schedule request
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: { "requestId": "test_us-20359-sls", "scheduleId": "test_us-20359-sls", "destination": "Local", "scheduleSingle": { "cronExpression": "* * * ? ?" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Sending binary: 0A-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-6C-73-12-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-6C-73-20-01-CA-3E-0B-0A-09-2A-20-2A-20-2A-20-3F-20-3F-92-7D-05-0A-03-00-01-02
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 1-th time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] File TestClientRequests\ScheduleRequests\ScheduleLocationSingleDataRequestConfig.json handling has been finished.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Handling file TestClientRequests\ScheduleRequests\ScheduleWeatherRangeDataRequestConfig.json
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Defined as create schedule request
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: { "requestId": "test_us-20359-swr", "scheduleId": "test_us-20359-swr", "destination": "Local", "scheduleRange": { "cronExpression": "0/4 * * ? ?", "start": "06:00:00.000", "end": "02:55:00.000", "intervalMilliseconds": "240000" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Sending binary: 0A-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-77-72-12-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-77-72-20-01-D2-3E-2D-0A-0B-30-2F-34-20-2A-20-2A-20-3F-20-3F-12-0C-30-36-3A-30-30-3A-30-30-2E-30-30-30-1A-0C-30-32-3A-35-35-3A-30-30-2E-30-30-30-20-80-D3-0E-A2-7D-0D-0A-0B-00-01-02-04-05-06-07-08-09-0A-0B
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 1-th time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] File TestClientRequests\ScheduleRequests\ScheduleWeatherRangeDataRequestConfig.json handling has been finished.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Handling file TestClientRequests\ScheduleRequests\ScheduleWeatherSingleDataRequestConfig.json
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Defined as create schedule request
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: { "requestId": "test_us-20359-sws", "scheduleId": "test_us-20359-sws", "destination": "Local", "scheduleSingle": { "cronExpression": "0/2 * * ? ?" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Sending binary: 0A-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-77-73-12-11-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-77-73-20-01-CA-3E-0D-0A-0B-30-2F-32-20-2A-20-2A-20-3F-20-3F-A2-7D-0D-0A-0B-00-01-02-04-05-06-07-08-09-0A-0B
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 1-th time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] File TestClientRequests\ScheduleRequests\ScheduleWeatherSingleDataRequestConfig.json handling has been finished.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Handling file TestClientRequests\ScheduleRequests\ScheduleWeatherSingleNegativeDataRequestConfig.json
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Defined as create schedule request
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Created DiscoCreateScheduleRequest object with payload: { "requestId": "test_us-20359-swsneg", "scheduleId": "test_us-20359-swsneg", "destination": "Local", "scheduleSingle": { "cronExpression": "0/2 * * ? ?" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Sending binary: 0A-14-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-77-73-6E-65-67-12-14-74-65-73-74-5F-75-73-2D-32-30-33-35-39-2D-73-77-73-6E-65-67-20-01-CA-3E-0D-0A-0B-30-2F-32-20-2A-20-2A-20-3F-20-3F-A2-7D-0D-0A-0B-00-01-02-04-05-06-07-08-09-0A-0B
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] Binary is sent 1-th time
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] File TestClientRequests\ScheduleRequests\ScheduleWeatherSingleNegativeDataRequestConfig.json handling has been finished.
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "test_us-20359-slr", "scheduleId": "test-client - test_us-20359-slr", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss" }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "test_us-20359-swr", "scheduleId": "test-client - test_us-20359-swr", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss" }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "test_us-20359-sls", "scheduleId": "test-client - test_us-20359-sls", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss" }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoScheduleResponse Received message: { "requestId": "test_us-20359-sws", "scheduleId": "test-client - test_us-20359-sws", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss" }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sds", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-slr", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandRange": { "start": "YYYY-MM-DDThh:mm:ss.sssssssss", "end": "YYYY-MM-DDThh:mm:ss.sssssssss", "intervalMilliseconds": "120000" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sws", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sls", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sls", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sds", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sls", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sws", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-slr", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandRange": { "start": "YYYY-MM-DDThh:mm:ss.sssssssss", "end": "YYYY-MM-DDThh:mm:ss.sssssssss", "intervalMilliseconds": "120000" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-swr", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandRange": { "start": "YYYY-MM-DDThh:mm:ss.sssssssss", "end": "YYYY-MM-DDThh:mm:ss.sssssssss", "intervalMilliseconds": "240000" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sls", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sds", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-slr", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandRange": { "start": "YYYY-MM-DDThh:mm:ss.sssssssss", "end": "YYYY-MM-DDThh:mm:ss.sssssssss", "intervalMilliseconds": "120000" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sls", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sws", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sls", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sds", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-slr", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandRange": { "start": "YYYY-MM-DDThh:mm:ss.sssssssss", "end": "YYYY-MM-DDThh:mm:ss.sssssssss", "intervalMilliseconds": "120000" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sls", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-swr", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandRange": { "start": "YYYY-MM-DDThh:mm:ss.sssssssss", "end": "YYYY-MM-DDThh:mm:ss.sssssssss", "intervalMilliseconds": "240000" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sws", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "weatherDataTypes": { "dataType": [ "Unknown", "WetTemperature", "DryTemperature", "RelativeWindSpeed", "TrueWindDirection", "SeaWaterTemperature", "SeaWaterDepth", "AirPressure", "RelativeHumidity", "Swell", "SeaScale" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sls", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandSingle": { "target": "YYYY-MM-DDThh:mm:ss.sssssssss" }, "locationDataTypes": { "dataType": [ "Unknown", "Latitude", "Longitude" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sdr", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandRange": { "start": "YYYY-MM-DDThh:mm:ss.sssssssss", "end": "YYYY-MM-DDThh:mm:ss.sssssssss", "intervalMilliseconds": "360000" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sdr", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandRange": { "start": "YYYY-MM-DDThh:mm:ss.sssssssss", "end": "YYYY-MM-DDThh:mm:ss.sssssssss", "intervalMilliseconds": "360000" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
YYYY-MM-DD hh:mm:ss.sss +00:00 [INF] DiscoDataResponse Received message: { "requestId": "test_us-20359-sdr", "destination": "Local", "executed": "YYYY-MM-DDThh:mm:ss.sssssssss", "dataResponse": { "dataPointCollections": [ ] }, "onDemandRange": { "start": "YYYY-MM-DDThh:mm:ss.sssssssss", "end": "YYYY-MM-DDThh:mm:ss.sssssssss", "intervalMilliseconds": "360000" }, "draftDataTypes": { "dataType": [ "Unknown", "MeanDraft", "AftDraft", "ForwardDraft", "MidshipDraftPort", "MidshipDraftStarboard", "Trim" ] } }
