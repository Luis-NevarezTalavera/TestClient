Mon 09/25/2023 
02:33 PM
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.request.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.request.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.request.et -> cc.disco.data.request.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.request.et -> cc.disco.data.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.request.et -> cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.internal-request-dlq.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.internal-request-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.internal-request-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.internal-request-dlq.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.internal-request-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.internal-request-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.router-dlq.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.router-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.router-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.router-dlq.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.router-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.router-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.request.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.get-schedules.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.request.et -> cc.disco.get-schedules.request.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.request.et -> cc.disco.get-schedules.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.request.et -> cc.disco.get-schedules.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.create-schedule.request.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.create-schedule.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.create-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.create-schedule.request.et -> cc.disco.create-schedule.request.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.create-schedule.request.et -> cc.disco.create-schedule.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.create-schedule.request.et -> cc.disco.create-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.delete-schedule.request.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.delete-schedule.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.delete-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.delete-schedule.request.et -> cc.disco.delete-schedule.request.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.delete-schedule.request.et -> cc.disco.delete-schedule.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.delete-schedule.request.et -> cc.disco.delete-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.schedule.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.schedule.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.schedule.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: error","State":{"Message":"Created Local RabbitMQ Queue: error","{OriginalFormat}":"Created Local RabbitMQ Queue: error"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.request.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.request.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"requestReceiver\" setting number of workers to 1","State":{"Message":"Bus \"requestReceiver\" setting number of workers to 1","{OriginalFormat}":"Bus \"requestReceiver\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"requestReceiver\" started","State":{"Message":"Bus \"requestReceiver\" started","{OriginalFormat}":"Bus \"requestReceiver\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.internal-request-dlq.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.internal-request-dlq.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.internal-request-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.request.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.request.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"dlqRequestHandler\" setting number of workers to 1","State":{"Message":"Bus \"dlqRequestHandler\" setting number of workers to 1","{OriginalFormat}":"Bus \"dlqRequestHandler\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"dlqRequestHandler\" started","State":{"Message":"Bus \"dlqRequestHandler\" started","{OriginalFormat}":"Bus \"dlqRequestHandler\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.internal-request-dlq.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.internal-request-dlq.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.internal-request-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:18Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"error\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"error\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:19Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:19Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"errorListener\" setting number of workers to 1","State":{"Message":"Bus \"errorListener\" setting number of workers to 1","{OriginalFormat}":"Bus \"errorListener\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:19Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"errorListener\" started","State":{"Message":"Bus \"errorListener\" started","{OriginalFormat}":"Bus \"errorListener\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:19Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.router-dlq.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.router-dlq.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.router-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:19Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"error\"","State":{"Message":"Successfully initialized consumer for \"error\"","{OriginalFormat}":"Successfully initialized consumer for \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:19Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:19Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"routerDlqRequestHandler\" setting number of workers to 1","State":{"Message":"Bus \"routerDlqRequestHandler\" setting number of workers to 1","{OriginalFormat}":"Bus \"routerDlqRequestHandler\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:19Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"routerDlqRequestHandler\" started","State":{"Message":"Bus \"routerDlqRequestHandler\" started","{OriginalFormat}":"Bus \"routerDlqRequestHandler\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:34:19Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.response.router-dlq.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.response.router-dlq.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.response.router-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Queue cc.disco.data.request.siemens.q has been successfully deleted.","State":{"Message":"Queue cc.disco.data.request.siemens.q has been successfully deleted.","QueueName":"cc.disco.data.request.siemens.q","{OriginalFormat}":"Queue {QueueName} has been successfully deleted."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Queue cc.disco.data.response.siemens-dlq.q has been successfully deleted.","State":{"Message":"Queue cc.disco.data.response.siemens-dlq.q has been successfully deleted.","QueueName":"cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Queue {QueueName} has been successfully deleted."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Exchange cc.disco.data.response.siemens.et has been successfully deleted.","State":{"Message":"Exchange cc.disco.data.response.siemens.et has been successfully deleted.","ExchangeName":"cc.disco.data.response.siemens.et","{OriginalFormat}":"Exchange {ExchangeName} has been successfully deleted."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Exchange cc.disco.data.response.siemens.ed has been successfully deleted.","State":{"Message":"Exchange cc.disco.data.response.siemens.ed has been successfully deleted.","ExchangeName":"cc.disco.data.response.siemens.ed","{OriginalFormat}":"Exchange {ExchangeName} has been successfully deleted."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Queue cc.disco.schedule.response.test-client.q has been successfully deleted.","State":{"Message":"Queue cc.disco.schedule.response.test-client.q has been successfully deleted.","QueueName":"cc.disco.schedule.response.test-client.q","{OriginalFormat}":"Queue {QueueName} has been successfully deleted."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Queue cc.disco.data.response.test-client.q has been successfully deleted.","State":{"Message":"Queue cc.disco.data.response.test-client.q has been successfully deleted.","QueueName":"cc.disco.data.response.test-client.q","{OriginalFormat}":"Queue {QueueName} has been successfully deleted."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Queue cc.disco.get-schedules.response.test-client.q has been successfully deleted.","State":{"Message":"Queue cc.disco.get-schedules.response.test-client.q has been successfully deleted.","QueueName":"cc.disco.get-schedules.response.test-client.q","{OriginalFormat}":"Queue {QueueName} has been successfully deleted."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.create-schedule.request.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.create-schedule.request.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.create-schedule.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleCreateRequestReceiver\" setting number of workers to 1","State":{"Message":"Bus \"scheduleCreateRequestReceiver\" setting number of workers to 1","{OriginalFormat}":"Bus \"scheduleCreateRequestReceiver\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleCreateRequestReceiver\" started","State":{"Message":"Bus \"scheduleCreateRequestReceiver\" started","{OriginalFormat}":"Bus \"scheduleCreateRequestReceiver\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.get-schedules.request.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.get-schedules.request.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.get-schedules.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.create-schedule.request.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.create-schedule.request.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.create-schedule.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleGetRequestReceiver\" setting number of workers to 1","State":{"Message":"Bus \"scheduleGetRequestReceiver\" setting number of workers to 1","{OriginalFormat}":"Bus \"scheduleGetRequestReceiver\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleGetRequestReceiver\" started","State":{"Message":"Bus \"scheduleGetRequestReceiver\" started","{OriginalFormat}":"Bus \"scheduleGetRequestReceiver\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.delete-schedule.request.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.delete-schedule.request.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.delete-schedule.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.get-schedules.request.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.get-schedules.request.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.get-schedules.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleDeleteRequestReceiver\" setting number of workers to 1","State":{"Message":"Bus \"scheduleDeleteRequestReceiver\" setting number of workers to 1","{OriginalFormat}":"Bus \"scheduleDeleteRequestReceiver\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleDeleteRequestReceiver\" started","State":{"Message":"Bus \"scheduleDeleteRequestReceiver\" started","{OriginalFormat}":"Bus \"scheduleDeleteRequestReceiver\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.delete-schedule.request.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.delete-schedule.request.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.delete-schedule.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.BackgroundJobServer","Message":"Starting Hangfire Server using job storage: 'Connection string: scheduler/data/schedule.hangfire.sqlite.db,  prefix: hangfire'","State":{"Message":"Starting Hangfire Server using job storage: 'Connection string: scheduler/data/schedule.hangfire.sqlite.db,  prefix: hangfire'"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.BackgroundJobServer","Message":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","State":{"Message":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"GetSchedulesRequestHandler received message with id: test_us-20402-2neg","State":{"Message":"GetSchedulesRequestHandler received message with id: test_us-20402-2neg","RequestId":"test_us-20402-2neg","{OriginalFormat}":"GetSchedulesRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","State":{"Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","RequestId":"test_us-20402-1","{OriginalFormat}":"GetSchedulesRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":4,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client is not specified in the header of request test_us-20402-2neg","State":{"Message":"Client is not specified in the header of request test_us-20402-2neg","RequestId":"test_us-20402-2neg","{OriginalFormat}":"Client is not specified in the header of request {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Microsoft.Hosting.Lifetime","Message":"Application started. Press Ctrl+C to shut down.","State":{"Message":"Application started. Press Ctrl+C to shut down.","{OriginalFormat}":"Application started. Press Ctrl+C to shut down."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Microsoft.Hosting.Lifetime","Message":"Hosting environment: docker","State":{"Message":"Hosting environment: docker","EnvName":"docker","{OriginalFormat}":"Hosting environment: {EnvName}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Microsoft.Hosting.Lifetime","Message":"Content root path: C:\\app","State":{"Message":"Content root path: C:\\app","ContentRoot":"C:\\app","{OriginalFormat}":"Content root path: {ContentRoot}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for one-way transport","State":{"Message":"Initializing RabbitMQ connection manager for one-way transport","{OriginalFormat}":"Initializing RabbitMQ connection manager for one-way transport"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:01Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleGetResponceSender\" started","State":{"Message":"Bus \"scheduleGetResponceSender\" started","{OriginalFormat}":"Bus \"scheduleGetResponceSender\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Server.BackgroundServerProcess","Message":"Server f84ec73c0097:9348:df993470 successfully announced in 139.283 ms","State":{"Message":"Server f84ec73c0097:9348:df993470 successfully announced in 139.283 ms"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Server.BackgroundServerProcess","Message":"Server f84ec73c0097:9348:df993470 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","State":{"Message":"Server f84ec73c0097:9348:df993470 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'AggregatedCounter' table...","State":{"Message":"Removing outdated records from the 'AggregatedCounter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Server.BackgroundServerProcess","Message":"Server f84ec73c0097:9348:df993470 all the dispatchers started","State":{"Message":"Server f84ec73c0097:9348:df993470 all the dispatchers started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 51","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","State":{"Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","RequestId":"test_us-20402-1","{OriginalFormat}":"GetSchedulesRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'AggregatedCounter' table...","State":{"Message":"Outdated records removed from the 'AggregatedCounter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'Counter' table...","State":{"Message":"Removing outdated records from the 'Counter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 51","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","State":{"Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","RequestId":"test_us-20402-1","{OriginalFormat}":"GetSchedulesRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'Counter' table...","State":{"Message":"Outdated records removed from the 'Counter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'Job' table...","State":{"Message":"Removing outdated records from the 'Job' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 51","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","State":{"Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","RequestId":"test_us-20402-1","{OriginalFormat}":"GetSchedulesRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 51","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","State":{"Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","RequestId":"test_us-20402-1","{OriginalFormat}":"GetSchedulesRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'Job' table...","State":{"Message":"Outdated records removed from the 'Job' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'List' table...","State":{"Message":"Removing outdated records from the 'List' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":13,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unexpected error during getting schedules from database.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 51","State":{"Message":"Unexpected error during getting schedules from database.","{OriginalFormat}":"Unexpected error during getting schedules from database."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist)  ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'List' table...","State":{"Message":"Outdated records removed from the 'List' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'Set' table...","State":{"Message":"Removing outdated records from the 'Set' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-E2-2F-49-2D-2E-89-2F-2D-D6-35-32-30-31-30-D2-35-04-00-27-6C-69-48-11-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\r\n----rbs2-senttime: 2023-09-25T14:29:18.7739689+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoGetSchedulesRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.get-schedules.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-E2-2F-49-2D-2E-89-2F-2D-D6-35-32-30-31-30-D2-35-04-00-27-6C-69-48-11-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\r\n----rbs2-senttime: 2023-09-25T14:29:18.7739689+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoGetSchedulesRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.get-schedules.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-E2-2F-49-2D-2E-89-2F-2D-D6-35-32-30-31-30-D2-35-04-00-27-6C-69-48-11-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\r\n----rbs2-senttime: 2023-09-25T14:29:18.7739689+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoGetSchedulesRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: e8dcbddb-80ad-4dbb-8a42-c91635de8b7e\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist) (Queue 'cc.disco.get-schedules.response.test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.get-schedules.response.test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.get-schedules.response.test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.GetRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\GetRequestHandler.cs:line 63\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.get-schedules.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'Set' table...","State":{"Message":"Outdated records removed from the 'Set' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'Hash' table...","State":{"Message":"Removing outdated records from the 'Hash' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'Hash' table...","State":{"Message":"Outdated records removed from the 'Hash' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'State' table...","State":{"Message":"Removing outdated records from the 'State' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'State' table...","State":{"Message":"Outdated records removed from the 'State' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'JobParameter' table...","State":{"Message":"Removing outdated records from the 'JobParameter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:35:02Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'JobParameter' table...","State":{"Message":"Outdated records removed from the 'JobParameter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:33Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:33Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.schedule.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.schedule.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.schedule.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","State":{"Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" started","State":{"Message":"Bus \"siemensDlqRequestHandler\" started","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","State":{"Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" started","State":{"Message":"Bus \"siemensDlqRequestHandler\" started","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" started"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:36:54Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-25 14:37:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"GetSchedulesRequestHandler received message with id: test_us-20402-2neg","State":{"Message":"GetSchedulesRequestHandler received message with id: test_us-20402-2neg","RequestId":"test_us-20402-2neg","{OriginalFormat}":"GetSchedulesRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:37:14Z","EventId":4,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client is not specified in the header of request test_us-20402-2neg","State":{"Message":"Client is not specified in the header of request test_us-20402-2neg","RequestId":"test_us-20402-2neg","{OriginalFormat}":"Client is not specified in the header of request {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-25 14:37:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","State":{"Message":"GetSchedulesRequestHandler received message with id: test_us-20402-1","RequestId":"test_us-20402-1","{OriginalFormat}":"GetSchedulesRequestHandler received message with id: {RequestId}"},"Scopes":[]}
