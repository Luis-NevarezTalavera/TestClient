Wed 09/20/2023 10:02 PM
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.request.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.request.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.request.et -> cc.disco.data.request.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.request.et -> cc.disco.data.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.request.et -> cc.disco.data.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.internal-request-dlq.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.internal-request-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.internal-request-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.internal-request-dlq.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.internal-request-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.internal-request-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.router-dlq.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.router-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.router-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.router-dlq.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.router-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.router-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.request.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.get-schedules.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.request.et -> cc.disco.get-schedules.request.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.request.et -> cc.disco.get-schedules.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.request.et -> cc.disco.get-schedules.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.create-schedule.request.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.create-schedule.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.create-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.create-schedule.request.et -> cc.disco.create-schedule.request.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.create-schedule.request.et -> cc.disco.create-schedule.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.create-schedule.request.et -> cc.disco.create-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.delete-schedule.request.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.delete-schedule.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.delete-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.delete-schedule.request.et -> cc.disco.delete-schedule.request.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.delete-schedule.request.et -> cc.disco.delete-schedule.request.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.delete-schedule.request.et -> cc.disco.delete-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.schedule.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.schedule.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.schedule.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.internal-request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.router.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.create-schedule.request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.delete-schedule.request.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.schedule.response.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.get-schedules.response.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: error","State":{"Message":"Created Local RabbitMQ Queue: error","{OriginalFormat}":"Created Local RabbitMQ Queue: error"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:25Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.request.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.request.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"requestReceiver\" setting number of workers to 1","State":{"Message":"Bus \"requestReceiver\" setting number of workers to 1","{OriginalFormat}":"Bus \"requestReceiver\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"requestReceiver\" started","State":{"Message":"Bus \"requestReceiver\" started","{OriginalFormat}":"Bus \"requestReceiver\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.internal-request-dlq.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.internal-request-dlq.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.internal-request-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.request.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.request.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"dlqRequestHandler\" setting number of workers to 1","State":{"Message":"Bus \"dlqRequestHandler\" setting number of workers to 1","{OriginalFormat}":"Bus \"dlqRequestHandler\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"dlqRequestHandler\" started","State":{"Message":"Bus \"dlqRequestHandler\" started","{OriginalFormat}":"Bus \"dlqRequestHandler\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.internal-request-dlq.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.internal-request-dlq.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.internal-request-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"error\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"error\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"errorListener\" setting number of workers to 1","State":{"Message":"Bus \"errorListener\" setting number of workers to 1","{OriginalFormat}":"Bus \"errorListener\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"errorListener\" started","State":{"Message":"Bus \"errorListener\" started","{OriginalFormat}":"Bus \"errorListener\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.router-dlq.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.router-dlq.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.router-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"error\"","State":{"Message":"Successfully initialized consumer for \"error\"","{OriginalFormat}":"Successfully initialized consumer for \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"routerDlqRequestHandler\" setting number of workers to 1","State":{"Message":"Bus \"routerDlqRequestHandler\" setting number of workers to 1","{OriginalFormat}":"Bus \"routerDlqRequestHandler\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"routerDlqRequestHandler\" started","State":{"Message":"Bus \"routerDlqRequestHandler\" started","{OriginalFormat}":"Bus \"routerDlqRequestHandler\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:02:26Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.response.router-dlq.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.response.router-dlq.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.response.router-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.et"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.siemens-dlq.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","State":{"Message":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed","{OriginalFormat}":"Created Local RabbitMQ Exchange: cc.disco.data.response.siemens.ed"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.internal-request.et -> cc.disco.data.request.siemens.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.disco.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.schedule.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.schedule.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.schedule.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.schedule.response.et -> cc.disco.schedule.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.get-schedules.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.get-schedules.response.et -> cc.disco.get-schedules.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue: cc.disco.data.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue: cc.disco.data.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue: cc.disco.data.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.router.et -> cc.disco.data.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.test-client.q","State":{"Message":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.test-client.q","{OriginalFormat}":"Created Local RabbitMQ Queue Binding: cc.disco.data.response.siemens.et -> cc.disco.data.response.test-client.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","State":{"Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" started","State":{"Message":"Bus \"siemensDlqRequestHandler\" started","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","State":{"Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","State":{"Message":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" started","State":{"Message":"Bus \"siemensDlqRequestHandler\" started","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"siemensDlqRequestHandler\" started","State":{"Message":"Bus \"siemensDlqRequestHandler\" started","{OriginalFormat}":"Bus \"siemensDlqRequestHandler\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:09Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.data.response.siemens-dlq.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.create-schedule.request.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.create-schedule.request.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.create-schedule.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleCreateRequestReceiver\" setting number of workers to 1","State":{"Message":"Bus \"scheduleCreateRequestReceiver\" setting number of workers to 1","{OriginalFormat}":"Bus \"scheduleCreateRequestReceiver\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleCreateRequestReceiver\" started","State":{"Message":"Bus \"scheduleCreateRequestReceiver\" started","{OriginalFormat}":"Bus \"scheduleCreateRequestReceiver\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.get-schedules.request.q\"","State":{"Message":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.get-schedules.request.q\"","{OriginalFormat}":"Initializing RabbitMQ connection manager for transport with input queue \"cc.disco.get-schedules.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.create-schedule.request.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.create-schedule.request.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.create-schedule.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Threading.TaskParallelLibrary.TplAsyncTask","Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","State":{"Message":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10","{OriginalFormat}":"Starting periodic task \"CleanupTrackedErrors\" with interval 00:00:10"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleGetRequestReceiver\" setting number of workers to 1","State":{"Message":"Bus \"scheduleGetRequestReceiver\" setting number of workers to 1","{OriginalFormat}":"Bus \"scheduleGetRequestReceiver\" setting number of workers to 1"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleGetRequestReceiver\" started","State":{"Message":"Bus \"scheduleGetRequestReceiver\" started","{OriginalFormat}":"Bus \"scheduleGetRequestReceiver\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.RabbitMq.RabbitMqTransport","Message":"Successfully initialized consumer for \"cc.disco.get-schedules.request.q\"","State":{"Message":"Successfully initialized consumer for \"cc.disco.get-schedules.request.q\"","{OriginalFormat}":"Successfully initialized consumer for \"cc.disco.get-schedules.request.q\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.BackgroundJobServer","Message":"Starting Hangfire Server using job storage: 'Connection string: scheduler/data/schedule.hangfire.sqlite.db,  prefix: hangfire'","State":{"Message":"Starting Hangfire Server using job storage: 'Connection string: scheduler/data/schedule.hangfire.sqlite.db,  prefix: hangfire'"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.BackgroundJobServer","Message":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15","State":{"Message":"Using the following options for Hangfire Server:\r\n    Worker count: 20\r\n    Listening queues: 'default'\r\n    Shutdown timeout: 00:00:15\r\n    Schedule polling interval: 00:00:15"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Microsoft.Hosting.Lifetime","Message":"Application started. Press Ctrl+C to shut down.","State":{"Message":"Application started. Press Ctrl+C to shut down.","{OriginalFormat}":"Application started. Press Ctrl+C to shut down."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Microsoft.Hosting.Lifetime","Message":"Hosting environment: docker","State":{"Message":"Hosting environment: docker","EnvName":"docker","{OriginalFormat}":"Hosting environment: {EnvName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Microsoft.Hosting.Lifetime","Message":"Content root path: C:\\app","State":{"Message":"Content root path: C:\\app","ContentRoot":"C:\\app","{OriginalFormat}":"Content root path: {ContentRoot}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Server.BackgroundServerProcess","Message":"Server f890d62cc43e:7988:cd53bff6 successfully announced in 151.3696 ms","State":{"Message":"Server f890d62cc43e:7988:cd53bff6 successfully announced in 151.3696 ms"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Server.BackgroundServerProcess","Message":"Server f890d62cc43e:7988:cd53bff6 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler...","State":{"Message":"Server f890d62cc43e:7988:cd53bff6 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, Worker, DelayedJobScheduler, RecurringJobScheduler..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'AggregatedCounter' table...","State":{"Message":"Removing outdated records from the 'AggregatedCounter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Server.BackgroundServerProcess","Message":"Server f890d62cc43e:7988:cd53bff6 all the dispatchers started","State":{"Message":"Server f890d62cc43e:7988:cd53bff6 all the dispatchers started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'AggregatedCounter' table...","State":{"Message":"Outdated records removed from the 'AggregatedCounter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'Counter' table...","State":{"Message":"Removing outdated records from the 'Counter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'Counter' table...","State":{"Message":"Outdated records removed from the 'Counter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'Job' table...","State":{"Message":"Removing outdated records from the 'Job' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'Job' table...","State":{"Message":"Outdated records removed from the 'Job' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'List' table...","State":{"Message":"Removing outdated records from the 'List' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'List' table...","State":{"Message":"Outdated records removed from the 'List' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'Set' table...","State":{"Message":"Removing outdated records from the 'Set' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'Set' table...","State":{"Message":"Outdated records removed from the 'Set' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'Hash' table...","State":{"Message":"Removing outdated records from the 'Hash' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'Hash' table...","State":{"Message":"Outdated records removed from the 'Hash' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'State' table...","State":{"Message":"Removing outdated records from the 'State' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'State' table...","State":{"Message":"Outdated records removed from the 'State' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Removing outdated records from the 'JobParameter' table...","State":{"Message":"Removing outdated records from the 'JobParameter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:03:10Z","EventId":0,"LogLevel":"Information","Category":"Hangfire.Storage.SQLite.ExpirationManager","Message":"Outdated records removed from the 'JobParameter' table...","State":{"Message":"Outdated records removed from the 'JobParameter' table..."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sds","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sdr","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:41Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for one-way transport","State":{"Message":"Initializing RabbitMQ connection manager for one-way transport","{OriginalFormat}":"Initializing RabbitMQ connection manager for one-way transport"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:41Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleCreateResponceSender\" started","State":{"Message":"Bus \"scheduleCreateResponceSender\" started","{OriginalFormat}":"Bus \"scheduleCreateResponceSender\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-slr","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sls","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swr","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sws","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:44Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)  ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:05:45Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-senttime: 2023-09-20T22:05:43.1165992+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-senttime: 2023-09-20T22:05:43.1165992+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-senttime: 2023-09-20T22:05:43.1165992+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: 6cf1c057-d1a5-4021-9098-2f2f5d2e7d2c\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:10.540952600Z\", \"end\": \"2023-09-20T20:11:10.540952600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:10.540952600Z\", \"end\": \"2023-09-20T20:11:10.540952600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:10.540952600Z\", \"end\": \"2023-09-20T20:11:10.540952600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for one-way transport","State":{"Message":"Initializing RabbitMQ connection manager for one-way transport","{OriginalFormat}":"Initializing RabbitMQ connection manager for one-way transport"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleOnDemandRequestSender\" started","State":{"Message":"Bus \"scheduleOnDemandRequestSender\" started","{OriginalFormat}":"Bus \"scheduleOnDemandRequestSender\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for one-way transport","State":{"Message":"Initializing RabbitMQ connection manager for one-way transport","{OriginalFormat}":"Initializing RabbitMQ connection manager for one-way transport"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:10Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"internalRequest\" started","State":{"Message":"Bus \"internalRequest\" started","{OriginalFormat}":"Bus \"internalRequest\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:25.667453Z\", \"end\": \"2023-09-20T20:11:25.667453Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:25.667453Z\", \"end\": \"2023-09-20T20:11:25.667453Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:25.667453Z\", \"end\": \"2023-09-20T20:11:25.667453Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:25.702645600Z\", \"end\": \"2023-09-20T20:11:25.702645600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:25.702645600Z\", \"end\": \"2023-09-20T20:11:25.702645600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:25.702645600Z\", \"end\": \"2023-09-20T20:11:25.702645600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.760455300Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.760455300Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.760455300Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.807973Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.807973Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.807973Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.869594600Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.869594600Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.869594600Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for one-way transport","State":{"Message":"Initializing RabbitMQ connection manager for one-way transport","{OriginalFormat}":"Initializing RabbitMQ connection manager for one-way transport"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"responseSender\" started","State":{"Message":"Bus \"responseSender\" started","{OriginalFormat}":"Bus \"responseSender\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.951056200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.951056200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:06:25.951056200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:31Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:35Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:40.707764900Z\", \"end\": \"2023-09-20T20:11:40.707764900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:40.707764900Z\", \"end\": \"2023-09-20T20:11:40.707764900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:40.707764900Z\", \"end\": \"2023-09-20T20:11:40.707764900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:40Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:40Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:55Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:55.717392Z\", \"end\": \"2023-09-20T20:11:55.717392Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:55.717392Z\", \"end\": \"2023-09-20T20:11:55.717392Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:06:55.717392Z\", \"end\": \"2023-09-20T20:11:55.717392Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:06:55Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:10.779841600Z\", \"end\": \"2023-09-20T20:12:10.779841600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:10.779841600Z\", \"end\": \"2023-09-20T20:12:10.779841600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:10.779841600Z\", \"end\": \"2023-09-20T20:12:10.779841600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:25.838065Z\", \"end\": \"2023-09-20T20:12:25.838065Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:25.838065Z\", \"end\": \"2023-09-20T20:12:25.838065Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:25.838065Z\", \"end\": \"2023-09-20T20:12:25.838065Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:07:25.863181500Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:07:25.863181500Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:07:25.863181500Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:40.842253100Z\", \"end\": \"2023-09-20T20:12:40.842253100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:40.842253100Z\", \"end\": \"2023-09-20T20:12:40.842253100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:40.842253100Z\", \"end\": \"2023-09-20T20:12:40.842253100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:40.911473400Z\", \"end\": \"2023-09-20T20:12:40.911473400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:40.911473400Z\", \"end\": \"2023-09-20T20:12:40.911473400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:40.911473400Z\", \"end\": \"2023-09-20T20:12:40.911473400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:55Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:55.933810Z\", \"end\": \"2023-09-20T20:12:55.933810Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:55.933810Z\", \"end\": \"2023-09-20T20:12:55.933810Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:07:55.933810Z\", \"end\": \"2023-09-20T20:12:55.933810Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:07:55Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:11.120963400Z\", \"end\": \"2023-09-20T20:13:11.120963400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:11.120963400Z\", \"end\": \"2023-09-20T20:13:11.120963400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:11.120963400Z\", \"end\": \"2023-09-20T20:13:11.120963400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:26.076595300Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:26.076595300Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:26.076595300Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:26.223250600Z\", \"end\": \"2023-09-20T20:13:26.223250600Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:26.223250600Z\", \"end\": \"2023-09-20T20:13:26.223250600Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:26.223250600Z\", \"end\": \"2023-09-20T20:13:26.223250600Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:26.598554400Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:26.598554400Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:26.598554400Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:26.700336Z\", \"end\": \"2023-09-20T20:13:26.700336Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:26.700336Z\", \"end\": \"2023-09-20T20:13:26.700336Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:26.700336Z\", \"end\": \"2023-09-20T20:13:26.700336Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:26.751879900Z\", \"end\": \"2023-09-20T20:13:26.751879900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:26.751879900Z\", \"end\": \"2023-09-20T20:13:26.751879900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:26.751879900Z\", \"end\": \"2023-09-20T20:13:26.751879900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:26.870668300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:26.870668300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:26.870668300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:27.199735200Z\", \"end\": \"2023-09-20T20:13:27.199735200Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:27.199735200Z\", \"end\": \"2023-09-20T20:13:27.199735200Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:27.199735200Z\", \"end\": \"2023-09-20T20:13:27.199735200Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:27.300433200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:27.300433200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:27.300433200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:27.364190600Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:27.364190600Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:08:27.364190600Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:27.552338400Z\", \"end\": \"2023-09-20T20:13:27.552338400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:27.552338400Z\", \"end\": \"2023-09-20T20:13:27.552338400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:27.552338400Z\", \"end\": \"2023-09-20T20:13:27.552338400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:30Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:33Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:37Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:41.552520800Z\", \"end\": \"2023-09-20T20:13:41.552520800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:41.552520800Z\", \"end\": \"2023-09-20T20:13:41.552520800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:41.552520800Z\", \"end\": \"2023-09-20T20:13:41.552520800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:41.649371900Z\", \"end\": \"2023-09-20T20:13:41.649371900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:41.649371900Z\", \"end\": \"2023-09-20T20:13:41.649371900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:41.649371900Z\", \"end\": \"2023-09-20T20:13:41.649371900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:42Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:42Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:42Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:56Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:56.644451600Z\", \"end\": \"2023-09-20T20:13:56.644451600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:56.644451600Z\", \"end\": \"2023-09-20T20:13:56.644451600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:08:56.644451600Z\", \"end\": \"2023-09-20T20:13:56.644451600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:08:56Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:11.742961Z\", \"end\": \"2023-09-20T20:14:11.742961Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:11.742961Z\", \"end\": \"2023-09-20T20:14:11.742961Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:11.742961Z\", \"end\": \"2023-09-20T20:14:11.742961Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:09:11.845526Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:09:11.845526Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:09:11.845526Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:26.870579300Z\", \"end\": \"2023-09-20T20:14:26.870579300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:26.870579300Z\", \"end\": \"2023-09-20T20:14:26.870579300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:26.870579300Z\", \"end\": \"2023-09-20T20:14:26.870579300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:26.914243600Z\", \"end\": \"2023-09-20T20:14:26.914243600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:26.914243600Z\", \"end\": \"2023-09-20T20:14:26.914243600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:26.914243600Z\", \"end\": \"2023-09-20T20:14:26.914243600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:41.879731800Z\", \"end\": \"2023-09-20T20:14:41.879731800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:41.879731800Z\", \"end\": \"2023-09-20T20:14:41.879731800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:41.879731800Z\", \"end\": \"2023-09-20T20:14:41.879731800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:56Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:56.893343800Z\", \"end\": \"2023-09-20T20:14:56.893343800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:56.893343800Z\", \"end\": \"2023-09-20T20:14:56.893343800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:09:56.893343800Z\", \"end\": \"2023-09-20T20:14:56.893343800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:09:56Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:11.976014300Z\", \"end\": \"2023-09-20T20:15:11.976014300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:11.976014300Z\", \"end\": \"2023-09-20T20:15:11.976014300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:11.976014300Z\", \"end\": \"2023-09-20T20:15:11.976014300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.044168500Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.044168500Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.044168500Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:12.318522200Z\", \"end\": \"2023-09-20T20:15:12.318522200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:12.318522200Z\", \"end\": \"2023-09-20T20:15:12.318522200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:12.318522200Z\", \"end\": \"2023-09-20T20:15:12.318522200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.378333400Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.378333400Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.378333400Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.526216100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.526216100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.526216100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.673228300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.673228300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:10:12.673228300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:12.930236400Z\", \"end\": \"2023-09-20T20:15:12.930236400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:12.930236400Z\", \"end\": \"2023-09-20T20:15:12.930236400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:12.930236400Z\", \"end\": \"2023-09-20T20:15:12.930236400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:27.291552900Z\", \"end\": \"2023-09-20T20:15:27.291552900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:27.291552900Z\", \"end\": \"2023-09-20T20:15:27.291552900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:27.291552900Z\", \"end\": \"2023-09-20T20:15:27.291552900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:27Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:42Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:42.340651900Z\", \"end\": \"2023-09-20T20:15:42.340651900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:42.340651900Z\", \"end\": \"2023-09-20T20:15:42.340651900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:42.340651900Z\", \"end\": \"2023-09-20T20:15:42.340651900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:42Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:57Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:57.366577400Z\", \"end\": \"2023-09-20T20:15:57.366577400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:57.366577400Z\", \"end\": \"2023-09-20T20:15:57.366577400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:10:57.366577400Z\", \"end\": \"2023-09-20T20:15:57.366577400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:10:57Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:12.436921Z\", \"end\": \"2023-09-20T20:16:12.436921Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:12.436921Z\", \"end\": \"2023-09-20T20:16:12.436921Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:12.436921Z\", \"end\": \"2023-09-20T20:16:12.436921Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:11:12.520541400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:11:12.520541400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:11:12.520541400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:27.597657100Z\", \"end\": \"2023-09-20T20:16:27.597657100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:27.597657100Z\", \"end\": \"2023-09-20T20:16:27.597657100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:27.597657100Z\", \"end\": \"2023-09-20T20:16:27.597657100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:27.649713700Z\", \"end\": \"2023-09-20T20:16:27.649713700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:27.649713700Z\", \"end\": \"2023-09-20T20:16:27.649713700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:27.649713700Z\", \"end\": \"2023-09-20T20:16:27.649713700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:42Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:42.618077100Z\", \"end\": \"2023-09-20T20:16:42.618077100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:42.618077100Z\", \"end\": \"2023-09-20T20:16:42.618077100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:42.618077100Z\", \"end\": \"2023-09-20T20:16:42.618077100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:42Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:57Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:57.665486200Z\", \"end\": \"2023-09-20T20:16:57.665486200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:57.665486200Z\", \"end\": \"2023-09-20T20:16:57.665486200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:11:57.665486200Z\", \"end\": \"2023-09-20T20:16:57.665486200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:11:57Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:12.745959600Z\", \"end\": \"2023-09-20T20:17:12.745959600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:12.745959600Z\", \"end\": \"2023-09-20T20:17:12.745959600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:12.745959600Z\", \"end\": \"2023-09-20T20:17:12.745959600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:13.028931200Z\", \"end\": \"2023-09-20T20:17:13.028931200Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:13.028931200Z\", \"end\": \"2023-09-20T20:17:13.028931200Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:13.028931200Z\", \"end\": \"2023-09-20T20:17:13.028931200Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.219488400Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.219488400Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.219488400Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.427311300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.427311300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.427311300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.427743400Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.427743400Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.427743400Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:13.574927400Z\", \"end\": \"2023-09-20T20:17:13.574927400Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:13.574927400Z\", \"end\": \"2023-09-20T20:17:13.574927400Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:13.574927400Z\", \"end\": \"2023-09-20T20:17:13.574927400Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:13.676139900Z\", \"end\": \"2023-09-20T20:17:13.676139900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:13.676139900Z\", \"end\": \"2023-09-20T20:17:13.676139900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:13.676139900Z\", \"end\": \"2023-09-20T20:17:13.676139900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.879088100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.879088100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.879088100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.879996900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.879996900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:12:13.879996900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclarePassive(String queue)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:14.475678Z\", \"end\": \"2023-09-20T20:17:14.475678Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:14.475678Z\", \"end\": \"2023-09-20T20:17:14.475678Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:14.475678Z\", \"end\": \"2023-09-20T20:17:14.475678Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.<>c__DisplayClass60_0.<EnsureQueueExists>b__0(FullyQualifiedRoutingKey _)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:28.480056600Z\", \"end\": \"2023-09-20T20:17:28.480056600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:28.480056600Z\", \"end\": \"2023-09-20T20:17:28.480056600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:28.480056600Z\", \"end\": \"2023-09-20T20:17:28.480056600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:28Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:43.629595400Z\", \"end\": \"2023-09-20T20:17:43.629595400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:43.629595400Z\", \"end\": \"2023-09-20T20:17:43.629595400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:43.629595400Z\", \"end\": \"2023-09-20T20:17:43.629595400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:58Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:58.645945400Z\", \"end\": \"2023-09-20T20:17:58.645945400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:58.645945400Z\", \"end\": \"2023-09-20T20:17:58.645945400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:12:58.645945400Z\", \"end\": \"2023-09-20T20:17:58.645945400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:12:58Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:14.979754400Z\", \"end\": \"2023-09-20T20:18:14.979754400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:14.979754400Z\", \"end\": \"2023-09-20T20:18:14.979754400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:14.979754400Z\", \"end\": \"2023-09-20T20:18:14.979754400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:13:15.084738500Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:13:15.084738500Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:13:15.084738500Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:15.990940700Z\", \"end\": \"2023-09-20T20:18:15.990940700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:15.990940700Z\", \"end\": \"2023-09-20T20:18:15.990940700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:15.990940700Z\", \"end\": \"2023-09-20T20:18:15.990940700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:31Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:31.395067400Z\", \"end\": \"2023-09-20T20:18:31.395067400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:31.395067400Z\", \"end\": \"2023-09-20T20:18:31.395067400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:31.395067400Z\", \"end\": \"2023-09-20T20:18:31.395067400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:31Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:46Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:46.760257500Z\", \"end\": \"2023-09-20T20:18:46.760257500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:46.760257500Z\", \"end\": \"2023-09-20T20:18:46.760257500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:13:46.760257500Z\", \"end\": \"2023-09-20T20:18:46.760257500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:13:46Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:02.344199300Z\", \"end\": \"2023-09-20T20:19:02.344199300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:02.344199300Z\", \"end\": \"2023-09-20T20:19:02.344199300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:02.344199300Z\", \"end\": \"2023-09-20T20:19:02.344199300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:03.394112400Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:03.394112400Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:03.394112400Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:04.324208300Z\", \"end\": \"2023-09-20T20:19:04.324208300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:04.324208300Z\", \"end\": \"2023-09-20T20:19:04.324208300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:04.324208300Z\", \"end\": \"2023-09-20T20:19:04.324208300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:05.105394100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:05.105394100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:05.105394100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:05.693092Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:05.693092Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:05.693092Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:06.078907300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:06.078907300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:14:06.078907300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:06.428029900Z\", \"end\": \"2023-09-20T20:19:06.428029900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:06.428029900Z\", \"end\": \"2023-09-20T20:19:06.428029900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:06.428029900Z\", \"end\": \"2023-09-20T20:19:06.428029900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:06.784444400Z\", \"end\": \"2023-09-20T20:19:06.784444400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:06.784444400Z\", \"end\": \"2023-09-20T20:19:06.784444400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:06.784444400Z\", \"end\": \"2023-09-20T20:19:06.784444400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:07Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:09Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:21Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:21Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:22Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:22.106050200Z\", \"end\": \"2023-09-20T20:19:22.106050200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:22.106050200Z\", \"end\": \"2023-09-20T20:19:22.106050200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:22.106050200Z\", \"end\": \"2023-09-20T20:19:22.106050200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:22Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:37Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:37.282859700Z\", \"end\": \"2023-09-20T20:19:37.282859700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:37.282859700Z\", \"end\": \"2023-09-20T20:19:37.282859700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:37.282859700Z\", \"end\": \"2023-09-20T20:19:37.282859700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:37Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:52Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:52.459046700Z\", \"end\": \"2023-09-20T20:19:52.459046700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:52.459046700Z\", \"end\": \"2023-09-20T20:19:52.459046700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:14:52.459046700Z\", \"end\": \"2023-09-20T20:19:52.459046700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:14:52Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:07.655755800Z\", \"end\": \"2023-09-20T20:20:07.655755800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:07.655755800Z\", \"end\": \"2023-09-20T20:20:07.655755800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:07.655755800Z\", \"end\": \"2023-09-20T20:20:07.655755800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:15:07.833972700Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:15:07.833972700Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:15:07.833972700Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:22Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:22.989686800Z\", \"end\": \"2023-09-20T20:20:22.989686800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:22.989686800Z\", \"end\": \"2023-09-20T20:20:22.989686800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:22.989686800Z\", \"end\": \"2023-09-20T20:20:22.989686800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:23Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:38Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:38.181372300Z\", \"end\": \"2023-09-20T20:20:38.181372300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:38.181372300Z\", \"end\": \"2023-09-20T20:20:38.181372300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:38.181372300Z\", \"end\": \"2023-09-20T20:20:38.181372300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:38Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:53Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:53.359632900Z\", \"end\": \"2023-09-20T20:20:53.359632900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:53.359632900Z\", \"end\": \"2023-09-20T20:20:53.359632900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:15:53.359632900Z\", \"end\": \"2023-09-20T20:20:53.359632900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:15:53Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:08.839300700Z\", \"end\": \"2023-09-20T20:21:08.839300700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:08.839300700Z\", \"end\": \"2023-09-20T20:21:08.839300700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:08.839300700Z\", \"end\": \"2023-09-20T20:21:08.839300700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:09.852635400Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:09.852635400Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:09.852635400Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:10.986594700Z\", \"end\": \"2023-09-20T20:21:10.986594700Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:10.986594700Z\", \"end\": \"2023-09-20T20:21:10.986594700Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:10.986594700Z\", \"end\": \"2023-09-20T20:21:10.986594700Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:11.732836500Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:11.732836500Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:11.732836500Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:12.093200100Z\", \"end\": \"2023-09-20T20:21:12.093200100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:12.093200100Z\", \"end\": \"2023-09-20T20:21:12.093200100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:12.093200100Z\", \"end\": \"2023-09-20T20:21:12.093200100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:12.447012200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:12.447012200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:12.447012200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:12.848726300Z\", \"end\": \"2023-09-20T20:21:12.848726300Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:12.848726300Z\", \"end\": \"2023-09-20T20:21:12.848726300Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:12.848726300Z\", \"end\": \"2023-09-20T20:21:12.848726300Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:13.237346200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:13.237346200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:13.237346200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:13.591866600Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:13.591866600Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:16:13.591866600Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:13.964398Z\", \"end\": \"2023-09-20T20:21:13.964398Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:13.964398Z\", \"end\": \"2023-09-20T20:21:13.964398Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:13.964398Z\", \"end\": \"2023-09-20T20:21:13.964398Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:28Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:28Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:28.969831Z\", \"end\": \"2023-09-20T20:21:28.969831Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:28.969831Z\", \"end\": \"2023-09-20T20:21:28.969831Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:28.969831Z\", \"end\": \"2023-09-20T20:21:28.969831Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:44.149917Z\", \"end\": \"2023-09-20T20:21:44.149917Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:44.149917Z\", \"end\": \"2023-09-20T20:21:44.149917Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:44.149917Z\", \"end\": \"2023-09-20T20:21:44.149917Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:44.314813700Z\", \"end\": \"2023-09-20T20:21:44.314813700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:44.314813700Z\", \"end\": \"2023-09-20T20:21:44.314813700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:44.314813700Z\", \"end\": \"2023-09-20T20:21:44.314813700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:59.317541300Z\", \"end\": \"2023-09-20T20:21:59.317541300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:59.317541300Z\", \"end\": \"2023-09-20T20:21:59.317541300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:16:59.317541300Z\", \"end\": \"2023-09-20T20:21:59.317541300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:16:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:14.362681800Z\", \"end\": \"2023-09-20T20:22:14.362681800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:14.362681800Z\", \"end\": \"2023-09-20T20:22:14.362681800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:14.362681800Z\", \"end\": \"2023-09-20T20:22:14.362681800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:17:14.555097900Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:17:14.555097900Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:17:14.555097900Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:29Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:29.539809800Z\", \"end\": \"2023-09-20T20:22:29.539809800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:29.539809800Z\", \"end\": \"2023-09-20T20:22:29.539809800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:29.539809800Z\", \"end\": \"2023-09-20T20:22:29.539809800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:29Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:29Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:29.595427600Z\", \"end\": \"2023-09-20T20:22:29.595427600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:29.595427600Z\", \"end\": \"2023-09-20T20:22:29.595427600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:29.595427600Z\", \"end\": \"2023-09-20T20:22:29.595427600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:29Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:44.588426200Z\", \"end\": \"2023-09-20T20:22:44.588426200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:44.588426200Z\", \"end\": \"2023-09-20T20:22:44.588426200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:44.588426200Z\", \"end\": \"2023-09-20T20:22:44.588426200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:59.611881Z\", \"end\": \"2023-09-20T20:22:59.611881Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:59.611881Z\", \"end\": \"2023-09-20T20:22:59.611881Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:17:59.611881Z\", \"end\": \"2023-09-20T20:22:59.611881Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:17:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:15.124083800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:15.124083800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:15.124083800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:15.147654300Z\", \"end\": \"2023-09-20T20:23:15.147654300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:15.147654300Z\", \"end\": \"2023-09-20T20:23:15.147654300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:15.147654300Z\", \"end\": \"2023-09-20T20:23:15.147654300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:15.260067300Z\", \"end\": \"2023-09-20T20:23:15.260067300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:15.260067300Z\", \"end\": \"2023-09-20T20:23:15.260067300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:15.260067300Z\", \"end\": \"2023-09-20T20:23:15.260067300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:15.508500800Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:15.508500800Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:15.508500800Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:18.968350200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:18.968350200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:18.968350200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:20Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:20.008697500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:20.008697500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:18:20.008697500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:20Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:20Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:20Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:20.168991300Z\", \"end\": \"2023-09-20T20:23:20.168991300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:20.168991300Z\", \"end\": \"2023-09-20T20:23:20.168991300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:20.168991300Z\", \"end\": \"2023-09-20T20:23:20.168991300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:20Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:30Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:35Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:35Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:35Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:35Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:35.337625600Z\", \"end\": \"2023-09-20T20:23:35.337625600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:35.337625600Z\", \"end\": \"2023-09-20T20:23:35.337625600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:35.337625600Z\", \"end\": \"2023-09-20T20:23:35.337625600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:35Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:50Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:50.523817100Z\", \"end\": \"2023-09-20T20:23:50.523817100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:50.523817100Z\", \"end\": \"2023-09-20T20:23:50.523817100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:18:50.523817100Z\", \"end\": \"2023-09-20T20:23:50.523817100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:50Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:53Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20402-1","State":{"Message":"CreateRequestHandler received message with id: test_us-20402-1","RequestId":"test_us-20402-1","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:53Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Internals.ConnectionManager","Message":"Initializing RabbitMQ connection manager for one-way transport","State":{"Message":"Initializing RabbitMQ connection manager for one-way transport","{OriginalFormat}":"Initializing RabbitMQ connection manager for one-way transport"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:18:53Z","EventId":0,"LogLevel":"Information","Category":"Rebus.Bus.RebusBus","Message":"Bus \"scheduleGetResponceSender\" started","State":{"Message":"Bus \"scheduleGetResponceSender\" started","{OriginalFormat}":"Bus \"scheduleGetResponceSender\" started"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:05.900619300Z\", \"end\": \"2023-09-20T20:24:05.900619300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:05.900619300Z\", \"end\": \"2023-09-20T20:24:05.900619300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:05.900619300Z\", \"end\": \"2023-09-20T20:24:05.900619300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:19:06.266150800Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:19:06.266150800Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:19:06.266150800Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:21Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:21.558147400Z\", \"end\": \"2023-09-20T20:24:21.558147400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:21.558147400Z\", \"end\": \"2023-09-20T20:24:21.558147400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:21.558147400Z\", \"end\": \"2023-09-20T20:24:21.558147400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:21Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:36Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:36.733921400Z\", \"end\": \"2023-09-20T20:24:36.733921400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:36.733921400Z\", \"end\": \"2023-09-20T20:24:36.733921400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:36.733921400Z\", \"end\": \"2023-09-20T20:24:36.733921400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:36Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:51Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:51.906891200Z\", \"end\": \"2023-09-20T20:24:51.906891200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:51.906891200Z\", \"end\": \"2023-09-20T20:24:51.906891200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:19:51.906891200Z\", \"end\": \"2023-09-20T20:24:51.906891200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:19:51Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:07.504504400Z\", \"end\": \"2023-09-20T20:25:07.504504400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:07.504504400Z\", \"end\": \"2023-09-20T20:25:07.504504400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:07.504504400Z\", \"end\": \"2023-09-20T20:25:07.504504400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:08.516681500Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:08.516681500Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:08.516681500Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:09.570267600Z\", \"end\": \"2023-09-20T20:25:09.570267600Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:09.570267600Z\", \"end\": \"2023-09-20T20:25:09.570267600Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:09.570267600Z\", \"end\": \"2023-09-20T20:25:09.570267600Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:10.602190700Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:10.602190700Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:10.602190700Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:11.355287100Z\", \"end\": \"2023-09-20T20:25:11.355287100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:11.355287100Z\", \"end\": \"2023-09-20T20:25:11.355287100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:11.355287100Z\", \"end\": \"2023-09-20T20:25:11.355287100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:11.707269900Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:11.707269900Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:11.707269900Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:12.076050700Z\", \"end\": \"2023-09-20T20:25:12.076050700Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:12.076050700Z\", \"end\": \"2023-09-20T20:25:12.076050700Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:12.076050700Z\", \"end\": \"2023-09-20T20:25:12.076050700Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:12.454889800Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:12.454889800Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:12.454889800Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:12.804720900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:12.804720900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:20:12.804720900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:13.300218600Z\", \"end\": \"2023-09-20T20:25:13.300218600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:13.300218600Z\", \"end\": \"2023-09-20T20:25:13.300218600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:13.300218600Z\", \"end\": \"2023-09-20T20:25:13.300218600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:27Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:28.620715900Z\", \"end\": \"2023-09-20T20:25:28.620715900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:28.620715900Z\", \"end\": \"2023-09-20T20:25:28.620715900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:28.620715900Z\", \"end\": \"2023-09-20T20:25:28.620715900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:43.811970500Z\", \"end\": \"2023-09-20T20:25:43.811970500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:43.811970500Z\", \"end\": \"2023-09-20T20:25:43.811970500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:43.811970500Z\", \"end\": \"2023-09-20T20:25:43.811970500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:59.001986300Z\", \"end\": \"2023-09-20T20:25:59.001986300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:59.001986300Z\", \"end\": \"2023-09-20T20:25:59.001986300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:20:59.001986300Z\", \"end\": \"2023-09-20T20:25:59.001986300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:20:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:14.179630700Z\", \"end\": \"2023-09-20T20:26:14.179630700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:14.179630700Z\", \"end\": \"2023-09-20T20:26:14.179630700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:14.179630700Z\", \"end\": \"2023-09-20T20:26:14.179630700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:21:14.401165200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:21:14.401165200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:21:14.401165200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:29Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:29.596266400Z\", \"end\": \"2023-09-20T20:26:29.596266400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:29.596266400Z\", \"end\": \"2023-09-20T20:26:29.596266400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:29.596266400Z\", \"end\": \"2023-09-20T20:26:29.596266400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:29Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:44.800189200Z\", \"end\": \"2023-09-20T20:26:44.800189200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:44.800189200Z\", \"end\": \"2023-09-20T20:26:44.800189200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:44.800189200Z\", \"end\": \"2023-09-20T20:26:44.800189200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:59.978739500Z\", \"end\": \"2023-09-20T20:26:59.978739500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:59.978739500Z\", \"end\": \"2023-09-20T20:26:59.978739500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:21:59.978739500Z\", \"end\": \"2023-09-20T20:26:59.978739500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:21:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:00Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:00.154193400Z\", \"end\": \"2023-09-20T20:27:00.154193400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:00.154193400Z\", \"end\": \"2023-09-20T20:27:00.154193400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:00.154193400Z\", \"end\": \"2023-09-20T20:27:00.154193400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:00Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:15.577622700Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:15.577622700Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:15.577622700Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:15.694333200Z\", \"end\": \"2023-09-20T20:27:15.694333200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:15.694333200Z\", \"end\": \"2023-09-20T20:27:15.694333200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:15.694333200Z\", \"end\": \"2023-09-20T20:27:15.694333200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:15.734736Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:15.734736Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:15.734736Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:15.875784700Z\", \"end\": \"2023-09-20T20:27:15.875784700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:15.875784700Z\", \"end\": \"2023-09-20T20:27:15.875784700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:15.875784700Z\", \"end\": \"2023-09-20T20:27:15.875784700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:15.977423700Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:15.977423700Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:15.977423700Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:16.079760Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:16.079760Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:22:16.079760Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:17.879858100Z\", \"end\": \"2023-09-20T20:27:17.879858100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:17.879858100Z\", \"end\": \"2023-09-20T20:27:17.879858100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:17.879858100Z\", \"end\": \"2023-09-20T20:27:17.879858100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:18.817773100Z\", \"end\": \"2023-09-20T20:27:18.817773100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:18.817773100Z\", \"end\": \"2023-09-20T20:27:18.817773100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:18.817773100Z\", \"end\": \"2023-09-20T20:27:18.817773100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:19Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:19.212683400Z\", \"end\": \"2023-09-20T20:27:19.212683400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:19.212683400Z\", \"end\": \"2023-09-20T20:27:19.212683400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:19.212683400Z\", \"end\": \"2023-09-20T20:27:19.212683400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:19Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:25Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:30Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:30Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:30Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:34Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:34.375467300Z\", \"end\": \"2023-09-20T20:27:34.375467300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:34.375467300Z\", \"end\": \"2023-09-20T20:27:34.375467300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:34.375467300Z\", \"end\": \"2023-09-20T20:27:34.375467300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:34Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:34Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:34.715418Z\", \"end\": \"2023-09-20T20:27:34.715418Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:34.715418Z\", \"end\": \"2023-09-20T20:27:34.715418Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:34.715418Z\", \"end\": \"2023-09-20T20:27:34.715418Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:34Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:49Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:49.696844400Z\", \"end\": \"2023-09-20T20:27:49.696844400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:49.696844400Z\", \"end\": \"2023-09-20T20:27:49.696844400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:22:49.696844400Z\", \"end\": \"2023-09-20T20:27:49.696844400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:22:49Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:05.136094100Z\", \"end\": \"2023-09-20T20:28:05.136094100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:05.136094100Z\", \"end\": \"2023-09-20T20:28:05.136094100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:05.136094100Z\", \"end\": \"2023-09-20T20:28:05.136094100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:23:05.231098700Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:23:05.231098700Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:23:05.231098700Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:21Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:21.159626600Z\", \"end\": \"2023-09-20T20:28:21.159626600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:21.159626600Z\", \"end\": \"2023-09-20T20:28:21.159626600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:21.159626600Z\", \"end\": \"2023-09-20T20:28:21.159626600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:21Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:36Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:36.486862600Z\", \"end\": \"2023-09-20T20:28:36.486862600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:36.486862600Z\", \"end\": \"2023-09-20T20:28:36.486862600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:36.486862600Z\", \"end\": \"2023-09-20T20:28:36.486862600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:36Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:51Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:51.666491700Z\", \"end\": \"2023-09-20T20:28:51.666491700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:51.666491700Z\", \"end\": \"2023-09-20T20:28:51.666491700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:23:51.666491700Z\", \"end\": \"2023-09-20T20:28:51.666491700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:23:51Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:07.070576200Z\", \"end\": \"2023-09-20T20:29:07.070576200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:07.070576200Z\", \"end\": \"2023-09-20T20:29:07.070576200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:07.070576200Z\", \"end\": \"2023-09-20T20:29:07.070576200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:08.132927800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:08.132927800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:08.132927800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:09.139221400Z\", \"end\": \"2023-09-20T20:29:09.139221400Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:09.139221400Z\", \"end\": \"2023-09-20T20:29:09.139221400Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:09.139221400Z\", \"end\": \"2023-09-20T20:29:09.139221400Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:10.183501Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:10.183501Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:10.183501Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:11.132210Z\", \"end\": \"2023-09-20T20:29:11.132210Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:11.132210Z\", \"end\": \"2023-09-20T20:29:11.132210Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:11.132210Z\", \"end\": \"2023-09-20T20:29:11.132210Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:11.681830200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:11.681830200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:11.681830200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:12.052616700Z\", \"end\": \"2023-09-20T20:29:12.052616700Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:12.052616700Z\", \"end\": \"2023-09-20T20:29:12.052616700Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:12.052616700Z\", \"end\": \"2023-09-20T20:29:12.052616700Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:12.434192300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:12.434192300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:12.434192300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:12.778155100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:12.778155100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:24:12.778155100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:13.147499600Z\", \"end\": \"2023-09-20T20:29:13.147499600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:13.147499600Z\", \"end\": \"2023-09-20T20:29:13.147499600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:13.147499600Z\", \"end\": \"2023-09-20T20:29:13.147499600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:27Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:27Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:28.458135Z\", \"end\": \"2023-09-20T20:29:28.458135Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:28.458135Z\", \"end\": \"2023-09-20T20:29:28.458135Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:28.458135Z\", \"end\": \"2023-09-20T20:29:28.458135Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:28Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:43.625043300Z\", \"end\": \"2023-09-20T20:29:43.625043300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:43.625043300Z\", \"end\": \"2023-09-20T20:29:43.625043300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:43.625043300Z\", \"end\": \"2023-09-20T20:29:43.625043300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:58Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:58.842311300Z\", \"end\": \"2023-09-20T20:29:58.842311300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:58.842311300Z\", \"end\": \"2023-09-20T20:29:58.842311300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:24:58.842311300Z\", \"end\": \"2023-09-20T20:29:58.842311300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:24:58Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:14.000276800Z\", \"end\": \"2023-09-20T20:30:14.000276800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:14.000276800Z\", \"end\": \"2023-09-20T20:30:14.000276800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:14.000276800Z\", \"end\": \"2023-09-20T20:30:14.000276800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:25:14.160835300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:25:14.160835300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:25:14.160835300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:29Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:29.326865200Z\", \"end\": \"2023-09-20T20:30:29.326865200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:29.326865200Z\", \"end\": \"2023-09-20T20:30:29.326865200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:29.326865200Z\", \"end\": \"2023-09-20T20:30:29.326865200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:29Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:44.495051700Z\", \"end\": \"2023-09-20T20:30:44.495051700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:44.495051700Z\", \"end\": \"2023-09-20T20:30:44.495051700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:44.495051700Z\", \"end\": \"2023-09-20T20:30:44.495051700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:44Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:59.677787Z\", \"end\": \"2023-09-20T20:30:59.677787Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:59.677787Z\", \"end\": \"2023-09-20T20:30:59.677787Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:59.677787Z\", \"end\": \"2023-09-20T20:30:59.677787Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:59.855251400Z\", \"end\": \"2023-09-20T20:30:59.855251400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:59.855251400Z\", \"end\": \"2023-09-20T20:30:59.855251400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:25:59.855251400Z\", \"end\": \"2023-09-20T20:30:59.855251400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:25:59Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:15.396532200Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:15.396532200Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:15.396532200Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:16.438233Z\", \"end\": \"2023-09-20T20:31:16.438233Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:16.438233Z\", \"end\": \"2023-09-20T20:31:16.438233Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:16.438233Z\", \"end\": \"2023-09-20T20:31:16.438233Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:16.616727700Z\", \"end\": \"2023-09-20T20:31:16.616727700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:16.616727700Z\", \"end\": \"2023-09-20T20:31:16.616727700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:16.616727700Z\", \"end\": \"2023-09-20T20:31:16.616727700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:16.693717600Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:16.693717600Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:16.693717600Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:16.755755900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:16.755755900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:16.755755900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:16.939445500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:16.939445500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:26:16.939445500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:17.302565400Z\", \"end\": \"2023-09-20T20:31:17.302565400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:17.302565400Z\", \"end\": \"2023-09-20T20:31:17.302565400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:17.302565400Z\", \"end\": \"2023-09-20T20:31:17.302565400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:18.493400400Z\", \"end\": \"2023-09-20T20:31:18.493400400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:18.493400400Z\", \"end\": \"2023-09-20T20:31:18.493400400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:18.493400400Z\", \"end\": \"2023-09-20T20:31:18.493400400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:32Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:32Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:32Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:32Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:32.588028100Z\", \"end\": \"2023-09-20T20:31:32.588028100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:32.588028100Z\", \"end\": \"2023-09-20T20:31:32.588028100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:32.588028100Z\", \"end\": \"2023-09-20T20:31:32.588028100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:32Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:47Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:47.718471700Z\", \"end\": \"2023-09-20T20:31:47.718471700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:47.718471700Z\", \"end\": \"2023-09-20T20:31:47.718471700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:26:47.718471700Z\", \"end\": \"2023-09-20T20:31:47.718471700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:26:47Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:02.957717500Z\", \"end\": \"2023-09-20T20:32:02.957717500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:02.957717500Z\", \"end\": \"2023-09-20T20:32:02.957717500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:02.957717500Z\", \"end\": \"2023-09-20T20:32:02.957717500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:27:03.602726400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:27:03.602726400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:27:03.602726400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:18.776478600Z\", \"end\": \"2023-09-20T20:32:18.776478600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:18.776478600Z\", \"end\": \"2023-09-20T20:32:18.776478600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:18.776478600Z\", \"end\": \"2023-09-20T20:32:18.776478600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:34Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:34.022634Z\", \"end\": \"2023-09-20T20:32:34.022634Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:34.022634Z\", \"end\": \"2023-09-20T20:32:34.022634Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:34.022634Z\", \"end\": \"2023-09-20T20:32:34.022634Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:34Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:36Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:36.051298800Z\", \"end\": \"2023-09-20T20:32:36.051298800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:36.051298800Z\", \"end\": \"2023-09-20T20:32:36.051298800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:36.051298800Z\", \"end\": \"2023-09-20T20:32:36.051298800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:36Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:51Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:51.235772400Z\", \"end\": \"2023-09-20T20:32:51.235772400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:51.235772400Z\", \"end\": \"2023-09-20T20:32:51.235772400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:27:51.235772400Z\", \"end\": \"2023-09-20T20:32:51.235772400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:27:51Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:06.693861600Z\", \"end\": \"2023-09-20T20:33:06.693861600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:06.693861600Z\", \"end\": \"2023-09-20T20:33:06.693861600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:06.693861600Z\", \"end\": \"2023-09-20T20:33:06.693861600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:07.755122700Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:07.755122700Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:07.755122700Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:08.658424400Z\", \"end\": \"2023-09-20T20:33:08.658424400Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:08.658424400Z\", \"end\": \"2023-09-20T20:33:08.658424400Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:08.658424400Z\", \"end\": \"2023-09-20T20:33:08.658424400Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:09.256331700Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:09.256331700Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:09.256331700Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:09.586674200Z\", \"end\": \"2023-09-20T20:33:09.586674200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:09.586674200Z\", \"end\": \"2023-09-20T20:33:09.586674200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:09.586674200Z\", \"end\": \"2023-09-20T20:33:09.586674200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:09.944832200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:09.944832200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:09.944832200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:10.294509400Z\", \"end\": \"2023-09-20T20:33:10.294509400Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:10.294509400Z\", \"end\": \"2023-09-20T20:33:10.294509400Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:10.294509400Z\", \"end\": \"2023-09-20T20:33:10.294509400Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:10.661603800Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:10.661603800Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:10.661603800Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:11.039340800Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:11.039340800Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:28:11.039340800Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:11Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:11.394433Z\", \"end\": \"2023-09-20T20:33:11.394433Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:11.394433Z\", \"end\": \"2023-09-20T20:33:11.394433Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:11.394433Z\", \"end\": \"2023-09-20T20:33:11.394433Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:12Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:21Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:26Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:26.707682800Z\", \"end\": \"2023-09-20T20:33:26.707682800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:26.707682800Z\", \"end\": \"2023-09-20T20:33:26.707682800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:26.707682800Z\", \"end\": \"2023-09-20T20:33:26.707682800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:41.886222300Z\", \"end\": \"2023-09-20T20:33:41.886222300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:41.886222300Z\", \"end\": \"2023-09-20T20:33:41.886222300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:41.886222300Z\", \"end\": \"2023-09-20T20:33:41.886222300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:41Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:42Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:42.059780Z\", \"end\": \"2023-09-20T20:33:42.059780Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:42.059780Z\", \"end\": \"2023-09-20T20:33:42.059780Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:42.059780Z\", \"end\": \"2023-09-20T20:33:42.059780Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:42Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:57Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:57.230694500Z\", \"end\": \"2023-09-20T20:33:57.230694500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:57.230694500Z\", \"end\": \"2023-09-20T20:33:57.230694500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:28:57.230694500Z\", \"end\": \"2023-09-20T20:33:57.230694500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:28:57Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:12.458392400Z\", \"end\": \"2023-09-20T20:34:12.458392400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:12.458392400Z\", \"end\": \"2023-09-20T20:34:12.458392400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:12.458392400Z\", \"end\": \"2023-09-20T20:34:12.458392400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:29:12.645414700Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:29:12.645414700Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:29:12.645414700Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:27.810947300Z\", \"end\": \"2023-09-20T20:34:27.810947300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:27.810947300Z\", \"end\": \"2023-09-20T20:34:27.810947300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:27.810947300Z\", \"end\": \"2023-09-20T20:34:27.810947300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:27.980500100Z\", \"end\": \"2023-09-20T20:34:27.980500100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:27.980500100Z\", \"end\": \"2023-09-20T20:34:27.980500100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:27.980500100Z\", \"end\": \"2023-09-20T20:34:27.980500100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:27Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:43.218883500Z\", \"end\": \"2023-09-20T20:34:43.218883500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:43.218883500Z\", \"end\": \"2023-09-20T20:34:43.218883500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:43.218883500Z\", \"end\": \"2023-09-20T20:34:43.218883500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:43Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:58Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:58.413803900Z\", \"end\": \"2023-09-20T20:34:58.413803900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:58.413803900Z\", \"end\": \"2023-09-20T20:34:58.413803900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:29:58.413803900Z\", \"end\": \"2023-09-20T20:34:58.413803900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:29:58Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:13.811574300Z\", \"end\": \"2023-09-20T20:35:13.811574300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:13.811574300Z\", \"end\": \"2023-09-20T20:35:13.811574300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:13.811574300Z\", \"end\": \"2023-09-20T20:35:13.811574300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:14.709903500Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:14.709903500Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:14.709903500Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:15.267754500Z\", \"end\": \"2023-09-20T20:35:15.267754500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:15.267754500Z\", \"end\": \"2023-09-20T20:35:15.267754500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:15.267754500Z\", \"end\": \"2023-09-20T20:35:15.267754500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:15.658544600Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:15.658544600Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:15.658544600Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:16.021185200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:16.021185200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:16.021185200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:16.403429100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:16.403429100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:30:16.403429100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:16.753981600Z\", \"end\": \"2023-09-20T20:35:16.753981600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:16.753981600Z\", \"end\": \"2023-09-20T20:35:16.753981600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:16.753981600Z\", \"end\": \"2023-09-20T20:35:16.753981600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:17.105386400Z\", \"end\": \"2023-09-20T20:35:17.105386400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:17.105386400Z\", \"end\": \"2023-09-20T20:35:17.105386400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:17.105386400Z\", \"end\": \"2023-09-20T20:35:17.105386400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:31Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:31Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:31Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:32Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:32.070453900Z\", \"end\": \"2023-09-20T20:35:32.070453900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:32.070453900Z\", \"end\": \"2023-09-20T20:35:32.070453900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:32.070453900Z\", \"end\": \"2023-09-20T20:35:32.070453900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:32Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:47Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:47.101897200Z\", \"end\": \"2023-09-20T20:35:47.101897200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:47.101897200Z\", \"end\": \"2023-09-20T20:35:47.101897200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:30:47.101897200Z\", \"end\": \"2023-09-20T20:35:47.101897200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:30:47Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:02.334026800Z\", \"end\": \"2023-09-20T20:36:02.334026800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:02.334026800Z\", \"end\": \"2023-09-20T20:36:02.334026800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:02.334026800Z\", \"end\": \"2023-09-20T20:36:02.334026800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:31:02.370811400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:31:02.370811400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:31:02.370811400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:17.470028700Z\", \"end\": \"2023-09-20T20:36:17.470028700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:17.470028700Z\", \"end\": \"2023-09-20T20:36:17.470028700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:17.470028700Z\", \"end\": \"2023-09-20T20:36:17.470028700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:32Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:32.484403200Z\", \"end\": \"2023-09-20T20:36:32.484403200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:32.484403200Z\", \"end\": \"2023-09-20T20:36:32.484403200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:32.484403200Z\", \"end\": \"2023-09-20T20:36:32.484403200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:32Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:47Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:47.623779800Z\", \"end\": \"2023-09-20T20:36:47.623779800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:47.623779800Z\", \"end\": \"2023-09-20T20:36:47.623779800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:31:47.623779800Z\", \"end\": \"2023-09-20T20:36:47.623779800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:31:47Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:03.157080100Z\", \"end\": \"2023-09-20T20:37:03.157080100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:03.157080100Z\", \"end\": \"2023-09-20T20:37:03.157080100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:03.157080100Z\", \"end\": \"2023-09-20T20:37:03.157080100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:03.220990800Z\", \"end\": \"2023-09-20T20:37:03.220990800Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:03.220990800Z\", \"end\": \"2023-09-20T20:37:03.220990800Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:03.220990800Z\", \"end\": \"2023-09-20T20:37:03.220990800Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:03.374439200Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:03.374439200Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:03.374439200Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:03.375452200Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:03.375452200Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:03.375452200Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:04.812605Z\", \"end\": \"2023-09-20T20:37:04.812605Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:04.812605Z\", \"end\": \"2023-09-20T20:37:04.812605Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:04.812605Z\", \"end\": \"2023-09-20T20:37:04.812605Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:05.726995200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:05.726995200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:05.726995200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:06.806315Z\", \"end\": \"2023-09-20T20:37:06.806315Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:06.806315Z\", \"end\": \"2023-09-20T20:37:06.806315Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:06.806315Z\", \"end\": \"2023-09-20T20:37:06.806315Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:07.570601400Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:07.570601400Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:07.570601400Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:07.965481Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:07.965481Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:32:07.965481Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:07Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:07Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:08.320941800Z\", \"end\": \"2023-09-20T20:37:08.320941800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:08.320941800Z\", \"end\": \"2023-09-20T20:37:08.320941800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:08.320941800Z\", \"end\": \"2023-09-20T20:37:08.320941800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:10Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:13Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:23Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:23Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:23Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:23.698433500Z\", \"end\": \"2023-09-20T20:37:23.698433500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:23.698433500Z\", \"end\": \"2023-09-20T20:37:23.698433500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:23.698433500Z\", \"end\": \"2023-09-20T20:37:23.698433500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:23Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:38Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:38.879488300Z\", \"end\": \"2023-09-20T20:37:38.879488300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:38.879488300Z\", \"end\": \"2023-09-20T20:37:38.879488300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:38.879488300Z\", \"end\": \"2023-09-20T20:37:38.879488300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:38Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:39Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:39.054890700Z\", \"end\": \"2023-09-20T20:37:39.054890700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:39.054890700Z\", \"end\": \"2023-09-20T20:37:39.054890700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:39.054890700Z\", \"end\": \"2023-09-20T20:37:39.054890700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:39Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:54.237544200Z\", \"end\": \"2023-09-20T20:37:54.237544200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:54.237544200Z\", \"end\": \"2023-09-20T20:37:54.237544200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:32:54.237544200Z\", \"end\": \"2023-09-20T20:37:54.237544200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:32:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:09.412308200Z\", \"end\": \"2023-09-20T20:38:09.412308200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:09.412308200Z\", \"end\": \"2023-09-20T20:38:09.412308200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:09.412308200Z\", \"end\": \"2023-09-20T20:38:09.412308200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:33:09.594688800Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:33:09.594688800Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:33:09.594688800Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:25.216665300Z\", \"end\": \"2023-09-20T20:38:25.216665300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:25.216665300Z\", \"end\": \"2023-09-20T20:38:25.216665300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:25.216665300Z\", \"end\": \"2023-09-20T20:38:25.216665300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:25Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:26.628206100Z\", \"end\": \"2023-09-20T20:38:26.628206100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:26.628206100Z\", \"end\": \"2023-09-20T20:38:26.628206100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:26.628206100Z\", \"end\": \"2023-09-20T20:38:26.628206100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:26Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:42Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:42.475946600Z\", \"end\": \"2023-09-20T20:38:42.475946600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:42.475946600Z\", \"end\": \"2023-09-20T20:38:42.475946600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:42.475946600Z\", \"end\": \"2023-09-20T20:38:42.475946600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:42Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:57Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:57.667725800Z\", \"end\": \"2023-09-20T20:38:57.667725800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:57.667725800Z\", \"end\": \"2023-09-20T20:38:57.667725800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:33:57.667725800Z\", \"end\": \"2023-09-20T20:38:57.667725800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:33:57Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:12.837782600Z\", \"end\": \"2023-09-20T20:39:12.837782600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:12.837782600Z\", \"end\": \"2023-09-20T20:39:12.837782600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:12.837782600Z\", \"end\": \"2023-09-20T20:39:12.837782600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:13.002283800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:13.002283800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:13.002283800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:13.228695500Z\", \"end\": \"2023-09-20T20:39:13.228695500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:13.228695500Z\", \"end\": \"2023-09-20T20:39:13.228695500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:13.228695500Z\", \"end\": \"2023-09-20T20:39:13.228695500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:13.615029100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:13.615029100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:13.615029100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:13.972411100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:13.972411100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:13.972411100Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:14.421289700Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:14.421289700Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:34:14.421289700Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:14Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:14.768446600Z\", \"end\": \"2023-09-20T20:39:14.768446600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:14.768446600Z\", \"end\": \"2023-09-20T20:39:14.768446600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:14.768446600Z\", \"end\": \"2023-09-20T20:39:14.768446600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:24Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:29Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:29Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:29Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:30Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:30.114523100Z\", \"end\": \"2023-09-20T20:39:30.114523100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:30.114523100Z\", \"end\": \"2023-09-20T20:39:30.114523100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:30.114523100Z\", \"end\": \"2023-09-20T20:39:30.114523100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:30Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:45Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:45.330209300Z\", \"end\": \"2023-09-20T20:39:45.330209300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:45.330209300Z\", \"end\": \"2023-09-20T20:39:45.330209300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:34:45.330209300Z\", \"end\": \"2023-09-20T20:39:45.330209300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:34:45Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:00Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:00.530963700Z\", \"end\": \"2023-09-20T20:40:00.530963700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:00.530963700Z\", \"end\": \"2023-09-20T20:40:00.530963700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:00.530963700Z\", \"end\": \"2023-09-20T20:40:00.530963700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:00Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:15.711967500Z\", \"end\": \"2023-09-20T20:40:15.711967500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:15.711967500Z\", \"end\": \"2023-09-20T20:40:15.711967500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:15.711967500Z\", \"end\": \"2023-09-20T20:40:15.711967500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:35:15.872501100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:35:15.872501100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:35:15.872501100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:31Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:31.030460400Z\", \"end\": \"2023-09-20T20:40:31.030460400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:31.030460400Z\", \"end\": \"2023-09-20T20:40:31.030460400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:31.030460400Z\", \"end\": \"2023-09-20T20:40:31.030460400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:31Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:31Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:31.232881900Z\", \"end\": \"2023-09-20T20:40:31.232881900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:31.232881900Z\", \"end\": \"2023-09-20T20:40:31.232881900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:31.232881900Z\", \"end\": \"2023-09-20T20:40:31.232881900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:31Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:46Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:46.419121400Z\", \"end\": \"2023-09-20T20:40:46.419121400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:46.419121400Z\", \"end\": \"2023-09-20T20:40:46.419121400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:35:46.419121400Z\", \"end\": \"2023-09-20T20:40:46.419121400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:35:46Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:01.608852800Z\", \"end\": \"2023-09-20T20:41:01.608852800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:01.608852800Z\", \"end\": \"2023-09-20T20:41:01.608852800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:01.608852800Z\", \"end\": \"2023-09-20T20:41:01.608852800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:01Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:17.037344800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:17.037344800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:17.037344800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:17.593344800Z\", \"end\": \"2023-09-20T20:41:17.593344800Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:17.593344800Z\", \"end\": \"2023-09-20T20:41:17.593344800Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:17.593344800Z\", \"end\": \"2023-09-20T20:41:17.593344800Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:17.976470800Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:17.976470800Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:17.976470800Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:18.484128200Z\", \"end\": \"2023-09-20T20:41:18.484128200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:18.484128200Z\", \"end\": \"2023-09-20T20:41:18.484128200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:18.484128200Z\", \"end\": \"2023-09-20T20:41:18.484128200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:18.640251600Z\", \"end\": \"2023-09-20T20:41:18.640251600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:18.640251600Z\", \"end\": \"2023-09-20T20:41:18.640251600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:18.640251600Z\", \"end\": \"2023-09-20T20:41:18.640251600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:18.735200900Z\", \"end\": \"2023-09-20T20:41:18.735200900Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:18.735200900Z\", \"end\": \"2023-09-20T20:41:18.735200900Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:18.735200900Z\", \"end\": \"2023-09-20T20:41:18.735200900Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:18.894912Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:18.894912Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:18.894912Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:18.973750500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:18.973750500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:18.973750500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:19Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:19.099635900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:19.099635900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:36:19.099635900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:19Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:19Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:19Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:19.190866300Z\", \"end\": \"2023-09-20T20:41:19.190866300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:19.190866300Z\", \"end\": \"2023-09-20T20:41:19.190866300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:19.190866300Z\", \"end\": \"2023-09-20T20:41:19.190866300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:19Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:25Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:29Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:33Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:33.551722900Z\", \"end\": \"2023-09-20T20:41:33.551722900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:33.551722900Z\", \"end\": \"2023-09-20T20:41:33.551722900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:33.551722900Z\", \"end\": \"2023-09-20T20:41:33.551722900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:33Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:34Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:34Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:34Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:48Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:48.751725800Z\", \"end\": \"2023-09-20T20:41:48.751725800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:48.751725800Z\", \"end\": \"2023-09-20T20:41:48.751725800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:36:48.751725800Z\", \"end\": \"2023-09-20T20:41:48.751725800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:36:48Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:37:03.825107100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:37:03.825107100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:37:03.825107100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:03.825616100Z\", \"end\": \"2023-09-20T20:42:03.825616100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:03.825616100Z\", \"end\": \"2023-09-20T20:42:03.825616100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:03.825616100Z\", \"end\": \"2023-09-20T20:42:03.825616100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:18.961945400Z\", \"end\": \"2023-09-20T20:42:18.961945400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:18.961945400Z\", \"end\": \"2023-09-20T20:42:18.961945400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:18.961945400Z\", \"end\": \"2023-09-20T20:42:18.961945400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:34Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:34.055607900Z\", \"end\": \"2023-09-20T20:42:34.055607900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:34.055607900Z\", \"end\": \"2023-09-20T20:42:34.055607900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:34.055607900Z\", \"end\": \"2023-09-20T20:42:34.055607900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:34Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:49Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:49.091569500Z\", \"end\": \"2023-09-20T20:42:49.091569500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:49.091569500Z\", \"end\": \"2023-09-20T20:42:49.091569500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:37:49.091569500Z\", \"end\": \"2023-09-20T20:42:49.091569500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:37:49Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:04.252247700Z\", \"end\": \"2023-09-20T20:43:04.252247700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:04.252247700Z\", \"end\": \"2023-09-20T20:43:04.252247700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:04.252247700Z\", \"end\": \"2023-09-20T20:43:04.252247700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:04.946620300Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:04.946620300Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:04.946620300Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:05.495344100Z\", \"end\": \"2023-09-20T20:43:05.495344100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:05.495344100Z\", \"end\": \"2023-09-20T20:43:05.495344100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:05.495344100Z\", \"end\": \"2023-09-20T20:43:05.495344100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:06.655960900Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:06.655960900Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:06.655960900Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:06Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:07.635986300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:07.635986300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:07.635986300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:08.209706500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:08.209706500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:38:08.209706500Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:08Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:08.552348600Z\", \"end\": \"2023-09-20T20:43:08.552348600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:08.552348600Z\", \"end\": \"2023-09-20T20:43:08.552348600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:08.552348600Z\", \"end\": \"2023-09-20T20:43:08.552348600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:09Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:14Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:18Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:23Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:23Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:23Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:23Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:23.920878600Z\", \"end\": \"2023-09-20T20:43:23.920878600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:23.920878600Z\", \"end\": \"2023-09-20T20:43:23.920878600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:23.920878600Z\", \"end\": \"2023-09-20T20:43:23.920878600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:23Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:39Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:39.117277200Z\", \"end\": \"2023-09-20T20:43:39.117277200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:39.117277200Z\", \"end\": \"2023-09-20T20:43:39.117277200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:39.117277200Z\", \"end\": \"2023-09-20T20:43:39.117277200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:39Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:54.303843Z\", \"end\": \"2023-09-20T20:43:54.303843Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:54.303843Z\", \"end\": \"2023-09-20T20:43:54.303843Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:38:54.303843Z\", \"end\": \"2023-09-20T20:43:54.303843Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:38:54Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:39:09.499739100Z\", \"end\": \"2023-09-20T20:44:09.499739100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:39:09.499739100Z\", \"end\": \"2023-09-20T20:44:09.499739100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:39:09.499739100Z\", \"end\": \"2023-09-20T20:44:09.499739100Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:39:09.669500300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:39:09.669500300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:39:09.669500300Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:24Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:39:24.873237Z\", \"end\": \"2023-09-20T20:44:24.873237Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:39:24.873237Z\", \"end\": \"2023-09-20T20:44:24.873237Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:39:24.873237Z\", \"end\": \"2023-09-20T20:44:24.873237Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:24Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:39:40.039674400Z\", \"end\": \"2023-09-20T20:44:40.039674400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:39:40.039674400Z\", \"end\": \"2023-09-20T20:44:40.039674400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:39:40.039674400Z\", \"end\": \"2023-09-20T20:44:40.039674400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:46Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sdr","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:46Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sds","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:48Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:48Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-slr","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:48Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:48Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sls","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:49Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swr","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:49Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-sws","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:49Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:50Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 1 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 1 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 1 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:50Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:50Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 2 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 2 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 2 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:50Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:50Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 3 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 3 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 3 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:50Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:51Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 4 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 4 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 4 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:51Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"CreateRequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"CreateRequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:51Z","EventId":0,"LogLevel":"Warning","Category":"Rebus.Retry.ErrorTracking.InMemErrorTracker","Message":"Unhandled exception 5 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)","State":{"Message":"Unhandled exception 5 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\"","{OriginalFormat}":"Unhandled exception 5 while handling message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:51Z","EventId":0,"LogLevel":"Error","Category":"Rebus.Retry.PoisonQueues.PoisonQueueErrorHandler","Message":"Moving message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\" to error queue \"error\"","Exception":"System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)  ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)    --- End of inner exception stack trace ---  ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---   ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66    at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()    at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)    at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<--- ","State":{"Message":"Moving message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\" to error queue \"error\"","{OriginalFormat}":"Moving message with ID \"f9860b8e-32cd-4a2f-8a4a-2446e2256314\" to error queue \"error\""},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:51Z","EventId":11,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-senttime: 2023-09-20T22:39:48.1711694+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q","State":{"Message":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-senttime: 2023-09-20T22:39:48.1711694+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q","{OriginalFormat}":"Unhandled message has been received. \r\nMessage raw body: 1F-8B-08-00-00-00-00-00-00-0A-E3-12-29-49-2D-2E-89-2F-2D-D6-35-32-30-36-B5-D4-2D-2E-2F-CE-4B-4D-17-C2-2A-AA-C0-78-CA-8E-97-8B-DB-40-DF-48-41-0B-08-ED-15-EC-17-D5-02-F9-0C-8C-4C-2C-AC-6C-EC-1C-9C-5C-DC-00-4C-CC-DC-4C-4E-00-00-00 \r\nMessage headers: \r\n----cc.disco.client: my-test-client\r\n----rbs2-intent: p2p\r\n----rbs2-msg-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-senttime: 2023-09-20T22:39:48.1711694+00:00\r\n----rbs2-msg-type: Abs.Messaging.Message`1[[Abs.CommonCore.Contracts.Proto.Disco.Schedules.DiscoCreateScheduleRequest, Abs.CommonCore.Contracts]], Abs.Messaging\r\n----rbs2-corr-id: f9860b8e-32cd-4a2f-8a4a-2446e2256314\r\n----rbs2-corr-seq: 0\r\n----rbs2-content-encoding: gzip\r\n----rbs2-error-details: System.AggregateException: 5 unhandled exceptions (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist) (Queue 'cc.disco.schedule.response.my-test-client.q' does not exist)\r\n ---> Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)\r\n   --- End of inner exception stack trace ---\r\n ---> (Inner Exception #1) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #2) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #3) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n ---> (Inner Exception #4) Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.schedule.response.my-test-client.q' does not exist\r\n ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.schedule.response.my-test-client.q' in vhost '/'', classId=50, methodId=10\r\n   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)\r\n   at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)\r\n   at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   --- End of inner exception stack trace ---\r\n   at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)\r\n   at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)\r\n   at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)\r\n   at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)\r\n   at Rebus.Transport.TransactionContext.Complete()\r\n   at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)\r\n   at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)\r\n   at Abs.CommonCore.Disco.Scheduler.Handlers.CreateRequestHandler.Handle(Message`1 message) in C:\\app\\service\\Scheduler\\Handlers\\CreateRequestHandler.cs:line 66\r\n   at Rebus.Pipeline.Receive.HandlerInvoker`1.Invoke()\r\n   at Rebus.Pipeline.Receive.DispatchIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Sagas.LoadSagaDataStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.ActivateHandlersStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleRoutingSlipsStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.DeserializeIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.DataBus.ClaimCheck.HydrateIncomingMessageStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Pipeline.Receive.HandleDeferredMessagesStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.FailFast.FailFastStep.Process(IncomingStepContext context, Func`1 next)\r\n   at Rebus.Retry.Simple.SimpleRetryStrategyStep.DispatchWithTrackerIdentifier(Func`1 next, String identifierToTrackMessageBy, ITransactionContext transactionContext, String messageId, String secondLevelMessageId)<---\r\n\r\n----rbs2-source-queue: cc.disco.create-schedule.request.q"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:55Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:39:55.217051400Z\", \"end\": \"2023-09-20T19:44:55.217051400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:39:55.217051400Z\", \"end\": \"2023-09-20T19:44:55.217051400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:39:55.217051400Z\", \"end\": \"2023-09-20T19:44:55.217051400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:39:55Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:10.650561700Z\", \"end\": \"2023-09-20T19:45:10.650561700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:10.650561700Z\", \"end\": \"2023-09-20T19:45:10.650561700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:10.650561700Z\", \"end\": \"2023-09-20T19:45:10.650561700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:11.846941Z\", \"end\": \"2023-09-20T19:45:11.846941Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:11.846941Z\", \"end\": \"2023-09-20T19:45:11.846941Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:11.846941Z\", \"end\": \"2023-09-20T19:45:11.846941Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:12.758512700Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:12.758512700Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:12.758512700Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:13.714551600Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:13.714551600Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:13.714551600Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:14.700212700Z\", \"end\": \"2023-09-20T19:45:14.700212700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:14.700212700Z\", \"end\": \"2023-09-20T19:45:14.700212700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:14.700212700Z\", \"end\": \"2023-09-20T19:45:14.700212700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:14Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:15.255449200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:15.255449200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:15.255449200Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:15.702717200Z\", \"end\": \"2023-09-20T19:45:15.702717200Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:15.702717200Z\", \"end\": \"2023-09-20T19:45:15.702717200Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:15.702717200Z\", \"end\": \"2023-09-20T19:45:15.702717200Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:16.107839900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:16.107839900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:16.107839900Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:16.543026200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:16.543026200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:40:16.543026200Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:40:16.922996400Z\", \"end\": \"2023-09-20T20:45:16.922996400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:40:16.922996400Z\", \"end\": \"2023-09-20T20:45:16.922996400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T20:40:16.922996400Z\", \"end\": \"2023-09-20T20:45:16.922996400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:26Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:31Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:31Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:31Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:32Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:32.105578900Z\", \"end\": \"2023-09-20T19:45:32.105578900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:32.105578900Z\", \"end\": \"2023-09-20T19:45:32.105578900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:32.105578900Z\", \"end\": \"2023-09-20T19:45:32.105578900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:32Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:47Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:47.279064400Z\", \"end\": \"2023-09-20T19:45:47.279064400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:47.279064400Z\", \"end\": \"2023-09-20T19:45:47.279064400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:40:47.279064400Z\", \"end\": \"2023-09-20T19:45:47.279064400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:40:47Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:02.477716500Z\", \"end\": \"2023-09-20T19:46:02.477716500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:02.477716500Z\", \"end\": \"2023-09-20T19:46:02.477716500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:02.477716500Z\", \"end\": \"2023-09-20T19:46:02.477716500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:41:02.644139400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:41:02.644139400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:41:02.644139400Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:02Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:17.934720400Z\", \"end\": \"2023-09-20T19:46:17.934720400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:17.934720400Z\", \"end\": \"2023-09-20T19:46:17.934720400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:17.934720400Z\", \"end\": \"2023-09-20T19:46:17.934720400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:18.126410400Z\", \"end\": \"2023-09-20T19:46:18.126410400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:18.126410400Z\", \"end\": \"2023-09-20T19:46:18.126410400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:18.126410400Z\", \"end\": \"2023-09-20T19:46:18.126410400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:18Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:33Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:33.293462500Z\", \"end\": \"2023-09-20T19:46:33.293462500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:33.293462500Z\", \"end\": \"2023-09-20T19:46:33.293462500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:33.293462500Z\", \"end\": \"2023-09-20T19:46:33.293462500Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:33Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:48Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:48.464055900Z\", \"end\": \"2023-09-20T19:46:48.464055900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:48.464055900Z\", \"end\": \"2023-09-20T19:46:48.464055900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:41:48.464055900Z\", \"end\": \"2023-09-20T19:46:48.464055900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:41:48Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:03.908230400Z\", \"end\": \"2023-09-20T19:47:03.908230400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:03.908230400Z\", \"end\": \"2023-09-20T19:47:03.908230400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:03.908230400Z\", \"end\": \"2023-09-20T19:47:03.908230400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:03Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:04.930045200Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:04.930045200Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:04.930045200Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:04Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:05.158360600Z\", \"end\": \"2023-09-20T19:47:05.158360600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:05.158360600Z\", \"end\": \"2023-09-20T19:47:05.158360600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:05.158360600Z\", \"end\": \"2023-09-20T19:47:05.158360600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:05.301960100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:05.301960100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:05.301960100Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:05.368128400Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:05.368128400Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:05.368128400Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:05.476109700Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:05.476109700Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:42:05.476109700Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:05.659460400Z\", \"end\": \"2023-09-20T19:47:05.659460400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:05.659460400Z\", \"end\": \"2023-09-20T19:47:05.659460400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:05.659460400Z\", \"end\": \"2023-09-20T19:47:05.659460400Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:05Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:06Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:07.560509300Z\", \"end\": \"2023-09-20T19:47:07.560509300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:07.560509300Z\", \"end\": \"2023-09-20T19:47:07.560509300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:07.560509300Z\", \"end\": \"2023-09-20T19:47:07.560509300Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:07Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:08.119989Z\", \"end\": \"2023-09-20T19:47:08.119989Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:08.119989Z\", \"end\": \"2023-09-20T19:47:08.119989Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:08.119989Z\", \"end\": \"2023-09-20T19:47:08.119989Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:08Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:08Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:11Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:15Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 5 seconds.","ClientName":"my-test-client","TotalSeconds":5,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:20Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error while sending request test_us-20359-swsneg to client my-test-client","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)    at Polly.AsyncPolicy.ExecuteAsync(Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.SendErrorResponse(Message`1 message, String clientName, String errorMessage, ErrorCode errorCode, Dictionary`2 headers) in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 136","State":{"Message":"Error while sending request test_us-20359-swsneg to client my-test-client","RequestId":"test_us-20359-swsneg","ClientName":"my-test-client","{OriginalFormat}":"Error while sending request {RequestId} to client {ClientName}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:20Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","State":{"Message":"Error Logger DLQ Handler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"Error Logger DLQ Handler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:20Z","EventId":1,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","State":{"Message":"DiscoDataResponse message with test_us-20359-swsneg from router could not be delivered to client my-test-client. Queue 'cc.disco.data.response.my-test-client.q' does not exist","RequestId":"test_us-20359-swsneg","Vendor":"router","ClientName":"my-test-client","ErrorMessage":"Queue 'cc.disco.data.response.my-test-client.q' does not exist","{OriginalFormat}":"DiscoDataResponse message with {RequestId} from {Vendor} could not be delivered to client {ClientName}. {ErrorMessage}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:23Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:23.450157Z\", \"end\": \"2023-09-20T19:47:23.450157Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:23.450157Z\", \"end\": \"2023-09-20T19:47:23.450157Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:23.450157Z\", \"end\": \"2023-09-20T19:47:23.450157Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:23Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:38Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:38.639380800Z\", \"end\": \"2023-09-20T19:47:38.639380800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:38.639380800Z\", \"end\": \"2023-09-20T19:47:38.639380800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:38.639380800Z\", \"end\": \"2023-09-20T19:47:38.639380800Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:38Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:53Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:53.816049700Z\", \"end\": \"2023-09-20T19:47:53.816049700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:53.816049700Z\", \"end\": \"2023-09-20T19:47:53.816049700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:42:53.816049700Z\", \"end\": \"2023-09-20T19:47:53.816049700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:42:53Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:09.121529200Z\", \"end\": \"2023-09-20T19:48:09.121529200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:09.121529200Z\", \"end\": \"2023-09-20T19:48:09.121529200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:09.121529200Z\", \"end\": \"2023-09-20T19:48:09.121529200Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:43:09.530681600Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:43:09.530681600Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:43:09.530681600Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:09Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:24Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:24.873843700Z\", \"end\": \"2023-09-20T19:48:24.873843700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:24.873843700Z\", \"end\": \"2023-09-20T19:48:24.873843700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:24.873843700Z\", \"end\": \"2023-09-20T19:48:24.873843700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:24Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:40.063740900Z\", \"end\": \"2023-09-20T19:48:40.063740900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:40.063740900Z\", \"end\": \"2023-09-20T19:48:40.063740900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:40.063740900Z\", \"end\": \"2023-09-20T19:48:40.063740900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:40Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:55Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:55.240005Z\", \"end\": \"2023-09-20T19:48:55.240005Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:55.240005Z\", \"end\": \"2023-09-20T19:48:55.240005Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:43:55.240005Z\", \"end\": \"2023-09-20T19:48:55.240005Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:43:55Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:10.778593600Z\", \"end\": \"2023-09-20T19:49:10.778593600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:10.778593600Z\", \"end\": \"2023-09-20T19:49:10.778593600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:10.778593600Z\", \"end\": \"2023-09-20T19:49:10.778593600Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:10Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:11.720446900Z\", \"end\": \"2023-09-20T19:49:11.720446900Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:11.720446900Z\", \"end\": \"2023-09-20T19:49:11.720446900Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-sdr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:11.720446900Z\", \"end\": \"2023-09-20T19:49:11.720446900Z\", \"intervalMilliseconds\": \"240000\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:11Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdr","State":{"Message":"RequestHandler received message with id: test_us-20359-sdr","RequestId":"test_us-20359-sdr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:12.839619800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:12.839619800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sds\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:12.839619800Z\" }, \"draftDataTypes\": { \"dataType\": [ \"Unknown\", \"MeanDraft\", \"AftDraft\", \"ForwardDraft\", \"MidshipDraftPort\", \"MidshipDraftStarboard\", \"Trim\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:12Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sds","State":{"Message":"RequestHandler received message with id: test_us-20359-sds","RequestId":"test_us-20359-sds","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:13.941647800Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:13.941647800Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sdsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:13.941647800Z\" }, \"draftDataTypes\": { \"dataType\": [ ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:13Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sdsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-sdsneg","RequestId":"test_us-20359-sdsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:15.119590700Z\", \"end\": \"2023-09-20T19:49:15.119590700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:15.119590700Z\", \"end\": \"2023-09-20T19:49:15.119590700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:15.119590700Z\", \"end\": \"2023-09-20T19:49:15.119590700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slr","State":{"Message":"RequestHandler received message with id: test_us-20359-slr","RequestId":"test_us-20359-slr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:15.477150Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:15.477150Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sls\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:15.477150Z\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sls","State":{"Message":"RequestHandler received message with id: test_us-20359-sls","RequestId":"test_us-20359-sls","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:15.880597300Z\", \"end\": \"2023-09-20T19:49:15.880597300Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:15.880597300Z\", \"end\": \"2023-09-20T19:49:15.880597300Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-swr\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:15.880597300Z\", \"end\": \"2023-09-20T19:49:15.880597300Z\", \"intervalMilliseconds\": \"240000\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:15Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swr","State":{"Message":"RequestHandler received message with id: test_us-20359-swr","RequestId":"test_us-20359-swr","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:16.271992Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:16.271992Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to test-client: { \"requestId\": \"test_us-20359-sws\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:16.271992Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-sws","State":{"Message":"RequestHandler received message with id: test_us-20359-sws","RequestId":"test_us-20359-sws","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:16.681757300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","State":{"Message":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:16.681757300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }","{OriginalFormat}":"Sending OnDemandSingle request to my-test-client: { \"requestId\": \"test_us-20359-swsneg\", \"destination\": \"Local\", \"onDemandSingle\": { \"target\": \"2023-09-20T22:44:16.681757300Z\" }, \"weatherDataTypes\": { \"dataType\": [ \"Unknown\", \"WetTemperature\", \"DryTemperature\", \"RelativeWindSpeed\", \"TrueWindDirection\", \"SeaWaterTemperature\", \"SeaWaterDepth\", \"AirPressure\", \"RelativeHumidity\", \"Swell\", \"SeaScale\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-swsneg","State":{"Message":"RequestHandler received message with id: test_us-20359-swsneg","RequestId":"test_us-20359-swsneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":4,"LogLevel":"Warning","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Client my-test-client is not registered for routing","State":{"Message":"Client my-test-client is not registered for routing","{OriginalFormat}":"Client my-test-client is not registered for routing"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 1 seconds.","ClientName":"my-test-client","TotalSeconds":1,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:16.882448700Z\", \"end\": \"2023-09-20T19:49:16.882448700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:16.882448700Z\", \"end\": \"2023-09-20T19:49:16.882448700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:16.882448700Z\", \"end\": \"2023-09-20T19:49:16.882448700Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:16Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:17.114344900Z\", \"end\": \"2023-09-20T19:49:17.114344900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","State":{"Message":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:17.114344900Z\", \"end\": \"2023-09-20T19:49:17.114344900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }","{OriginalFormat}":"Sending OnDemandRange request to test-client: { \"requestId\": \"test_us-20359-slrneg\", \"destination\": \"Local\", \"onDemandRange\": { \"start\": \"2023-09-20T16:44:17.114344900Z\", \"end\": \"2023-09-20T19:49:17.114344900Z\", \"intervalMilliseconds\": \"120000\" }, \"locationDataTypes\": { \"dataType\": [ \"Unknown\", \"Latitude\", \"Longitude\" ] } }"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:17Z","EventId":0,"LogLevel":"Information","Category":"Abs.CommonCore.Disco.Console.Program","Message":"RequestHandler received message with id: test_us-20359-slrneg","State":{"Message":"RequestHandler received message with id: test_us-20359-slrneg","RequestId":"test_us-20359-slrneg","{OriginalFormat}":"RequestHandler received message with id: {RequestId}"},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:17Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 2 seconds.","ClientName":"my-test-client","TotalSeconds":2,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:19Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 3 seconds.","ClientName":"my-test-client","TotalSeconds":3,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
{"Timestamp":"2023-09-20 22:44:22Z","EventId":7,"LogLevel":"Error","Category":"Abs.CommonCore.Disco.Console.Program","Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","Exception":"Rebus.Exceptions.RebusApplicationException: Queue 'cc.disco.data.response.my-test-client.q' does not exist  ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=404, text='NOT_FOUND - no queue 'cc.disco.data.response.my-test-client.q' in vhost '/'', classId=50, methodId=10    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)    at RabbitMQ.Client.Impl.ModelBase.QueueDeclare(String queue, Boolean passive, Boolean durable, Boolean exclusive, Boolean autoDelete, IDictionary`2 arguments)    at RabbitMQ.Client.Impl.AutorecoveringModel.QueueDeclarePassive(String queue)    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    --- End of inner exception stack trace ---    at Rebus.RabbitMq.RabbitMqTransport.CheckQueueExistence(FullyQualifiedRoutingKey routingKey, IModel model)    at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)    at Rebus.RabbitMq.RabbitMqTransport.EnsureQueueExists(FullyQualifiedRoutingKey routingKey, IModel model)    at Rebus.RabbitMq.RabbitMqTransport.DoSend(IEnumerable`1 outgoingMessages, IModel model, Boolean isExpress)    at Rebus.RabbitMq.RabbitMqTransport.SendOutgoingMessages(IEnumerable`1 outgoingMessages, ITransactionContext context)    at Rebus.Transport.AbstractRebusTransport.<>c__DisplayClass2_1.<<Send>b__1>d.MoveNext() --- End of stack trace from previous location ---    at Rebus.Transport.TransactionContext.InvokeAsync(Func`2 actions)    at Rebus.Transport.TransactionContext.Complete()    at Rebus.Bus.RebusBus.InnerSend(IEnumerable`1 destinationAddresses, Message logicalMessage)    at Abs.CommonCore.Drex.Shared.MessageBus.Publish.MessagePublisher.PublishAsync(Object message, String destinationQueueName, Dictionary`2 headers)    at Abs.CommonCore.Disco.Router.Handlers.RequestHandler.<>c__DisplayClass8_0.<<SendErrorResponse>b__2>d.MoveNext() in C:\\app\\service\\Router\\Handlers\\RequestHandler.cs:line 126 --- End of stack trace from previous location ---    at Polly.AsyncPolicy.<>c__DisplayClass40_0.<<ImplementationAsync>b__0>d.MoveNext() --- End of stack trace from previous location ---    at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)","State":{"Message":"Publish destination for client my-test-client could not be reached, retrying in 4 seconds.","ClientName":"my-test-client","TotalSeconds":4,"{OriginalFormat}":"Publish destination for client {ClientName} could not be reached, retrying in {TotalSeconds} seconds."},"Scopes":[]}
