Unhandled exception. System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. (rabbitmq-local:15671)
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|281_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.HttpConnectionWaiter`1.WaitForConnectionAsync(Boolean async, CancellationToken requestCancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at EasyNetQ.Management.Client.ManagementClient.PutAsync[T](RelativePath path, T item, CancellationToken cancellationToken)
   at Abs.CommonCore.Platform.MessengerConfigurator.RabbitMqConfigurator.CreateExchangeAsync(String busKey, ExchangeInfo exchange, CancellationToken cancellationToken)
   at Abs.CommonCore.Platform.MessengerConfigurator.RabbitMqConfigurator.CreateExchangeWithQueuesAsync(String busKey, ExchangeInfo exchange, QueueInfo[] queues, CancellationToken cancellationToken)
   at Abs.CommonCore.Disco.ServiceBusConfigurator.RabbitConfigurer.ConfigureExchanesAsync(String stdConfigFile, CancellationToken cancellationToken) in C:\app\service\ServiceBusConfigurator\RabbitConfigurer.cs:line 61
   at Abs.CommonCore.Disco.Console.ServiceRegistrar.InitializeRabbitConfigurer(IServiceCollection services, ILogger logger, DiscoConfiguration discoConfig, IFolderWatcher observer) in C:\app\service\Console\ServiceRegistrar.cs:line 52
   at Abs.CommonCore.Disco.Console.Program.Run(Action`1 setupHost, Action`1 overrideHost, String[] args, CancellationToken token) in C:\app\service\Console\Program.cs:line 33
   at Abs.CommonCore.Disco.Console.Program.<Main>(String[] args)
Unhandled exception. System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. (rabbitmq-local:15671)
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|281_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.HttpConnectionWaiter`1.WaitForConnectionAsync(Boolean async, CancellationToken requestCancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at EasyNetQ.Management.Client.ManagementClient.PutAsync[T](RelativePath path, T item, CancellationToken cancellationToken)
   at Abs.CommonCore.Platform.MessengerConfigurator.RabbitMqConfigurator.CreateExchangeAsync(String busKey, ExchangeInfo exchange, CancellationToken cancellationToken)
   at Abs.CommonCore.Platform.MessengerConfigurator.RabbitMqConfigurator.CreateExchangeWithQueuesAsync(String busKey, ExchangeInfo exchange, QueueInfo[] queues, CancellationToken cancellationToken)
   at Abs.CommonCore.Disco.ServiceBusConfigurator.RabbitConfigurer.ConfigureExchanesAsync(String stdConfigFile, CancellationToken cancellationToken) in C:\app\service\ServiceBusConfigurator\RabbitConfigurer.cs:line 61
   at Abs.CommonCore.Disco.Console.ServiceRegistrar.InitializeRabbitConfigurer(IServiceCollection services, ILogger logger, DiscoConfiguration discoConfig, IFolderWatcher observer) in C:\app\service\Console\ServiceRegistrar.cs:line 52
   at Abs.CommonCore.Disco.Console.Program.Run(Action`1 setupHost, Action`1 overrideHost, String[] args, CancellationToken token) in C:\app\service\Console\Program.cs:line 33
   at Abs.CommonCore.Disco.Console.Program.<Main>(String[] args)
Unhandled exception. System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. (rabbitmq-local:15671)
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|281_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.HttpConnectionWaiter`1.WaitForConnectionAsync(Boolean async, CancellationToken requestCancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at EasyNetQ.Management.Client.ManagementClient.PutAsync[T](RelativePath path, T item, CancellationToken cancellationToken)
   at Abs.CommonCore.Platform.MessengerConfigurator.RabbitMqConfigurator.CreateExchangeAsync(String busKey, ExchangeInfo exchange, CancellationToken cancellationToken)
   at Abs.CommonCore.Platform.MessengerConfigurator.RabbitMqConfigurator.CreateExchangeWithQueuesAsync(String busKey, ExchangeInfo exchange, QueueInfo[] queues, CancellationToken cancellationToken)
   at Abs.CommonCore.Disco.ServiceBusConfigurator.RabbitConfigurer.ConfigureExchanesAsync(String stdConfigFile, CancellationToken cancellationToken) in C:\app\service\ServiceBusConfigurator\RabbitConfigurer.cs:line 61
   at Abs.CommonCore.Disco.Console.ServiceRegistrar.InitializeRabbitConfigurer(IServiceCollection services, ILogger logger, DiscoConfiguration discoConfig, IFolderWatcher observer) in C:\app\service\Console\ServiceRegistrar.cs:line 52
   at Abs.CommonCore.Disco.Console.Program.Run(Action`1 setupHost, Action`1 overrideHost, String[] args, CancellationToken token) in C:\app\service\Console\Program.cs:line 33
   at Abs.CommonCore.Disco.Console.Program.<Main>(String[] args)
